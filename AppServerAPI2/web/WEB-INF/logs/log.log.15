[INFO][2017-08-16 17:46:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2017-07-18
参数2:2017-08-16
参数3:11
参数4:2017-07-18
参数5:2017-08-16
参数6:11
 
[INFO][2017-08-16 17:46:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_order_info.orderCountBrand: 
select distinct bra.* from cds_order_info ori left join cds_brand bra on ori.brand_id = bra.brand_id
        WHERE
        order_status in(1,2,3,4)
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
         
              AND stores_id = ? 
[INFO][2017-08-16 17:46:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2017-07-18
参数2:2017-08-16
参数3:11
 
[INFO][2017-08-16 17:46:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_good.getReportAnalyseDays: 
select good_name,
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count0',
            SUM(case when sale_time = ? then price else 0 end ) as 'price0',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count1',
            SUM(case when sale_time = ? then price else 0 end ) as 'price1',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count2',
            SUM(case when sale_time = ? then price else 0 end ) as 'price2',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count3',
            SUM(case when sale_time = ? then price else 0 end ) as 'price3',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count4',
            SUM(case when sale_time = ? then price else 0 end ) as 'price4',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count5',
            SUM(case when sale_time = ? then price else 0 end ) as 'price5',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count6',
            SUM(case when sale_time = ? then price else 0 end ) as 'price6',
         
        SUM(count) 'count',
        SUM(price) 'price'
        from (
        select Convert(varchar(10),sale_time,120) sale_time,price,good_name,stores_id,count from cds_ms_goods_list goods
        where
         goods.sale_time >= ? and goods.sale_time <= ? + ' 23:59:59'   
        union ALL
        select Convert(varchar(10),sale_time,120) sale_time,price,good_name,stores_id,count from view_cds_ms_goods_list goods
        where
         goods.create_date >= ? and goods.create_date <= ?+ ' 23:59:59'   
        ) goods
         
            where
              stores_id = ?  
         
        group by good_name
        order by count DESC 
[INFO][2017-08-16 17:46:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2017-08-10
参数2:2017-08-10
参数3:2017-08-11
参数4:2017-08-11
参数5:2017-08-12
参数6:2017-08-12
参数7:2017-08-13
参数8:2017-08-13
参数9:2017-08-14
参数10:2017-08-14
参数11:2017-08-15
参数12:2017-08-15
参数13:2017-08-16
参数14:2017-08-16
参数15:2017-08-10
参数16:2017-08-16
参数17:2017-08-10
参数18:2017-08-16
参数19:11
 
[INFO][2017-08-16 17:46:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_order_info.orderCountDay: 
SELECT
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) timeDay,
        SUM(case when fromin = '饿了么' then total_price else 0 end ) elm3,
        SUM(case when fromin = '美团' then total_price else 0 end ) mt3,
        SUM(case when fromin = '微信' then total_price else 0 end ) wx3,
        SUM(case when fromin = '百度外卖' then total_price else 0 end ) bdwm3,
        SUM(total_price) sum3,
        SUM(case when fromin = '饿了么' then 1 else 0 end ) elm1,
        SUM(case when fromin = '美团' then 1 else 0 end ) mt1,
        SUM(case when fromin = '微信' then 1 else 0 end ) wx1,
        SUM(case when fromin = '百度外卖' then 1 else 0 end ) bdwm1,
        count(*) sum1
        FROM
        (
        select goods_prcie+ship_fee+box_price total_price,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) timeDay,fromin,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) create_date,order_status FROM [dbo].[cds_order_info]
        where
        order_status in(1,2,3,4)
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
         
              AND stores_id = ?  
         
         
        union ALL
        select  goods_prcie+ship_fee+box_price total_price,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) timeDay,fromin,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) create_date,order_status FROM [dbo].[view_cds_order_info]
        where
        order_status in(1,2,3,4)
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
         
              AND stores_id = ?  
         
         
        ) temp
         
                GROUP BY create_date
                ORDER BY create_date 
[INFO][2017-08-16 17:46:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2017-08-10
参数2:2017-08-16
参数3:11
参数4:2017-08-10
参数5:2017-08-16
参数6:11
 
[INFO][2017-08-16 17:46:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_order_info.orderCountBrand: 
select distinct bra.* from cds_order_info ori left join cds_brand bra on ori.brand_id = bra.brand_id
        WHERE
        order_status in(1,2,3,4)
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
         
              AND stores_id = ? 
[INFO][2017-08-16 17:46:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2017-08-10
参数2:2017-08-16
参数3:11
 
[INFO][2017-08-16 17:46:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.orderOnTimeStores: 
select stores_id storesId,name storesName from cds_stores
         
         WHERE stores_id = ? 
        order by stores_id 
[INFO][2017-08-16 17:46:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:11
 
[INFO][2017-08-16 17:46:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_report.report2: 
select * from (
                select (case when SUM(temp.iscount)>0 then
                (SUM(temp.iscount)+0.0)/SUM(1)
                else 0 end) as storescount,
                  
                    (case when SUM(case when stores_id=11 then temp.iscount else 0 end)>0 then
                    (SUM(case when stores_id=11 then temp.iscount else 0 end)+0.0)/SUM(case when stores_id=11 then 1 else 0 end )
                    else 0 end) as cur_storescount0,
                 
                isnull(order_date,'合计') as order_date
                from (
                    select
                    s.stores_id,
                    s.name stores_name,
                    DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
                    CONVERT(varchar(100),o.create_date,23) as order_date,
                    (case when o.pack_user_time is null or DATEDIFF(minute,o.create_date,o.pack_user_time)>20 then 0 else 1 end ) as iscount
                    from cds_order_info o
                    left join cds_stores s on o.stores_id = s.stores_id
                    where o.create_date >= ?+' 00:00:00'
                             AND o.create_date <= ?+' 23:59:59'  
                    and o.service_time is null

                    union all

                   select
                    s.stores_id,
                    s.name stores_name,
                    DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
                    CONVERT(varchar(100),o.create_date,23) as order_date,
                    (case when o.pack_user_time is null or DATEDIFF(minute,o.create_date,o.pack_user_time)>20 then 0 else 1 end ) as iscount
                    from view_cds_order_info o
                    left join cds_stores s on o.stores_id = s.stores_id
                    where o.create_date >= ?+' 00:00:00'
                            AND o.create_date <= ?+' 23:59:59' 
                    and o.service_time is null
                ) temp
                group by temp.order_date
                with cube) t order by t.order_date 
[INFO][2017-08-16 17:46:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2017-08-10
参数2:2017-08-16
参数3:2017-08-10
参数4:2017-08-16
 
[INFO][2017-08-16 17:46:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_order_info.orderCountDay: 
SELECT
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) timeDay,
        SUM(case when fromin = '饿了么' then total_price else 0 end ) elm3,
        SUM(case when fromin = '美团' then total_price else 0 end ) mt3,
        SUM(case when fromin = '微信' then total_price else 0 end ) wx3,
        SUM(case when fromin = '百度外卖' then total_price else 0 end ) bdwm3,
        SUM(total_price) sum3,
        SUM(case when fromin = '饿了么' then 1 else 0 end ) elm1,
        SUM(case when fromin = '美团' then 1 else 0 end ) mt1,
        SUM(case when fromin = '微信' then 1 else 0 end ) wx1,
        SUM(case when fromin = '百度外卖' then 1 else 0 end ) bdwm1,
        count(*) sum1
        FROM
        (
        select goods_prcie+ship_fee+box_price total_price,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) timeDay,fromin,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) create_date,order_status FROM [dbo].[cds_order_info]
        where
        order_status in(1,2,3,4)
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
         
              AND stores_id = ?  
         
         
        union ALL
        select  goods_prcie+ship_fee+box_price total_price,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) timeDay,fromin,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) create_date,order_status FROM [dbo].[view_cds_order_info]
        where
        order_status in(1,2,3,4)
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
         
              AND stores_id = ?  
         
         
        ) temp
         
                GROUP BY create_date
                ORDER BY create_date 
[INFO][2017-08-16 17:46:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2017-08-10
参数2:2017-08-16
参数3:11
参数4:2017-08-10
参数5:2017-08-16
参数6:11
 
[INFO][2017-08-16 17:46:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_order_info.orderCountBrand: 
select distinct bra.* from cds_order_info ori left join cds_brand bra on ori.brand_id = bra.brand_id
        WHERE
        order_status in(1,2,3,4)
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
         
              AND stores_id = ? 
[INFO][2017-08-16 17:46:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2017-08-10
参数2:2017-08-16
参数3:11
 
[INFO][2017-08-16 17:46:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_order_info.orderCountDay: 
SELECT
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) timeDay,
        SUM(case when fromin = '饿了么' then total_price else 0 end ) elm3,
        SUM(case when fromin = '美团' then total_price else 0 end ) mt3,
        SUM(case when fromin = '微信' then total_price else 0 end ) wx3,
        SUM(case when fromin = '百度外卖' then total_price else 0 end ) bdwm3,
        SUM(total_price) sum3,
        SUM(case when fromin = '饿了么' then 1 else 0 end ) elm1,
        SUM(case when fromin = '美团' then 1 else 0 end ) mt1,
        SUM(case when fromin = '微信' then 1 else 0 end ) wx1,
        SUM(case when fromin = '百度外卖' then 1 else 0 end ) bdwm1,
        count(*) sum1
        FROM
        (
        select goods_prcie+ship_fee+box_price total_price,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) timeDay,fromin,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) create_date,order_status FROM [dbo].[cds_order_info]
        where
        order_status in(1,2,3,4)
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
         
              AND stores_id = ?  
         
         
        union ALL
        select  goods_prcie+ship_fee+box_price total_price,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) timeDay,fromin,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) create_date,order_status FROM [dbo].[view_cds_order_info]
        where
        order_status in(1,2,3,4)
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
         
              AND stores_id = ?  
         
         
        ) temp
         
                GROUP BY create_date
                ORDER BY create_date 
[INFO][2017-08-16 17:46:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2017-07-18
参数2:2017-08-16
参数3:11
参数4:2017-07-18
参数5:2017-08-16
参数6:11
 
[INFO][2017-08-16 17:46:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_order_info.orderCountBrand: 
select distinct bra.* from cds_order_info ori left join cds_brand bra on ori.brand_id = bra.brand_id
        WHERE
        order_status in(1,2,3,4)
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
         
              AND stores_id = ? 
[INFO][2017-08-16 17:46:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2017-07-18
参数2:2017-08-16
参数3:11
 
[INFO][2017-08-16 17:47:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-16 17:47:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-16 17:47:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-16 17:47:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-16 17:47:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-16 17:47:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1032
 
[INFO][2017-08-16 17:47:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_order_info.orderCountDay: 
SELECT
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) timeDay,
        SUM(case when fromin = '饿了么' then total_price else 0 end ) elm3,
        SUM(case when fromin = '美团' then total_price else 0 end ) mt3,
        SUM(case when fromin = '微信' then total_price else 0 end ) wx3,
        SUM(case when fromin = '百度外卖' then total_price else 0 end ) bdwm3,
        SUM(total_price) sum3,
        SUM(case when fromin = '饿了么' then 1 else 0 end ) elm1,
        SUM(case when fromin = '美团' then 1 else 0 end ) mt1,
        SUM(case when fromin = '微信' then 1 else 0 end ) wx1,
        SUM(case when fromin = '百度外卖' then 1 else 0 end ) bdwm1,
        count(*) sum1
        FROM
        (
        select goods_prcie+ship_fee+box_price total_price,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) timeDay,fromin,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) create_date,order_status FROM [dbo].[cds_order_info]
        where
        order_status in(1,2,3,4)
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
         
              AND stores_id = ?  
         
         
        union ALL
        select  goods_prcie+ship_fee+box_price total_price,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) timeDay,fromin,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) create_date,order_status FROM [dbo].[view_cds_order_info]
        where
        order_status in(1,2,3,4)
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
         
              AND stores_id = ?  
         
         
        ) temp
         
                GROUP BY create_date
                ORDER BY create_date 
[INFO][2017-08-16 17:47:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2017-08-10
参数2:2017-08-16
参数3:11
参数4:2017-08-10
参数5:2017-08-16
参数6:11
 
[INFO][2017-08-16 17:47:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_order_info.orderCountBrand: 
select distinct bra.* from cds_order_info ori left join cds_brand bra on ori.brand_id = bra.brand_id
        WHERE
        order_status in(1,2,3,4)
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
         
              AND stores_id = ? 
[INFO][2017-08-16 17:47:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2017-08-10
参数2:2017-08-16
参数3:11
 
[INFO][2017-08-16 17:47:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-16 17:47:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-16 17:47:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-16 17:47:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-16 17:47:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-16 17:47:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1029
 
[INFO][2017-08-16 17:47:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_order_info.orderCountDay: 
SELECT
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) timeDay,
        SUM(case when fromin = '饿了么' then total_price else 0 end ) elm3,
        SUM(case when fromin = '美团' then total_price else 0 end ) mt3,
        SUM(case when fromin = '微信' then total_price else 0 end ) wx3,
        SUM(case when fromin = '百度外卖' then total_price else 0 end ) bdwm3,
        SUM(total_price) sum3,
        SUM(case when fromin = '饿了么' then 1 else 0 end ) elm1,
        SUM(case when fromin = '美团' then 1 else 0 end ) mt1,
        SUM(case when fromin = '微信' then 1 else 0 end ) wx1,
        SUM(case when fromin = '百度外卖' then 1 else 0 end ) bdwm1,
        count(*) sum1
        FROM
        (
        select goods_prcie+ship_fee+box_price total_price,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) timeDay,fromin,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) create_date,order_status FROM [dbo].[cds_order_info]
        where
        order_status in(1,2,3,4)
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
         
              AND stores_id = ?  
         
         
        union ALL
        select  goods_prcie+ship_fee+box_price total_price,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) timeDay,fromin,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) create_date,order_status FROM [dbo].[view_cds_order_info]
        where
        order_status in(1,2,3,4)
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
         
              AND stores_id = ?  
         
         
        ) temp
         
                GROUP BY create_date
                ORDER BY create_date 
[INFO][2017-08-16 17:47:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2017-08-16
参数2:2017-08-16
参数3:11
参数4:2017-08-16
参数5:2017-08-16
参数6:11
 
[INFO][2017-08-16 17:47:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_order_info.orderCountBrand: 
select distinct bra.* from cds_order_info ori left join cds_brand bra on ori.brand_id = bra.brand_id
        WHERE
        order_status in(1,2,3,4)
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
         
              AND stores_id = ? 
[INFO][2017-08-16 17:47:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2017-08-16
参数2:2017-08-16
参数3:11
 
[INFO][2017-08-16 17:47:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_order_info.orderCountDay: 
SELECT
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) timeDay,
        SUM(case when fromin = '饿了么' then total_price else 0 end ) elm3,
        SUM(case when fromin = '美团' then total_price else 0 end ) mt3,
        SUM(case when fromin = '微信' then total_price else 0 end ) wx3,
        SUM(case when fromin = '百度外卖' then total_price else 0 end ) bdwm3,
        SUM(total_price) sum3,
        SUM(case when fromin = '饿了么' then 1 else 0 end ) elm1,
        SUM(case when fromin = '美团' then 1 else 0 end ) mt1,
        SUM(case when fromin = '微信' then 1 else 0 end ) wx1,
        SUM(case when fromin = '百度外卖' then 1 else 0 end ) bdwm1,
        count(*) sum1
        FROM
        (
        select goods_prcie+ship_fee+box_price total_price,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) timeDay,fromin,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) create_date,order_status FROM [dbo].[cds_order_info]
        where
        order_status in(1,2,3,4)
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
         
              AND stores_id = ?  
         
         
        union ALL
        select  goods_prcie+ship_fee+box_price total_price,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) timeDay,fromin,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) create_date,order_status FROM [dbo].[view_cds_order_info]
        where
        order_status in(1,2,3,4)
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
         
              AND stores_id = ?  
         
         
        ) temp
         
                GROUP BY create_date
                ORDER BY create_date 
[INFO][2017-08-16 17:47:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2017-08-10
参数2:2017-08-16
参数3:11
参数4:2017-08-10
参数5:2017-08-16
参数6:11
 
[INFO][2017-08-16 17:47:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_order_info.orderCountBrand: 
select distinct bra.* from cds_order_info ori left join cds_brand bra on ori.brand_id = bra.brand_id
        WHERE
        order_status in(1,2,3,4)
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
         
              AND stores_id = ? 
[INFO][2017-08-16 17:47:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2017-08-10
参数2:2017-08-16
参数3:11
 
[INFO][2017-08-16 17:47:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_order_info.orderCountDay: 
SELECT
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) timeDay,
        SUM(case when fromin = '饿了么' then total_price else 0 end ) elm3,
        SUM(case when fromin = '美团' then total_price else 0 end ) mt3,
        SUM(case when fromin = '微信' then total_price else 0 end ) wx3,
        SUM(case when fromin = '百度外卖' then total_price else 0 end ) bdwm3,
        SUM(total_price) sum3,
        SUM(case when fromin = '饿了么' then 1 else 0 end ) elm1,
        SUM(case when fromin = '美团' then 1 else 0 end ) mt1,
        SUM(case when fromin = '微信' then 1 else 0 end ) wx1,
        SUM(case when fromin = '百度外卖' then 1 else 0 end ) bdwm1,
        count(*) sum1
        FROM
        (
        select goods_prcie+ship_fee+box_price total_price,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) timeDay,fromin,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) create_date,order_status FROM [dbo].[cds_order_info]
        where
        order_status in(1,2,3,4)
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
         
              AND stores_id = ?  
         
         
        union ALL
        select  goods_prcie+ship_fee+box_price total_price,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) timeDay,fromin,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) create_date,order_status FROM [dbo].[view_cds_order_info]
        where
        order_status in(1,2,3,4)
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
         
              AND stores_id = ?  
         
         
        ) temp
         
                GROUP BY create_date
                ORDER BY create_date 
[INFO][2017-08-16 17:47:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2017-07-18
参数2:2017-08-16
参数3:11
参数4:2017-07-18
参数5:2017-08-16
参数6:11
 
[INFO][2017-08-16 17:47:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_order_info.orderCountBrand: 
select distinct bra.* from cds_order_info ori left join cds_brand bra on ori.brand_id = bra.brand_id
        WHERE
        order_status in(1,2,3,4)
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
         
              AND stores_id = ? 
[INFO][2017-08-16 17:47:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2017-07-18
参数2:2017-08-16
参数3:11
 
[INFO][2017-08-16 17:48:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_good.getReportGood: 
select temp.class_good_name,
            SUM(good_count) as good_count,
            sum(good_price) as good_price
            from (
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from cds_ms_goods_list
             
                WHERE  sale_time >= ?
                AND sale_time <= ? + ' 23:59:59' 
             
                AND stores_id = ?
             
                and class_good_name is not null
                group by class_good_name
                union all
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from view_cds_ms_goods_list
             
                WHERE  create_date >= ?
                AND create_date <= ? + ' 23:59:59' 
             
                AND stores_id = ?
             
            and class_good_name is not null
                group by class_good_name
            ) temp
            group by temp.class_good_name
         
              order by good_count desc 
[INFO][2017-08-16 17:48:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2017-08-16
参数2:2017-08-16
参数3:11
参数4:2017-08-16
参数5:2017-08-16
参数6:11
 
[INFO][2017-08-16 17:48:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_good.getReportGood: 
select temp.class_good_name,
            SUM(good_count) as good_count,
            sum(good_price) as good_price
            from (
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from cds_ms_goods_list
             
                WHERE  sale_time >= ?
                AND sale_time <= ? + ' 23:59:59' 
             
                AND stores_id = ?
             
                and class_good_name is not null
                group by class_good_name
                union all
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from view_cds_ms_goods_list
             
                WHERE  create_date >= ?
                AND create_date <= ? + ' 23:59:59' 
             
                AND stores_id = ?
             
            and class_good_name is not null
                group by class_good_name
            ) temp
            group by temp.class_good_name
         
              order by good_count desc 
[INFO][2017-08-16 17:48:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2017-08-09
参数2:2017-08-15
参数3:11
参数4:2017-08-09
参数5:2017-08-15
参数6:11
 
[INFO][2017-08-16 17:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_good.getReportGood: 
select temp.class_good_name,
            SUM(good_count) as good_count,
            sum(good_price) as good_price
            from (
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from cds_ms_goods_list
             
                WHERE  sale_time >= ?
                AND sale_time <= ? + ' 23:59:59' 
             
                AND stores_id = ?
             
                and class_good_name is not null
                group by class_good_name
                union all
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from view_cds_ms_goods_list
             
                WHERE  create_date >= ?
                AND create_date <= ? + ' 23:59:59' 
             
                AND stores_id = ?
             
            and class_good_name is not null
                group by class_good_name
            ) temp
            group by temp.class_good_name
         
              order by good_count desc 
[INFO][2017-08-16 17:48:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2017-05-18
参数2:2017-08-15
参数3:11
参数4:2017-05-18
参数5:2017-08-15
参数6:11
 
[INFO][2017-08-16 17:48:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_good.getReportGood: 
select temp.class_good_name,
            SUM(good_count) as good_count,
            sum(good_price) as good_price
            from (
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from cds_ms_goods_list
             
                WHERE  sale_time >= ?
                AND sale_time <= ? + ' 23:59:59' 
             
                AND stores_id = ?
             
                and class_good_name is not null
                group by class_good_name
                union all
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from view_cds_ms_goods_list
             
                WHERE  create_date >= ?
                AND create_date <= ? + ' 23:59:59' 
             
                AND stores_id = ?
             
            and class_good_name is not null
                group by class_good_name
            ) temp
            group by temp.class_good_name
         
              order by good_count desc 
[INFO][2017-08-16 17:48:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2017-07-17
参数2:2017-08-15
参数3:11
参数4:2017-07-17
参数5:2017-08-15
参数6:11
 
[INFO][2017-08-16 17:51:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_good.getReportGood: 
select temp.class_good_name,
            SUM(good_count) as good_count,
            sum(good_price) as good_price
            from (
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from cds_ms_goods_list
             
                WHERE  sale_time >= ?
                AND sale_time <= ? + ' 23:59:59' 
             
                AND stores_id = ?
             
                and class_good_name is not null
                group by class_good_name
                union all
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from view_cds_ms_goods_list
             
                WHERE  create_date >= ?
                AND create_date <= ? + ' 23:59:59' 
             
                AND stores_id = ?
             
            and class_good_name is not null
                group by class_good_name
            ) temp
            group by temp.class_good_name
         
              order by good_count desc 
[INFO][2017-08-16 17:51:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2017-05-18
参数2:2017-08-15
参数3:11
参数4:2017-05-18
参数5:2017-08-15
参数6:11
 
[INFO][2017-08-16 17:52:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_good.getReportGood: 
select temp.class_good_name,
            SUM(good_count) as good_count,
            sum(good_price) as good_price
            from (
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from cds_ms_goods_list
             
                WHERE  sale_time >= ?
                AND sale_time <= ? + ' 23:59:59' 
             
                AND stores_id = ?
             
                and class_good_name is not null
                group by class_good_name
                union all
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from view_cds_ms_goods_list
             
                WHERE  create_date >= ?
                AND create_date <= ? + ' 23:59:59' 
             
                AND stores_id = ?
             
            and class_good_name is not null
                group by class_good_name
            ) temp
            group by temp.class_good_name
         
              order by good_count desc 
[INFO][2017-08-16 17:52:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2017-07-17
参数2:2017-08-15
参数3:11
参数4:2017-07-17
参数5:2017-08-15
参数6:11
 
[INFO][2017-08-16 17:52:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-16 17:52:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-16 17:52:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-16 17:52:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-16 17:52:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-16 17:52:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-16 17:52:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_good.getReportGood: 
select temp.class_good_name,
            SUM(good_count) as good_count,
            sum(good_price) as good_price
            from (
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from cds_ms_goods_list
             
                WHERE  sale_time >= ?
                AND sale_time <= ? + ' 23:59:59' 
             
                AND stores_id = ?
             
                and class_good_name is not null
                group by class_good_name
                union all
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from view_cds_ms_goods_list
             
                WHERE  create_date >= ?
                AND create_date <= ? + ' 23:59:59' 
             
                AND stores_id = ?
             
            and class_good_name is not null
                group by class_good_name
            ) temp
            group by temp.class_good_name
         
              order by good_count desc 
[INFO][2017-08-16 17:52:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2017-08-16
参数2:2017-08-16
参数3:11
参数4:2017-08-16
参数5:2017-08-16
参数6:11
 
[INFO][2017-08-16 17:52:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_good.getReportGood: 
select temp.class_good_name,
            SUM(good_count) as good_count,
            sum(good_price) as good_price
            from (
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from cds_ms_goods_list
             
                WHERE  sale_time >= ?
                AND sale_time <= ? + ' 23:59:59' 
             
                AND stores_id = ?
             
                and class_good_name is not null
                group by class_good_name
                union all
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from view_cds_ms_goods_list
             
                WHERE  create_date >= ?
                AND create_date <= ? + ' 23:59:59' 
             
                AND stores_id = ?
             
            and class_good_name is not null
                group by class_good_name
            ) temp
            group by temp.class_good_name
         
              order by good_count desc 
[INFO][2017-08-16 17:52:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2017-05-18
参数2:2017-08-15
参数3:11
参数4:2017-05-18
参数5:2017-08-15
参数6:11
 
[INFO][2017-08-16 17:52:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_good.getReportGood: 
select temp.class_good_name,
            SUM(good_count) as good_count,
            sum(good_price) as good_price
            from (
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from cds_ms_goods_list
             
                WHERE  sale_time >= ?
                AND sale_time <= ? + ' 23:59:59' 
             
                AND stores_id = ?
             
                and class_good_name is not null
                group by class_good_name
                union all
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from view_cds_ms_goods_list
             
                WHERE  create_date >= ?
                AND create_date <= ? + ' 23:59:59' 
             
                AND stores_id = ?
             
            and class_good_name is not null
                group by class_good_name
            ) temp
            group by temp.class_good_name
         
              order by good_count desc 
[INFO][2017-08-16 17:52:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2017-07-17
参数2:2017-08-15
参数3:11
参数4:2017-07-17
参数5:2017-08-15
参数6:11
 
[INFO][2017-08-16 17:52:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_good.getReportGood: 
select temp.class_good_name,
            SUM(good_count) as good_count,
            sum(good_price) as good_price
            from (
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from cds_ms_goods_list
             
                WHERE  sale_time >= ?
                AND sale_time <= ? + ' 23:59:59' 
             
                AND stores_id = ?
             
                and class_good_name is not null
                group by class_good_name
                union all
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from view_cds_ms_goods_list
             
                WHERE  create_date >= ?
                AND create_date <= ? + ' 23:59:59' 
             
                AND stores_id = ?
             
            and class_good_name is not null
                group by class_good_name
            ) temp
            group by temp.class_good_name
         
              order by good_count desc 
[INFO][2017-08-16 17:52:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2017-08-09
参数2:2017-08-15
参数3:11
参数4:2017-08-09
参数5:2017-08-15
参数6:11
 
[INFO][2017-08-16 17:52:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_good.getReportGood: 
select temp.class_good_name,
            SUM(good_count) as good_count,
            sum(good_price) as good_price
            from (
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from cds_ms_goods_list
             
                WHERE  sale_time >= ?
                AND sale_time <= ? + ' 23:59:59' 
             
                AND stores_id = ?
             
                and class_good_name is not null
                group by class_good_name
                union all
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from view_cds_ms_goods_list
             
                WHERE  create_date >= ?
                AND create_date <= ? + ' 23:59:59' 
             
                AND stores_id = ?
             
            and class_good_name is not null
                group by class_good_name
            ) temp
            group by temp.class_good_name
         
              order by good_count desc 
[INFO][2017-08-16 17:52:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2017-07-17
参数2:2017-08-15
参数3:11
参数4:2017-07-17
参数5:2017-08-15
参数6:11
 
[INFO][2017-08-16 17:52:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_good.getReportGood: 
select temp.class_good_name,
            SUM(good_count) as good_count,
            sum(good_price) as good_price
            from (
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from cds_ms_goods_list
             
                WHERE  sale_time >= ?
                AND sale_time <= ? + ' 23:59:59' 
             
                AND stores_id = ?
             
                and class_good_name is not null
                group by class_good_name
                union all
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from view_cds_ms_goods_list
             
                WHERE  create_date >= ?
                AND create_date <= ? + ' 23:59:59' 
             
                AND stores_id = ?
             
            and class_good_name is not null
                group by class_good_name
            ) temp
            group by temp.class_good_name
         
              order by good_count desc 
[INFO][2017-08-16 17:52:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2017-07-17
参数2:2017-08-15
参数3:11
参数4:2017-07-17
参数5:2017-08-15
参数6:11
 
[INFO][2017-08-16 17:52:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_good.getReportGood: 
select temp.class_good_name,
            SUM(good_count) as good_count,
            sum(good_price) as good_price
            from (
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from cds_ms_goods_list
             
                WHERE  sale_time >= ?
                AND sale_time <= ? + ' 23:59:59' 
             
                AND stores_id = ?
             
                and class_good_name is not null
                group by class_good_name
                union all
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from view_cds_ms_goods_list
             
                WHERE  create_date >= ?
                AND create_date <= ? + ' 23:59:59' 
             
                AND stores_id = ?
             
            and class_good_name is not null
                group by class_good_name
            ) temp
            group by temp.class_good_name
         
              order by good_count desc 
[INFO][2017-08-16 17:52:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2017-07-17
参数2:2017-08-15
参数3:11
参数4:2017-07-17
参数5:2017-08-15
参数6:11
 
[INFO][2017-08-16 17:52:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_good.getReportGood: 
select temp.class_good_name,
            SUM(good_count) as good_count,
            sum(good_price) as good_price
            from (
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from cds_ms_goods_list
             
                WHERE  sale_time >= ?
                AND sale_time <= ? + ' 23:59:59' 
             
                AND stores_id = ?
             
                and class_good_name is not null
                group by class_good_name
                union all
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from view_cds_ms_goods_list
             
                WHERE  create_date >= ?
                AND create_date <= ? + ' 23:59:59' 
             
                AND stores_id = ?
             
            and class_good_name is not null
                group by class_good_name
            ) temp
            group by temp.class_good_name
         
              order by good_count desc 
[INFO][2017-08-16 17:52:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2017-07-17
参数2:2017-08-15
参数3:11
参数4:2017-07-17
参数5:2017-08-15
参数6:11
 
[INFO][2017-08-16 17:52:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-16 17:52:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-16 17:52:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-16 17:52:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-16 17:52:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-16 17:52:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1029
 
[INFO][2017-08-16 17:56:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.orderOnTimeStores: 
select stores_id storesId,name storesName from cds_stores
         
         WHERE stores_id = ? 
        order by stores_id 
[INFO][2017-08-16 17:56:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:11
 
[INFO][2017-08-16 17:56:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_report.report2: 
select * from (
                select (case when SUM(temp.iscount)>0 then
                (SUM(temp.iscount)+0.0)/SUM(1)
                else 0 end) as storescount,
                  
                    (case when SUM(case when stores_id=11 then temp.iscount else 0 end)>0 then
                    (SUM(case when stores_id=11 then temp.iscount else 0 end)+0.0)/SUM(case when stores_id=11 then 1 else 0 end )
                    else 0 end) as cur_storescount0,
                 
                isnull(order_date,'合计') as order_date
                from (
                    select
                    s.stores_id,
                    s.name stores_name,
                    DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
                    CONVERT(varchar(100),o.create_date,23) as order_date,
                    (case when o.pack_user_time is null or DATEDIFF(minute,o.create_date,o.pack_user_time)>20 then 0 else 1 end ) as iscount
                    from cds_order_info o
                    left join cds_stores s on o.stores_id = s.stores_id
                    where o.create_date >= ?+' 00:00:00'
                             AND o.create_date <= ?+' 23:59:59'  
                    and o.service_time is null

                    union all

                   select
                    s.stores_id,
                    s.name stores_name,
                    DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
                    CONVERT(varchar(100),o.create_date,23) as order_date,
                    (case when o.pack_user_time is null or DATEDIFF(minute,o.create_date,o.pack_user_time)>20 then 0 else 1 end ) as iscount
                    from view_cds_order_info o
                    left join cds_stores s on o.stores_id = s.stores_id
                    where o.create_date >= ?+' 00:00:00'
                            AND o.create_date <= ?+' 23:59:59' 
                    and o.service_time is null
                ) temp
                group by temp.order_date
                with cube) t order by t.order_date 
[INFO][2017-08-16 17:56:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2017-08-10
参数2:2017-08-16
参数3:2017-08-10
参数4:2017-08-16
 
[INFO][2017-08-16 17:56:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.orderOnTimeStores: 
select stores_id storesId,name storesName from cds_stores
         
         WHERE stores_id = ? 
        order by stores_id 
[INFO][2017-08-16 17:56:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:11
 
[INFO][2017-08-16 17:56:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.orderOnTimeStores: 
select stores_id storesId,name storesName from cds_stores
         
         WHERE stores_id = ? 
        order by stores_id 
[INFO][2017-08-16 17:56:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:11
 
[INFO][2017-08-16 17:56:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_order_info.orderOnTimeCount1: 
select
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder0',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder0',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder0',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder0',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder0',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder0',
         
        SUM(case when DATEDIFF(minute,create_date,task_time) <  60  and send_name='点我达' then 1 else 0 end)  dwdNiceOrder,
        SUM(case when DATEDIFF(minute,create_date,task_time) <  60  and send_name='美团' then 1 else 0 end)  mtNiceOrder,
        SUM(case when DATEDIFF(minute,create_date,task_time) <  60 and send_name='饿了么' then 1 else 0 end)  elmNiceOrder,
        count(case when send_name='点我达' then 1 else 0 end) dwdAllOrder,
        count(case when send_name='美团' then 1 else 0 end) mtAllOrder,
        count(case when send_name='饿了么' then 1 else 0 end) elmAllOrder,
        isnull(CONVERT (
        VARCHAR (10),
        create_date,
        120
        ),'合计') create_date
        from
        (
        select create_date,task_time,stores_id,send_name FROM [dbo].[cds_order_info]
        where order_status = 4 and service_time is null
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
        union ALL
        select create_date,task_time,stores_id,send_name FROM [dbo].[view_cds_order_info]
        where order_status = 4 and service_time is null
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
        ) temp
         
                group by CONVERT (
                    VARCHAR (10),
                        create_date,
                        120
                        )
                with rollup
                order by create_date 
[INFO][2017-08-16 17:56:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:11
参数2:11
参数3:11
参数4:11
参数5:11
参数6:11
参数7:2017-08-10
参数8:2017-08-16
参数9:2017-08-10
参数10:2017-08-16
 
[INFO][2017-08-16 17:56:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_order_info.orderOnTimeCount1: 
select
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder0',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder0',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder0',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder0',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder0',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder0',
         
        SUM(case when DATEDIFF(minute,create_date,task_time) <  60  and send_name='点我达' then 1 else 0 end)  dwdNiceOrder,
        SUM(case when DATEDIFF(minute,create_date,task_time) <  60  and send_name='美团' then 1 else 0 end)  mtNiceOrder,
        SUM(case when DATEDIFF(minute,create_date,task_time) <  60 and send_name='饿了么' then 1 else 0 end)  elmNiceOrder,
        count(case when send_name='点我达' then 1 else 0 end) dwdAllOrder,
        count(case when send_name='美团' then 1 else 0 end) mtAllOrder,
        count(case when send_name='饿了么' then 1 else 0 end) elmAllOrder,
        isnull(CONVERT (
        VARCHAR (10),
        create_date,
        120
        ),'合计') create_date
        from
        (
        select create_date,task_time,stores_id,send_name FROM [dbo].[cds_order_info]
        where order_status = 4 and service_time is null
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
        union ALL
        select create_date,task_time,stores_id,send_name FROM [dbo].[view_cds_order_info]
        where order_status = 4 and service_time is null
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
        ) temp
         
                group by CONVERT (
                    VARCHAR (10),
                        create_date,
                        120
                        )
                with rollup
                order by create_date 
[INFO][2017-08-16 17:56:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:11
参数2:11
参数3:11
参数4:11
参数5:11
参数6:11
参数7:2017-08-10
参数8:2017-08-16
参数9:2017-08-10
参数10:2017-08-16
 
[INFO][2017-08-16 17:56:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.orderOnTimeStores: 
select stores_id storesId,name storesName from cds_stores
         
         WHERE stores_id = ? 
        order by stores_id 
[INFO][2017-08-16 17:56:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:11
 
[INFO][2017-08-16 17:56:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_report.report2: 
select * from (
                select (case when SUM(temp.iscount)>0 then
                (SUM(temp.iscount)+0.0)/SUM(1)
                else 0 end) as storescount,
                  
                    (case when SUM(case when stores_id=11 then temp.iscount else 0 end)>0 then
                    (SUM(case when stores_id=11 then temp.iscount else 0 end)+0.0)/SUM(case when stores_id=11 then 1 else 0 end )
                    else 0 end) as cur_storescount0,
                 
                isnull(order_date,'合计') as order_date
                from (
                    select
                    s.stores_id,
                    s.name stores_name,
                    DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
                    CONVERT(varchar(100),o.create_date,23) as order_date,
                    (case when o.pack_user_time is null or DATEDIFF(minute,o.create_date,o.pack_user_time)>20 then 0 else 1 end ) as iscount
                    from cds_order_info o
                    left join cds_stores s on o.stores_id = s.stores_id
                    where o.create_date >= ?+' 00:00:00'
                             AND o.create_date <= ?+' 23:59:59'  
                    and o.service_time is null

                    union all

                   select
                    s.stores_id,
                    s.name stores_name,
                    DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
                    CONVERT(varchar(100),o.create_date,23) as order_date,
                    (case when o.pack_user_time is null or DATEDIFF(minute,o.create_date,o.pack_user_time)>20 then 0 else 1 end ) as iscount
                    from view_cds_order_info o
                    left join cds_stores s on o.stores_id = s.stores_id
                    where o.create_date >= ?+' 00:00:00'
                            AND o.create_date <= ?+' 23:59:59' 
                    and o.service_time is null
                ) temp
                group by temp.order_date
                with cube) t order by t.order_date 
[INFO][2017-08-16 17:56:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2017-08-10
参数2:2017-08-16
参数3:2017-08-10
参数4:2017-08-16
 
[INFO][2017-08-16 17:56:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.orderOnTimeStores: 
select stores_id storesId,name storesName from cds_stores
         
         WHERE stores_id = ? 
        order by stores_id 
[INFO][2017-08-16 17:56:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:11
 
[INFO][2017-08-16 17:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_report.report2: 
select * from (
                select (case when SUM(temp.iscount)>0 then
                (SUM(temp.iscount)+0.0)/SUM(1)
                else 0 end) as storescount,
                  
                    (case when SUM(case when stores_id=11 then temp.iscount else 0 end)>0 then
                    (SUM(case when stores_id=11 then temp.iscount else 0 end)+0.0)/SUM(case when stores_id=11 then 1 else 0 end )
                    else 0 end) as cur_storescount0,
                 
                isnull(order_date,'合计') as order_date
                from (
                    select
                    s.stores_id,
                    s.name stores_name,
                    DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
                    CONVERT(varchar(100),o.create_date,23) as order_date,
                    (case when o.pack_user_time is null or DATEDIFF(minute,o.create_date,o.pack_user_time)>20 then 0 else 1 end ) as iscount
                    from cds_order_info o
                    left join cds_stores s on o.stores_id = s.stores_id
                    where o.create_date >= ?+' 00:00:00'
                             AND o.create_date <= ?+' 23:59:59'  
                    and o.service_time is null

                    union all

                   select
                    s.stores_id,
                    s.name stores_name,
                    DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
                    CONVERT(varchar(100),o.create_date,23) as order_date,
                    (case when o.pack_user_time is null or DATEDIFF(minute,o.create_date,o.pack_user_time)>20 then 0 else 1 end ) as iscount
                    from view_cds_order_info o
                    left join cds_stores s on o.stores_id = s.stores_id
                    where o.create_date >= ?+' 00:00:00'
                            AND o.create_date <= ?+' 23:59:59' 
                    and o.service_time is null
                ) temp
                group by temp.order_date
                with cube) t order by t.order_date 
[INFO][2017-08-16 17:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2017-08-10
参数2:2017-08-16
参数3:2017-08-10
参数4:2017-08-16
 
[INFO][2017-08-16 17:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.orderOnTimeStores: 
select stores_id storesId,name storesName from cds_stores
         
         WHERE stores_id = ? 
        order by stores_id 
[INFO][2017-08-16 17:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:11
 
[INFO][2017-08-16 17:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_order_info.orderOnTimeCount1: 
select
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder0',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder0',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder0',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder0',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder0',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder0',
         
        SUM(case when DATEDIFF(minute,create_date,task_time) <  60  and send_name='点我达' then 1 else 0 end)  dwdNiceOrder,
        SUM(case when DATEDIFF(minute,create_date,task_time) <  60  and send_name='美团' then 1 else 0 end)  mtNiceOrder,
        SUM(case when DATEDIFF(minute,create_date,task_time) <  60 and send_name='饿了么' then 1 else 0 end)  elmNiceOrder,
        count(case when send_name='点我达' then 1 else 0 end) dwdAllOrder,
        count(case when send_name='美团' then 1 else 0 end) mtAllOrder,
        count(case when send_name='饿了么' then 1 else 0 end) elmAllOrder,
        isnull(CONVERT (
        VARCHAR (10),
        create_date,
        120
        ),'合计') create_date
        from
        (
        select create_date,task_time,stores_id,send_name FROM [dbo].[cds_order_info]
        where order_status = 4 and service_time is null
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
        union ALL
        select create_date,task_time,stores_id,send_name FROM [dbo].[view_cds_order_info]
        where order_status = 4 and service_time is null
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
        ) temp
         
                group by CONVERT (
                    VARCHAR (10),
                        create_date,
                        120
                        )
                with rollup
                order by create_date 
[INFO][2017-08-16 17:56:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:11
参数2:11
参数3:11
参数4:11
参数5:11
参数6:11
参数7:2017-08-10
参数8:2017-08-16
参数9:2017-08-10
参数10:2017-08-16
 
[INFO][2017-08-16 17:56:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.orderOnTimeStores: 
select stores_id storesId,name storesName from cds_stores
         
         WHERE stores_id = ? 
        order by stores_id 
[INFO][2017-08-16 17:56:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:11
 
[INFO][2017-08-16 17:56:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_report.report2: 
select * from (
                select (case when SUM(temp.iscount)>0 then
                (SUM(temp.iscount)+0.0)/SUM(1)
                else 0 end) as storescount,
                  
                    (case when SUM(case when stores_id=11 then temp.iscount else 0 end)>0 then
                    (SUM(case when stores_id=11 then temp.iscount else 0 end)+0.0)/SUM(case when stores_id=11 then 1 else 0 end )
                    else 0 end) as cur_storescount0,
                 
                isnull(order_date,'合计') as order_date
                from (
                    select
                    s.stores_id,
                    s.name stores_name,
                    DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
                    CONVERT(varchar(100),o.create_date,23) as order_date,
                    (case when o.pack_user_time is null or DATEDIFF(minute,o.create_date,o.pack_user_time)>20 then 0 else 1 end ) as iscount
                    from cds_order_info o
                    left join cds_stores s on o.stores_id = s.stores_id
                    where o.create_date >= ?+' 00:00:00'
                             AND o.create_date <= ?+' 23:59:59'  
                    and o.service_time is null

                    union all

                   select
                    s.stores_id,
                    s.name stores_name,
                    DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
                    CONVERT(varchar(100),o.create_date,23) as order_date,
                    (case when o.pack_user_time is null or DATEDIFF(minute,o.create_date,o.pack_user_time)>20 then 0 else 1 end ) as iscount
                    from view_cds_order_info o
                    left join cds_stores s on o.stores_id = s.stores_id
                    where o.create_date >= ?+' 00:00:00'
                            AND o.create_date <= ?+' 23:59:59' 
                    and o.service_time is null
                ) temp
                group by temp.order_date
                with cube) t order by t.order_date 
[INFO][2017-08-16 17:56:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2017-08-10
参数2:2017-08-16
参数3:2017-08-10
参数4:2017-08-16
 
[INFO][2017-08-16 17:56:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.orderOnTimeStores: 
select stores_id storesId,name storesName from cds_stores
         
         WHERE stores_id = ? 
        order by stores_id 
[INFO][2017-08-16 17:56:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:11
 
[INFO][2017-08-16 17:56:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_order_info.orderOnTimeCount1: 
select
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder0',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder0',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder0',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder0',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder0',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder0',
         
        SUM(case when DATEDIFF(minute,create_date,task_time) <  60  and send_name='点我达' then 1 else 0 end)  dwdNiceOrder,
        SUM(case when DATEDIFF(minute,create_date,task_time) <  60  and send_name='美团' then 1 else 0 end)  mtNiceOrder,
        SUM(case when DATEDIFF(minute,create_date,task_time) <  60 and send_name='饿了么' then 1 else 0 end)  elmNiceOrder,
        count(case when send_name='点我达' then 1 else 0 end) dwdAllOrder,
        count(case when send_name='美团' then 1 else 0 end) mtAllOrder,
        count(case when send_name='饿了么' then 1 else 0 end) elmAllOrder,
        isnull(CONVERT (
        VARCHAR (10),
        create_date,
        120
        ),'合计') create_date
        from
        (
        select create_date,task_time,stores_id,send_name FROM [dbo].[cds_order_info]
        where order_status = 4 and service_time is null
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
        union ALL
        select create_date,task_time,stores_id,send_name FROM [dbo].[view_cds_order_info]
        where order_status = 4 and service_time is null
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
        ) temp
         
                group by CONVERT (
                    VARCHAR (10),
                        create_date,
                        120
                        )
                with rollup
                order by create_date 
[INFO][2017-08-16 17:56:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:11
参数2:11
参数3:11
参数4:11
参数5:11
参数6:11
参数7:2017-08-10
参数8:2017-08-16
参数9:2017-08-10
参数10:2017-08-16
 
[INFO][2017-08-16 17:56:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_good.getReportGood: 
select temp.class_good_name,
            SUM(good_count) as good_count,
            sum(good_price) as good_price
            from (
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from cds_ms_goods_list
             
                WHERE  sale_time >= ?
                AND sale_time <= ? + ' 23:59:59' 
             
                AND stores_id = ?
             
                and class_good_name is not null
                group by class_good_name
                union all
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from view_cds_ms_goods_list
             
                WHERE  create_date >= ?
                AND create_date <= ? + ' 23:59:59' 
             
                AND stores_id = ?
             
            and class_good_name is not null
                group by class_good_name
            ) temp
            group by temp.class_good_name
         
              order by good_count desc 
[INFO][2017-08-16 17:56:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2017-08-16
参数2:2017-08-16
参数3:11
参数4:2017-08-16
参数5:2017-08-16
参数6:11
 
[INFO][2017-08-16 17:56:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_good.getEditReportAnalyse: 
select good_name,
          
            cast(cast(sum(good_count_0) as FLOAT)/? as numeric(8,2))  good_count_0,
          
            cast(cast(sum(good_count_1) as FLOAT)/? as numeric(8,2))  good_count_1,
          
            cast(cast(sum(good_count_2) as FLOAT)/? as numeric(8,2))  good_count_2,
          
            cast(cast(sum(good_count_3) as FLOAT)/? as numeric(8,2))  good_count_3,
          
            cast(cast(sum(good_count_4) as FLOAT)/? as numeric(8,2))  good_count_4,
          
            cast(cast(sum(good_count_5) as FLOAT)/? as numeric(8,2))  good_count_5,
          
            cast(cast(sum(good_count_6) as FLOAT)/? as numeric(8,2))  good_count_6,
          
            cast(cast(sum(good_count_7) as FLOAT)/? as numeric(8,2))  good_count_7,
         
        cast(cast(sum(sum_count) as FLOAT)/? as numeric(8,2)) sum_count
            from (
                select isnull(temp.good_name,'合计') as good_name,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_0,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_1,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_2,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_3,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_4,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_5,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_6,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_7,
                 
                    sum(case when t_minute>=? AND t_minute  <  ? then count else 0 end) as sum_count
                from (
                    select cgl.sale_time,
                           convert(int,datename(Hour , cgl.sale_time))*60 + convert(int,datename(minute, cgl.sale_time)) as t_minute,
                           cgl.class_good_name as good_name,
                           cgl.count
                    from cds_ms_goods_list cgl
                    where cgl.sale_time >=?
                    and cgl.sale_time  <= ?  + ' 23:59:59'
                    and cgl.stores_id = ?
                    and class_good_name is not null
                ) temp group by good_name with rollup

				union all
				 select isnull(temp.good_name,'合计') as good_name,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_0,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_1,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_2,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_3,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_4,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_5,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_6,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_7,
                 
                    sum(case when t_minute>=? AND t_minute  <  ? then count else 0 end) as sum_count
                from (
                    select cgl.sale_time,
                           convert(int,datename(Hour, cgl.sale_time))*60 + convert(int,datename(minute, cgl.sale_time)) as t_minute,
                           cgl.class_good_name as good_name,
                           cgl.count
                    from view_cds_ms_goods_list cgl
                    where cgl.create_date >=?
                    and cgl.create_date  <= ?  + ' 23:59:59'
                    and cgl.stores_id = ?
                    and class_good_name is not null
                ) temp group by good_name with rollup
             ) t
			 group by good_name
			 order by sum_count desc 
[INFO][2017-08-16 17:56:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
参数2:1
参数3:1
参数4:1
参数5:1
参数6:1
参数7:1
参数8:1
参数9:1
参数10:1077
参数11:1107
参数12:1107
参数13:1137
参数14:1137
参数15:1167
参数16:1167
参数17:1197
参数18:1197
参数19:1227
参数20:1227
参数21:1257
参数22:1257
参数23:1287
参数24:1287
参数25:1317
参数26:1077
参数27:1317
参数28:2017-08-15
参数29:2017-08-15
参数30:11
参数31:1077
参数32:1107
参数33:1107
参数34:1137
参数35:1137
参数36:1167
参数37:1167
参数38:1197
参数39:1197
参数40:1227
参数41:1227
参数42:1257
参数43:1257
参数44:1287
参数45:1287
参数46:1317
参数47:1077
参数48:1317
参数49:2017-08-15
参数50:2017-08-15
参数51:11
 
[INFO][2017-08-16 17:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.orderOnTimeStores: 
select stores_id storesId,name storesName from cds_stores
         
         WHERE stores_id = ? 
        order by stores_id 
[INFO][2017-08-16 17:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:11
 
[INFO][2017-08-16 17:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_report.report2: 
select * from (
                select (case when SUM(temp.iscount)>0 then
                (SUM(temp.iscount)+0.0)/SUM(1)
                else 0 end) as storescount,
                  
                    (case when SUM(case when stores_id=11 then temp.iscount else 0 end)>0 then
                    (SUM(case when stores_id=11 then temp.iscount else 0 end)+0.0)/SUM(case when stores_id=11 then 1 else 0 end )
                    else 0 end) as cur_storescount0,
                 
                isnull(order_date,'合计') as order_date
                from (
                    select
                    s.stores_id,
                    s.name stores_name,
                    DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
                    CONVERT(varchar(100),o.create_date,23) as order_date,
                    (case when o.pack_user_time is null or DATEDIFF(minute,o.create_date,o.pack_user_time)>20 then 0 else 1 end ) as iscount
                    from cds_order_info o
                    left join cds_stores s on o.stores_id = s.stores_id
                    where o.create_date >= ?+' 00:00:00'
                             AND o.create_date <= ?+' 23:59:59'  
                    and o.service_time is null

                    union all

                   select
                    s.stores_id,
                    s.name stores_name,
                    DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
                    CONVERT(varchar(100),o.create_date,23) as order_date,
                    (case when o.pack_user_time is null or DATEDIFF(minute,o.create_date,o.pack_user_time)>20 then 0 else 1 end ) as iscount
                    from view_cds_order_info o
                    left join cds_stores s on o.stores_id = s.stores_id
                    where o.create_date >= ?+' 00:00:00'
                            AND o.create_date <= ?+' 23:59:59' 
                    and o.service_time is null
                ) temp
                group by temp.order_date
                with cube) t order by t.order_date 
[INFO][2017-08-16 17:56:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2017-08-10
参数2:2017-08-16
参数3:2017-08-10
参数4:2017-08-16
 
[INFO][2017-08-16 17:56:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_order_info.orderCountDay: 
SELECT
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) timeDay,
        SUM(case when fromin = '饿了么' then total_price else 0 end ) elm3,
        SUM(case when fromin = '美团' then total_price else 0 end ) mt3,
        SUM(case when fromin = '微信' then total_price else 0 end ) wx3,
        SUM(case when fromin = '百度外卖' then total_price else 0 end ) bdwm3,
        SUM(total_price) sum3,
        SUM(case when fromin = '饿了么' then 1 else 0 end ) elm1,
        SUM(case when fromin = '美团' then 1 else 0 end ) mt1,
        SUM(case when fromin = '微信' then 1 else 0 end ) wx1,
        SUM(case when fromin = '百度外卖' then 1 else 0 end ) bdwm1,
        count(*) sum1
        FROM
        (
        select goods_prcie+ship_fee+box_price total_price,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) timeDay,fromin,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) create_date,order_status FROM [dbo].[cds_order_info]
        where
        order_status in(1,2,3,4)
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
         
              AND stores_id = ?  
         
         
        union ALL
        select  goods_prcie+ship_fee+box_price total_price,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) timeDay,fromin,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) create_date,order_status FROM [dbo].[view_cds_order_info]
        where
        order_status in(1,2,3,4)
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
         
              AND stores_id = ?  
         
         
        ) temp
         
                GROUP BY create_date
                ORDER BY create_date 
[INFO][2017-08-16 17:56:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2017-08-10
参数2:2017-08-16
参数3:11
参数4:2017-08-10
参数5:2017-08-16
参数6:11
 
[INFO][2017-08-16 17:56:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_order_info.orderCountBrand: 
select distinct bra.* from cds_order_info ori left join cds_brand bra on ori.brand_id = bra.brand_id
        WHERE
        order_status in(1,2,3,4)
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
         
              AND stores_id = ? 
[INFO][2017-08-16 17:56:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2017-08-10
参数2:2017-08-16
参数3:11
 
[INFO][2017-08-16 17:56:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_good.getReportAnalyseDays: 
select good_name,
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count0',
            SUM(case when sale_time = ? then price else 0 end ) as 'price0',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count1',
            SUM(case when sale_time = ? then price else 0 end ) as 'price1',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count2',
            SUM(case when sale_time = ? then price else 0 end ) as 'price2',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count3',
            SUM(case when sale_time = ? then price else 0 end ) as 'price3',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count4',
            SUM(case when sale_time = ? then price else 0 end ) as 'price4',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count5',
            SUM(case when sale_time = ? then price else 0 end ) as 'price5',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count6',
            SUM(case when sale_time = ? then price else 0 end ) as 'price6',
         
        SUM(count) 'count',
        SUM(price) 'price'
        from (
        select Convert(varchar(10),sale_time,120) sale_time,price,good_name,stores_id,count from cds_ms_goods_list goods
        where
         goods.sale_time >= ? and goods.sale_time <= ? + ' 23:59:59'   
        union ALL
        select Convert(varchar(10),sale_time,120) sale_time,price,good_name,stores_id,count from view_cds_ms_goods_list goods
        where
         goods.create_date >= ? and goods.create_date <= ?+ ' 23:59:59'   
        ) goods
         
            where
              stores_id = ?  
         
        group by good_name
        order by count DESC 
[INFO][2017-08-16 17:56:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2017-08-10
参数2:2017-08-10
参数3:2017-08-11
参数4:2017-08-11
参数5:2017-08-12
参数6:2017-08-12
参数7:2017-08-13
参数8:2017-08-13
参数9:2017-08-14
参数10:2017-08-14
参数11:2017-08-15
参数12:2017-08-15
参数13:2017-08-16
参数14:2017-08-16
参数15:2017-08-10
参数16:2017-08-16
参数17:2017-08-10
参数18:2017-08-16
参数19:11
 
[INFO][2017-08-16 17:56:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_order_info.orderCountDay: 
SELECT
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) timeDay,
        SUM(case when fromin = '饿了么' then total_price else 0 end ) elm3,
        SUM(case when fromin = '美团' then total_price else 0 end ) mt3,
        SUM(case when fromin = '微信' then total_price else 0 end ) wx3,
        SUM(case when fromin = '百度外卖' then total_price else 0 end ) bdwm3,
        SUM(total_price) sum3,
        SUM(case when fromin = '饿了么' then 1 else 0 end ) elm1,
        SUM(case when fromin = '美团' then 1 else 0 end ) mt1,
        SUM(case when fromin = '微信' then 1 else 0 end ) wx1,
        SUM(case when fromin = '百度外卖' then 1 else 0 end ) bdwm1,
        count(*) sum1
        FROM
        (
        select goods_prcie+ship_fee+box_price total_price,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) timeDay,fromin,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) create_date,order_status FROM [dbo].[cds_order_info]
        where
        order_status in(1,2,3,4)
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
         
              AND stores_id = ?  
         
         
        union ALL
        select  goods_prcie+ship_fee+box_price total_price,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) timeDay,fromin,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) create_date,order_status FROM [dbo].[view_cds_order_info]
        where
        order_status in(1,2,3,4)
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
         
              AND stores_id = ?  
         
         
        ) temp
         
                GROUP BY create_date
                ORDER BY create_date 
[INFO][2017-08-16 17:56:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2017-08-10
参数2:2017-08-16
参数3:11
参数4:2017-08-10
参数5:2017-08-16
参数6:11
 
[INFO][2017-08-16 17:56:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_order_info.orderCountBrand: 
select distinct bra.* from cds_order_info ori left join cds_brand bra on ori.brand_id = bra.brand_id
        WHERE
        order_status in(1,2,3,4)
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
         
              AND stores_id = ? 
[INFO][2017-08-16 17:56:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2017-08-10
参数2:2017-08-16
参数3:11
 
[INFO][2017-08-16 17:56:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_good.getReportAnalyseDays: 
select good_name,
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count0',
            SUM(case when sale_time = ? then price else 0 end ) as 'price0',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count1',
            SUM(case when sale_time = ? then price else 0 end ) as 'price1',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count2',
            SUM(case when sale_time = ? then price else 0 end ) as 'price2',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count3',
            SUM(case when sale_time = ? then price else 0 end ) as 'price3',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count4',
            SUM(case when sale_time = ? then price else 0 end ) as 'price4',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count5',
            SUM(case when sale_time = ? then price else 0 end ) as 'price5',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count6',
            SUM(case when sale_time = ? then price else 0 end ) as 'price6',
         
        SUM(count) 'count',
        SUM(price) 'price'
        from (
        select Convert(varchar(10),sale_time,120) sale_time,price,good_name,stores_id,count from cds_ms_goods_list goods
        where
         goods.sale_time >= ? and goods.sale_time <= ? + ' 23:59:59'   
        union ALL
        select Convert(varchar(10),sale_time,120) sale_time,price,good_name,stores_id,count from view_cds_ms_goods_list goods
        where
         goods.create_date >= ? and goods.create_date <= ?+ ' 23:59:59'   
        ) goods
         
            where
              stores_id = ?  
         
        group by good_name
        order by count DESC 
[INFO][2017-08-16 17:56:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2017-08-10
参数2:2017-08-10
参数3:2017-08-11
参数4:2017-08-11
参数5:2017-08-12
参数6:2017-08-12
参数7:2017-08-13
参数8:2017-08-13
参数9:2017-08-14
参数10:2017-08-14
参数11:2017-08-15
参数12:2017-08-15
参数13:2017-08-16
参数14:2017-08-16
参数15:2017-08-10
参数16:2017-08-16
参数17:2017-08-10
参数18:2017-08-16
参数19:11
 
[INFO][2017-08-16 17:56:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_order_info.orderCountDay: 
SELECT
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) timeDay,
        SUM(case when fromin = '饿了么' then total_price else 0 end ) elm3,
        SUM(case when fromin = '美团' then total_price else 0 end ) mt3,
        SUM(case when fromin = '微信' then total_price else 0 end ) wx3,
        SUM(case when fromin = '百度外卖' then total_price else 0 end ) bdwm3,
        SUM(total_price) sum3,
        SUM(case when fromin = '饿了么' then 1 else 0 end ) elm1,
        SUM(case when fromin = '美团' then 1 else 0 end ) mt1,
        SUM(case when fromin = '微信' then 1 else 0 end ) wx1,
        SUM(case when fromin = '百度外卖' then 1 else 0 end ) bdwm1,
        count(*) sum1
        FROM
        (
        select goods_prcie+ship_fee+box_price total_price,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) timeDay,fromin,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) create_date,order_status FROM [dbo].[cds_order_info]
        where
        order_status in(1,2,3,4)
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
         
              AND stores_id = ?  
         
         
        union ALL
        select  goods_prcie+ship_fee+box_price total_price,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) timeDay,fromin,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) create_date,order_status FROM [dbo].[view_cds_order_info]
        where
        order_status in(1,2,3,4)
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
         
              AND stores_id = ?  
         
         
        ) temp
         
                GROUP BY create_date
                ORDER BY create_date 
[INFO][2017-08-16 17:56:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2017-08-10
参数2:2017-08-16
参数3:11
参数4:2017-08-10
参数5:2017-08-16
参数6:11
 
[INFO][2017-08-16 17:56:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_order_info.orderCountBrand: 
select distinct bra.* from cds_order_info ori left join cds_brand bra on ori.brand_id = bra.brand_id
        WHERE
        order_status in(1,2,3,4)
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
         
              AND stores_id = ? 
[INFO][2017-08-16 17:56:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2017-08-10
参数2:2017-08-16
参数3:11
 
[INFO][2017-08-16 17:56:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_good.getReportAnalyseDays: 
select good_name,
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count0',
            SUM(case when sale_time = ? then price else 0 end ) as 'price0',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count1',
            SUM(case when sale_time = ? then price else 0 end ) as 'price1',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count2',
            SUM(case when sale_time = ? then price else 0 end ) as 'price2',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count3',
            SUM(case when sale_time = ? then price else 0 end ) as 'price3',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count4',
            SUM(case when sale_time = ? then price else 0 end ) as 'price4',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count5',
            SUM(case when sale_time = ? then price else 0 end ) as 'price5',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count6',
            SUM(case when sale_time = ? then price else 0 end ) as 'price6',
         
        SUM(count) 'count',
        SUM(price) 'price'
        from (
        select Convert(varchar(10),sale_time,120) sale_time,price,good_name,stores_id,count from cds_ms_goods_list goods
        where
         goods.sale_time >= ? and goods.sale_time <= ? + ' 23:59:59'   
        union ALL
        select Convert(varchar(10),sale_time,120) sale_time,price,good_name,stores_id,count from view_cds_ms_goods_list goods
        where
         goods.create_date >= ? and goods.create_date <= ?+ ' 23:59:59'   
        ) goods
         
            where
              stores_id = ?  
         
        group by good_name
        order by count DESC 
[INFO][2017-08-16 17:56:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2017-08-10
参数2:2017-08-10
参数3:2017-08-11
参数4:2017-08-11
参数5:2017-08-12
参数6:2017-08-12
参数7:2017-08-13
参数8:2017-08-13
参数9:2017-08-14
参数10:2017-08-14
参数11:2017-08-15
参数12:2017-08-15
参数13:2017-08-16
参数14:2017-08-16
参数15:2017-08-10
参数16:2017-08-16
参数17:2017-08-10
参数18:2017-08-16
参数19:11
 
[INFO][2017-08-16 17:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_order_info.orderCountDay: 
SELECT
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) timeDay,
        SUM(case when fromin = '饿了么' then total_price else 0 end ) elm3,
        SUM(case when fromin = '美团' then total_price else 0 end ) mt3,
        SUM(case when fromin = '微信' then total_price else 0 end ) wx3,
        SUM(case when fromin = '百度外卖' then total_price else 0 end ) bdwm3,
        SUM(total_price) sum3,
        SUM(case when fromin = '饿了么' then 1 else 0 end ) elm1,
        SUM(case when fromin = '美团' then 1 else 0 end ) mt1,
        SUM(case when fromin = '微信' then 1 else 0 end ) wx1,
        SUM(case when fromin = '百度外卖' then 1 else 0 end ) bdwm1,
        count(*) sum1
        FROM
        (
        select goods_prcie+ship_fee+box_price total_price,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) timeDay,fromin,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) create_date,order_status FROM [dbo].[cds_order_info]
        where
        order_status in(1,2,3,4)
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
         
              AND stores_id = ?  
         
         
        union ALL
        select  goods_prcie+ship_fee+box_price total_price,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) timeDay,fromin,
        CONVERT (
        VARCHAR (10),
        create_date,
        120
        ) create_date,order_status FROM [dbo].[view_cds_order_info]
        where
        order_status in(1,2,3,4)
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
         
              AND stores_id = ?  
         
         
        ) temp
         
                GROUP BY create_date
                ORDER BY create_date 
[INFO][2017-08-16 17:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2017-08-10
参数2:2017-08-16
参数3:11
参数4:2017-08-10
参数5:2017-08-16
参数6:11
 
[INFO][2017-08-16 17:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_order_info.orderCountBrand: 
select distinct bra.* from cds_order_info ori left join cds_brand bra on ori.brand_id = bra.brand_id
        WHERE
        order_status in(1,2,3,4)
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
         
              AND stores_id = ? 
[INFO][2017-08-16 17:56:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2017-08-10
参数2:2017-08-16
参数3:11
 
[INFO][2017-08-16 17:56:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_good.getReportAnalyseDays: 
select good_name,
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count0',
            SUM(case when sale_time = ? then price else 0 end ) as 'price0',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count1',
            SUM(case when sale_time = ? then price else 0 end ) as 'price1',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count2',
            SUM(case when sale_time = ? then price else 0 end ) as 'price2',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count3',
            SUM(case when sale_time = ? then price else 0 end ) as 'price3',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count4',
            SUM(case when sale_time = ? then price else 0 end ) as 'price4',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count5',
            SUM(case when sale_time = ? then price else 0 end ) as 'price5',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count6',
            SUM(case when sale_time = ? then price else 0 end ) as 'price6',
         
        SUM(count) 'count',
        SUM(price) 'price'
        from (
        select Convert(varchar(10),sale_time,120) sale_time,price,good_name,stores_id,count from cds_ms_goods_list goods
        where
         goods.sale_time >= ? and goods.sale_time <= ? + ' 23:59:59'   
        union ALL
        select Convert(varchar(10),sale_time,120) sale_time,price,good_name,stores_id,count from view_cds_ms_goods_list goods
        where
         goods.create_date >= ? and goods.create_date <= ?+ ' 23:59:59'   
        ) goods
         
            where
              stores_id = ?  
         
        group by good_name
        order by count DESC 
[INFO][2017-08-16 17:56:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2017-08-10
参数2:2017-08-10
参数3:2017-08-11
参数4:2017-08-11
参数5:2017-08-12
参数6:2017-08-12
参数7:2017-08-13
参数8:2017-08-13
参数9:2017-08-14
参数10:2017-08-14
参数11:2017-08-15
参数12:2017-08-15
参数13:2017-08-16
参数14:2017-08-16
参数15:2017-08-10
参数16:2017-08-16
参数17:2017-08-10
参数18:2017-08-16
参数19:11
 
[INFO][2017-08-16 17:56:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_good.getReportAnalyseDays: 
select good_name,
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count0',
            SUM(case when sale_time = ? then price else 0 end ) as 'price0',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count1',
            SUM(case when sale_time = ? then price else 0 end ) as 'price1',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count2',
            SUM(case when sale_time = ? then price else 0 end ) as 'price2',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count3',
            SUM(case when sale_time = ? then price else 0 end ) as 'price3',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count4',
            SUM(case when sale_time = ? then price else 0 end ) as 'price4',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count5',
            SUM(case when sale_time = ? then price else 0 end ) as 'price5',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count6',
            SUM(case when sale_time = ? then price else 0 end ) as 'price6',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count7',
            SUM(case when sale_time = ? then price else 0 end ) as 'price7',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count8',
            SUM(case when sale_time = ? then price else 0 end ) as 'price8',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count9',
            SUM(case when sale_time = ? then price else 0 end ) as 'price9',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count10',
            SUM(case when sale_time = ? then price else 0 end ) as 'price10',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count11',
            SUM(case when sale_time = ? then price else 0 end ) as 'price11',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count12',
            SUM(case when sale_time = ? then price else 0 end ) as 'price12',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count13',
            SUM(case when sale_time = ? then price else 0 end ) as 'price13',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count14',
            SUM(case when sale_time = ? then price else 0 end ) as 'price14',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count15',
            SUM(case when sale_time = ? then price else 0 end ) as 'price15',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count16',
            SUM(case when sale_time = ? then price else 0 end ) as 'price16',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count17',
            SUM(case when sale_time = ? then price else 0 end ) as 'price17',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count18',
            SUM(case when sale_time = ? then price else 0 end ) as 'price18',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count19',
            SUM(case when sale_time = ? then price else 0 end ) as 'price19',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count20',
            SUM(case when sale_time = ? then price else 0 end ) as 'price20',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count21',
            SUM(case when sale_time = ? then price else 0 end ) as 'price21',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count22',
            SUM(case when sale_time = ? then price else 0 end ) as 'price22',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count23',
            SUM(case when sale_time = ? then price else 0 end ) as 'price23',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count24',
            SUM(case when sale_time = ? then price else 0 end ) as 'price24',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count25',
            SUM(case when sale_time = ? then price else 0 end ) as 'price25',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count26',
            SUM(case when sale_time = ? then price else 0 end ) as 'price26',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count27',
            SUM(case when sale_time = ? then price else 0 end ) as 'price27',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count28',
            SUM(case when sale_time = ? then price else 0 end ) as 'price28',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count29',
            SUM(case when sale_time = ? then price else 0 end ) as 'price29',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count30',
            SUM(case when sale_time = ? then price else 0 end ) as 'price30',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count31',
            SUM(case when sale_time = ? then price else 0 end ) as 'price31',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count32',
            SUM(case when sale_time = ? then price else 0 end ) as 'price32',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count33',
            SUM(case when sale_time = ? then price else 0 end ) as 'price33',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count34',
            SUM(case when sale_time = ? then price else 0 end ) as 'price34',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count35',
            SUM(case when sale_time = ? then price else 0 end ) as 'price35',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count36',
            SUM(case when sale_time = ? then price else 0 end ) as 'price36',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count37',
            SUM(case when sale_time = ? then price else 0 end ) as 'price37',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count38',
            SUM(case when sale_time = ? then price else 0 end ) as 'price38',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count39',
            SUM(case when sale_time = ? then price else 0 end ) as 'price39',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count40',
            SUM(case when sale_time = ? then price else 0 end ) as 'price40',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count41',
            SUM(case when sale_time = ? then price else 0 end ) as 'price41',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count42',
            SUM(case when sale_time = ? then price else 0 end ) as 'price42',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count43',
            SUM(case when sale_time = ? then price else 0 end ) as 'price43',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count44',
            SUM(case when sale_time = ? then price else 0 end ) as 'price44',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count45',
            SUM(case when sale_time = ? then price else 0 end ) as 'price45',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count46',
            SUM(case when sale_time = ? then price else 0 end ) as 'price46',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count47',
            SUM(case when sale_time = ? then price else 0 end ) as 'price47',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count48',
            SUM(case when sale_time = ? then price else 0 end ) as 'price48',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count49',
            SUM(case when sale_time = ? then price else 0 end ) as 'price49',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count50',
            SUM(case when sale_time = ? then price else 0 end ) as 'price50',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count51',
            SUM(case when sale_time = ? then price else 0 end ) as 'price51',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count52',
            SUM(case when sale_time = ? then price else 0 end ) as 'price52',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count53',
            SUM(case when sale_time = ? then price else 0 end ) as 'price53',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count54',
            SUM(case when sale_time = ? then price else 0 end ) as 'price54',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count55',
            SUM(case when sale_time = ? then price else 0 end ) as 'price55',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count56',
            SUM(case when sale_time = ? then price else 0 end ) as 'price56',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count57',
            SUM(case when sale_time = ? then price else 0 end ) as 'price57',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count58',
            SUM(case when sale_time = ? then price else 0 end ) as 'price58',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count59',
            SUM(case when sale_time = ? then price else 0 end ) as 'price59',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count60',
            SUM(case when sale_time = ? then price else 0 end ) as 'price60',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count61',
            SUM(case when sale_time = ? then price else 0 end ) as 'price61',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count62',
            SUM(case when sale_time = ? then price else 0 end ) as 'price62',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count63',
            SUM(case when sale_time = ? then price else 0 end ) as 'price63',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count64',
            SUM(case when sale_time = ? then price else 0 end ) as 'price64',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count65',
            SUM(case when sale_time = ? then price else 0 end ) as 'price65',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count66',
            SUM(case when sale_time = ? then price else 0 end ) as 'price66',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count67',
            SUM(case when sale_time = ? then price else 0 end ) as 'price67',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count68',
            SUM(case when sale_time = ? then price else 0 end ) as 'price68',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count69',
            SUM(case when sale_time = ? then price else 0 end ) as 'price69',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count70',
            SUM(case when sale_time = ? then price else 0 end ) as 'price70',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count71',
            SUM(case when sale_time = ? then price else 0 end ) as 'price71',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count72',
            SUM(case when sale_time = ? then price else 0 end ) as 'price72',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count73',
            SUM(case when sale_time = ? then price else 0 end ) as 'price73',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count74',
            SUM(case when sale_time = ? then price else 0 end ) as 'price74',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count75',
            SUM(case when sale_time = ? then price else 0 end ) as 'price75',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count76',
            SUM(case when sale_time = ? then price else 0 end ) as 'price76',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count77',
            SUM(case when sale_time = ? then price else 0 end ) as 'price77',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count78',
            SUM(case when sale_time = ? then price else 0 end ) as 'price78',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count79',
            SUM(case when sale_time = ? then price else 0 end ) as 'price79',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count80',
            SUM(case when sale_time = ? then price else 0 end ) as 'price80',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count81',
            SUM(case when sale_time = ? then price else 0 end ) as 'price81',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count82',
            SUM(case when sale_time = ? then price else 0 end ) as 'price82',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count83',
            SUM(case when sale_time = ? then price else 0 end ) as 'price83',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count84',
            SUM(case when sale_time = ? then price else 0 end ) as 'price84',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count85',
            SUM(case when sale_time = ? then price else 0 end ) as 'price85',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count86',
            SUM(case when sale_time = ? then price else 0 end ) as 'price86',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count87',
            SUM(case when sale_time = ? then price else 0 end ) as 'price87',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count88',
            SUM(case when sale_time = ? then price else 0 end ) as 'price88',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count89',
            SUM(case when sale_time = ? then price else 0 end ) as 'price89',
         
        SUM(count) 'count',
        SUM(price) 'price'
        from (
        select Convert(varchar(10),sale_time,120) sale_time,price,good_name,stores_id,count from cds_ms_goods_list goods
        where
         goods.sale_time >= ? and goods.sale_time <= ? + ' 23:59:59'   
        union ALL
        select Convert(varchar(10),sale_time,120) sale_time,price,good_name,stores_id,count from view_cds_ms_goods_list goods
        where
         goods.create_date >= ? and goods.create_date <= ?+ ' 23:59:59'   
        ) goods
         
            where
              stores_id = ?  
         
        group by good_name
        order by count DESC 
[INFO][2017-08-16 17:56:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2017-05-19
参数2:2017-05-19
参数3:2017-05-20
参数4:2017-05-20
参数5:2017-05-21
参数6:2017-05-21
参数7:2017-05-22
参数8:2017-05-22
参数9:2017-05-23
参数10:2017-05-23
参数11:2017-05-24
参数12:2017-05-24
参数13:2017-05-25
参数14:2017-05-25
参数15:2017-05-26
参数16:2017-05-26
参数17:2017-05-27
参数18:2017-05-27
参数19:2017-05-28
参数20:2017-05-28
参数21:2017-05-29
参数22:2017-05-29
参数23:2017-05-30
参数24:2017-05-30
参数25:2017-05-31
参数26:2017-05-31
参数27:2017-06-01
参数28:2017-06-01
参数29:2017-06-02
参数30:2017-06-02
参数31:2017-06-03
参数32:2017-06-03
参数33:2017-06-04
参数34:2017-06-04
参数35:2017-06-05
参数36:2017-06-05
参数37:2017-06-06
参数38:2017-06-06
参数39:2017-06-07
参数40:2017-06-07
参数41:2017-06-08
参数42:2017-06-08
参数43:2017-06-09
参数44:2017-06-09
参数45:2017-06-10
参数46:2017-06-10
参数47:2017-06-11
参数48:2017-06-11
参数49:2017-06-12
参数50:2017-06-12
参数51:2017-06-13
参数52:2017-06-13
参数53:2017-06-14
参数54:2017-06-14
参数55:2017-06-15
参数56:2017-06-15
参数57:2017-06-16
参数58:2017-06-16
参数59:2017-06-17
参数60:2017-06-17
参数61:2017-06-18
参数62:2017-06-18
参数63:2017-06-19
参数64:2017-06-19
参数65:2017-06-20
参数66:2017-06-20
参数67:2017-06-21
参数68:2017-06-21
参数69:2017-06-22
参数70:2017-06-22
参数71:2017-06-23
参数72:2017-06-23
参数73:2017-06-24
参数74:2017-06-24
参数75:2017-06-25
参数76:2017-06-25
参数77:2017-06-26
参数78:2017-06-26
参数79:2017-06-27
参数80:2017-06-27
参数81:2017-06-28
参数82:2017-06-28
参数83:2017-06-29
参数84:2017-06-29
参数85:2017-06-30
参数86:2017-06-30
参数87:2017-07-01
参数88:2017-07-01
参数89:2017-07-02
参数90:2017-07-02
参数91:2017-07-03
参数92:2017-07-03
参数93:2017-07-04
参数94:2017-07-04
参数95:2017-07-05
参数96:2017-07-05
参数97:2017-07-06
参数98:2017-07-06
参数99:2017-07-07
参数100:2017-07-07
参数101:2017-07-08
参数102:2017-07-08
参数103:2017-07-09
参数104:2017-07-09
参数105:2017-07-10
参数106:2017-07-10
参数107:2017-07-11
参数108:2017-07-11
参数109:2017-07-12
参数110:2017-07-12
参数111:2017-07-13
参数112:2017-07-13
参数113:2017-07-14
参数114:2017-07-14
参数115:2017-07-15
参数116:2017-07-15
参数117:2017-07-16
参数118:2017-07-16
参数119:2017-07-17
参数120:2017-07-17
参数121:2017-07-18
参数122:2017-07-18
参数123:2017-07-19
参数124:2017-07-19
参数125:2017-07-20
参数126:2017-07-20
参数127:2017-07-21
参数128:2017-07-21
参数129:2017-07-22
参数130:2017-07-22
参数131:2017-07-23
参数132:2017-07-23
参数133:2017-07-24
参数134:2017-07-24
参数135:2017-07-25
参数136:2017-07-25
参数137:2017-07-26
参数138:2017-07-26
参数139:2017-07-27
参数140:2017-07-27
参数141:2017-07-28
参数142:2017-07-28
参数143:2017-07-29
参数144:2017-07-29
参数145:2017-07-30
参数146:2017-07-30
参数147:2017-07-31
参数148:2017-07-31
参数149:2017-08-01
参数150:2017-08-01
参数151:2017-08-02
参数152:2017-08-02
参数153:2017-08-03
参数154:2017-08-03
参数155:2017-08-04
参数156:2017-08-04
参数157:2017-08-05
参数158:2017-08-05
参数159:2017-08-06
参数160:2017-08-06
参数161:2017-08-07
参数162:2017-08-07
参数163:2017-08-08
参数164:2017-08-08
参数165:2017-08-09
参数166:2017-08-09
参数167:2017-08-10
参数168:2017-08-10
参数169:2017-08-11
参数170:2017-08-11
参数171:2017-08-12
参数172:2017-08-12
参数173:2017-08-13
参数174:2017-08-13
参数175:2017-08-14
参数176:2017-08-14
参数177:2017-08-15
参数178:2017-08-15
参数179:2017-08-16
参数180:2017-08-16
参数181:2017-05-19
参数182:2017-08-16
参数183:2017-05-19
参数184:2017-08-16
参数185:11
 
[INFO][2017-08-16 17:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_good.getReportAnalyseDays: 
select good_name,
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count0',
            SUM(case when sale_time = ? then price else 0 end ) as 'price0',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count1',
            SUM(case when sale_time = ? then price else 0 end ) as 'price1',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count2',
            SUM(case when sale_time = ? then price else 0 end ) as 'price2',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count3',
            SUM(case when sale_time = ? then price else 0 end ) as 'price3',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count4',
            SUM(case when sale_time = ? then price else 0 end ) as 'price4',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count5',
            SUM(case when sale_time = ? then price else 0 end ) as 'price5',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count6',
            SUM(case when sale_time = ? then price else 0 end ) as 'price6',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count7',
            SUM(case when sale_time = ? then price else 0 end ) as 'price7',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count8',
            SUM(case when sale_time = ? then price else 0 end ) as 'price8',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count9',
            SUM(case when sale_time = ? then price else 0 end ) as 'price9',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count10',
            SUM(case when sale_time = ? then price else 0 end ) as 'price10',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count11',
            SUM(case when sale_time = ? then price else 0 end ) as 'price11',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count12',
            SUM(case when sale_time = ? then price else 0 end ) as 'price12',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count13',
            SUM(case when sale_time = ? then price else 0 end ) as 'price13',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count14',
            SUM(case when sale_time = ? then price else 0 end ) as 'price14',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count15',
            SUM(case when sale_time = ? then price else 0 end ) as 'price15',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count16',
            SUM(case when sale_time = ? then price else 0 end ) as 'price16',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count17',
            SUM(case when sale_time = ? then price else 0 end ) as 'price17',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count18',
            SUM(case when sale_time = ? then price else 0 end ) as 'price18',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count19',
            SUM(case when sale_time = ? then price else 0 end ) as 'price19',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count20',
            SUM(case when sale_time = ? then price else 0 end ) as 'price20',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count21',
            SUM(case when sale_time = ? then price else 0 end ) as 'price21',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count22',
            SUM(case when sale_time = ? then price else 0 end ) as 'price22',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count23',
            SUM(case when sale_time = ? then price else 0 end ) as 'price23',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count24',
            SUM(case when sale_time = ? then price else 0 end ) as 'price24',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count25',
            SUM(case when sale_time = ? then price else 0 end ) as 'price25',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count26',
            SUM(case when sale_time = ? then price else 0 end ) as 'price26',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count27',
            SUM(case when sale_time = ? then price else 0 end ) as 'price27',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count28',
            SUM(case when sale_time = ? then price else 0 end ) as 'price28',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count29',
            SUM(case when sale_time = ? then price else 0 end ) as 'price29',
         
        SUM(count) 'count',
        SUM(price) 'price'
        from (
        select Convert(varchar(10),sale_time,120) sale_time,price,good_name,stores_id,count from cds_ms_goods_list goods
        where
         goods.sale_time >= ? and goods.sale_time <= ? + ' 23:59:59'   
        union ALL
        select Convert(varchar(10),sale_time,120) sale_time,price,good_name,stores_id,count from view_cds_ms_goods_list goods
        where
         goods.create_date >= ? and goods.create_date <= ?+ ' 23:59:59'   
        ) goods
         
            where
              stores_id = ?  
         
        group by good_name
        order by count DESC 
[INFO][2017-08-16 17:57:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2017-07-18
参数2:2017-07-18
参数3:2017-07-19
参数4:2017-07-19
参数5:2017-07-20
参数6:2017-07-20
参数7:2017-07-21
参数8:2017-07-21
参数9:2017-07-22
参数10:2017-07-22
参数11:2017-07-23
参数12:2017-07-23
参数13:2017-07-24
参数14:2017-07-24
参数15:2017-07-25
参数16:2017-07-25
参数17:2017-07-26
参数18:2017-07-26
参数19:2017-07-27
参数20:2017-07-27
参数21:2017-07-28
参数22:2017-07-28
参数23:2017-07-29
参数24:2017-07-29
参数25:2017-07-30
参数26:2017-07-30
参数27:2017-07-31
参数28:2017-07-31
参数29:2017-08-01
参数30:2017-08-01
参数31:2017-08-02
参数32:2017-08-02
参数33:2017-08-03
参数34:2017-08-03
参数35:2017-08-04
参数36:2017-08-04
参数37:2017-08-05
参数38:2017-08-05
参数39:2017-08-06
参数40:2017-08-06
参数41:2017-08-07
参数42:2017-08-07
参数43:2017-08-08
参数44:2017-08-08
参数45:2017-08-09
参数46:2017-08-09
参数47:2017-08-10
参数48:2017-08-10
参数49:2017-08-11
参数50:2017-08-11
参数51:2017-08-12
参数52:2017-08-12
参数53:2017-08-13
参数54:2017-08-13
参数55:2017-08-14
参数56:2017-08-14
参数57:2017-08-15
参数58:2017-08-15
参数59:2017-08-16
参数60:2017-08-16
参数61:2017-07-18
参数62:2017-08-16
参数63:2017-07-18
参数64:2017-08-16
参数65:11
 
[INFO][2017-08-16 17:57:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_good.getReportAnalyseDays: 
select good_name,
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count0',
            SUM(case when sale_time = ? then price else 0 end ) as 'price0',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count1',
            SUM(case when sale_time = ? then price else 0 end ) as 'price1',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count2',
            SUM(case when sale_time = ? then price else 0 end ) as 'price2',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count3',
            SUM(case when sale_time = ? then price else 0 end ) as 'price3',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count4',
            SUM(case when sale_time = ? then price else 0 end ) as 'price4',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count5',
            SUM(case when sale_time = ? then price else 0 end ) as 'price5',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count6',
            SUM(case when sale_time = ? then price else 0 end ) as 'price6',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count7',
            SUM(case when sale_time = ? then price else 0 end ) as 'price7',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count8',
            SUM(case when sale_time = ? then price else 0 end ) as 'price8',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count9',
            SUM(case when sale_time = ? then price else 0 end ) as 'price9',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count10',
            SUM(case when sale_time = ? then price else 0 end ) as 'price10',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count11',
            SUM(case when sale_time = ? then price else 0 end ) as 'price11',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count12',
            SUM(case when sale_time = ? then price else 0 end ) as 'price12',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count13',
            SUM(case when sale_time = ? then price else 0 end ) as 'price13',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count14',
            SUM(case when sale_time = ? then price else 0 end ) as 'price14',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count15',
            SUM(case when sale_time = ? then price else 0 end ) as 'price15',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count16',
            SUM(case when sale_time = ? then price else 0 end ) as 'price16',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count17',
            SUM(case when sale_time = ? then price else 0 end ) as 'price17',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count18',
            SUM(case when sale_time = ? then price else 0 end ) as 'price18',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count19',
            SUM(case when sale_time = ? then price else 0 end ) as 'price19',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count20',
            SUM(case when sale_time = ? then price else 0 end ) as 'price20',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count21',
            SUM(case when sale_time = ? then price else 0 end ) as 'price21',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count22',
            SUM(case when sale_time = ? then price else 0 end ) as 'price22',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count23',
            SUM(case when sale_time = ? then price else 0 end ) as 'price23',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count24',
            SUM(case when sale_time = ? then price else 0 end ) as 'price24',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count25',
            SUM(case when sale_time = ? then price else 0 end ) as 'price25',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count26',
            SUM(case when sale_time = ? then price else 0 end ) as 'price26',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count27',
            SUM(case when sale_time = ? then price else 0 end ) as 'price27',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count28',
            SUM(case when sale_time = ? then price else 0 end ) as 'price28',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count29',
            SUM(case when sale_time = ? then price else 0 end ) as 'price29',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count30',
            SUM(case when sale_time = ? then price else 0 end ) as 'price30',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count31',
            SUM(case when sale_time = ? then price else 0 end ) as 'price31',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count32',
            SUM(case when sale_time = ? then price else 0 end ) as 'price32',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count33',
            SUM(case when sale_time = ? then price else 0 end ) as 'price33',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count34',
            SUM(case when sale_time = ? then price else 0 end ) as 'price34',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count35',
            SUM(case when sale_time = ? then price else 0 end ) as 'price35',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count36',
            SUM(case when sale_time = ? then price else 0 end ) as 'price36',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count37',
            SUM(case when sale_time = ? then price else 0 end ) as 'price37',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count38',
            SUM(case when sale_time = ? then price else 0 end ) as 'price38',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count39',
            SUM(case when sale_time = ? then price else 0 end ) as 'price39',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count40',
            SUM(case when sale_time = ? then price else 0 end ) as 'price40',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count41',
            SUM(case when sale_time = ? then price else 0 end ) as 'price41',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count42',
            SUM(case when sale_time = ? then price else 0 end ) as 'price42',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count43',
            SUM(case when sale_time = ? then price else 0 end ) as 'price43',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count44',
            SUM(case when sale_time = ? then price else 0 end ) as 'price44',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count45',
            SUM(case when sale_time = ? then price else 0 end ) as 'price45',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count46',
            SUM(case when sale_time = ? then price else 0 end ) as 'price46',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count47',
            SUM(case when sale_time = ? then price else 0 end ) as 'price47',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count48',
            SUM(case when sale_time = ? then price else 0 end ) as 'price48',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count49',
            SUM(case when sale_time = ? then price else 0 end ) as 'price49',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count50',
            SUM(case when sale_time = ? then price else 0 end ) as 'price50',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count51',
            SUM(case when sale_time = ? then price else 0 end ) as 'price51',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count52',
            SUM(case when sale_time = ? then price else 0 end ) as 'price52',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count53',
            SUM(case when sale_time = ? then price else 0 end ) as 'price53',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count54',
            SUM(case when sale_time = ? then price else 0 end ) as 'price54',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count55',
            SUM(case when sale_time = ? then price else 0 end ) as 'price55',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count56',
            SUM(case when sale_time = ? then price else 0 end ) as 'price56',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count57',
            SUM(case when sale_time = ? then price else 0 end ) as 'price57',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count58',
            SUM(case when sale_time = ? then price else 0 end ) as 'price58',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count59',
            SUM(case when sale_time = ? then price else 0 end ) as 'price59',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count60',
            SUM(case when sale_time = ? then price else 0 end ) as 'price60',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count61',
            SUM(case when sale_time = ? then price else 0 end ) as 'price61',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count62',
            SUM(case when sale_time = ? then price else 0 end ) as 'price62',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count63',
            SUM(case when sale_time = ? then price else 0 end ) as 'price63',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count64',
            SUM(case when sale_time = ? then price else 0 end ) as 'price64',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count65',
            SUM(case when sale_time = ? then price else 0 end ) as 'price65',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count66',
            SUM(case when sale_time = ? then price else 0 end ) as 'price66',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count67',
            SUM(case when sale_time = ? then price else 0 end ) as 'price67',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count68',
            SUM(case when sale_time = ? then price else 0 end ) as 'price68',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count69',
            SUM(case when sale_time = ? then price else 0 end ) as 'price69',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count70',
            SUM(case when sale_time = ? then price else 0 end ) as 'price70',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count71',
            SUM(case when sale_time = ? then price else 0 end ) as 'price71',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count72',
            SUM(case when sale_time = ? then price else 0 end ) as 'price72',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count73',
            SUM(case when sale_time = ? then price else 0 end ) as 'price73',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count74',
            SUM(case when sale_time = ? then price else 0 end ) as 'price74',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count75',
            SUM(case when sale_time = ? then price else 0 end ) as 'price75',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count76',
            SUM(case when sale_time = ? then price else 0 end ) as 'price76',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count77',
            SUM(case when sale_time = ? then price else 0 end ) as 'price77',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count78',
            SUM(case when sale_time = ? then price else 0 end ) as 'price78',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count79',
            SUM(case when sale_time = ? then price else 0 end ) as 'price79',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count80',
            SUM(case when sale_time = ? then price else 0 end ) as 'price80',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count81',
            SUM(case when sale_time = ? then price else 0 end ) as 'price81',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count82',
            SUM(case when sale_time = ? then price else 0 end ) as 'price82',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count83',
            SUM(case when sale_time = ? then price else 0 end ) as 'price83',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count84',
            SUM(case when sale_time = ? then price else 0 end ) as 'price84',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count85',
            SUM(case when sale_time = ? then price else 0 end ) as 'price85',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count86',
            SUM(case when sale_time = ? then price else 0 end ) as 'price86',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count87',
            SUM(case when sale_time = ? then price else 0 end ) as 'price87',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count88',
            SUM(case when sale_time = ? then price else 0 end ) as 'price88',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count89',
            SUM(case when sale_time = ? then price else 0 end ) as 'price89',
         
        SUM(count) 'count',
        SUM(price) 'price'
        from (
        select Convert(varchar(10),sale_time,120) sale_time,price,good_name,stores_id,count from cds_ms_goods_list goods
        where
         goods.sale_time >= ? and goods.sale_time <= ? + ' 23:59:59'   
        union ALL
        select Convert(varchar(10),sale_time,120) sale_time,price,good_name,stores_id,count from view_cds_ms_goods_list goods
        where
         goods.create_date >= ? and goods.create_date <= ?+ ' 23:59:59'   
        ) goods
         
            where
              stores_id = ?  
         
        group by good_name
        order by count DESC 
[INFO][2017-08-16 17:57:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2017-05-19
参数2:2017-05-19
参数3:2017-05-20
参数4:2017-05-20
参数5:2017-05-21
参数6:2017-05-21
参数7:2017-05-22
参数8:2017-05-22
参数9:2017-05-23
参数10:2017-05-23
参数11:2017-05-24
参数12:2017-05-24
参数13:2017-05-25
参数14:2017-05-25
参数15:2017-05-26
参数16:2017-05-26
参数17:2017-05-27
参数18:2017-05-27
参数19:2017-05-28
参数20:2017-05-28
参数21:2017-05-29
参数22:2017-05-29
参数23:2017-05-30
参数24:2017-05-30
参数25:2017-05-31
参数26:2017-05-31
参数27:2017-06-01
参数28:2017-06-01
参数29:2017-06-02
参数30:2017-06-02
参数31:2017-06-03
参数32:2017-06-03
参数33:2017-06-04
参数34:2017-06-04
参数35:2017-06-05
参数36:2017-06-05
参数37:2017-06-06
参数38:2017-06-06
参数39:2017-06-07
参数40:2017-06-07
参数41:2017-06-08
参数42:2017-06-08
参数43:2017-06-09
参数44:2017-06-09
参数45:2017-06-10
参数46:2017-06-10
参数47:2017-06-11
参数48:2017-06-11
参数49:2017-06-12
参数50:2017-06-12
参数51:2017-06-13
参数52:2017-06-13
参数53:2017-06-14
参数54:2017-06-14
参数55:2017-06-15
参数56:2017-06-15
参数57:2017-06-16
参数58:2017-06-16
参数59:2017-06-17
参数60:2017-06-17
参数61:2017-06-18
参数62:2017-06-18
参数63:2017-06-19
参数64:2017-06-19
参数65:2017-06-20
参数66:2017-06-20
参数67:2017-06-21
参数68:2017-06-21
参数69:2017-06-22
参数70:2017-06-22
参数71:2017-06-23
参数72:2017-06-23
参数73:2017-06-24
参数74:2017-06-24
参数75:2017-06-25
参数76:2017-06-25
参数77:2017-06-26
参数78:2017-06-26
参数79:2017-06-27
参数80:2017-06-27
参数81:2017-06-28
参数82:2017-06-28
参数83:2017-06-29
参数84:2017-06-29
参数85:2017-06-30
参数86:2017-06-30
参数87:2017-07-01
参数88:2017-07-01
参数89:2017-07-02
参数90:2017-07-02
参数91:2017-07-03
参数92:2017-07-03
参数93:2017-07-04
参数94:2017-07-04
参数95:2017-07-05
参数96:2017-07-05
参数97:2017-07-06
参数98:2017-07-06
参数99:2017-07-07
参数100:2017-07-07
参数101:2017-07-08
参数102:2017-07-08
参数103:2017-07-09
参数104:2017-07-09
参数105:2017-07-10
参数106:2017-07-10
参数107:2017-07-11
参数108:2017-07-11
参数109:2017-07-12
参数110:2017-07-12
参数111:2017-07-13
参数112:2017-07-13
参数113:2017-07-14
参数114:2017-07-14
参数115:2017-07-15
参数116:2017-07-15
参数117:2017-07-16
参数118:2017-07-16
参数119:2017-07-17
参数120:2017-07-17
参数121:2017-07-18
参数122:2017-07-18
参数123:2017-07-19
参数124:2017-07-19
参数125:2017-07-20
参数126:2017-07-20
参数127:2017-07-21
参数128:2017-07-21
参数129:2017-07-22
参数130:2017-07-22
参数131:2017-07-23
参数132:2017-07-23
参数133:2017-07-24
参数134:2017-07-24
参数135:2017-07-25
参数136:2017-07-25
参数137:2017-07-26
参数138:2017-07-26
参数139:2017-07-27
参数140:2017-07-27
参数141:2017-07-28
参数142:2017-07-28
参数143:2017-07-29
参数144:2017-07-29
参数145:2017-07-30
参数146:2017-07-30
参数147:2017-07-31
参数148:2017-07-31
参数149:2017-08-01
参数150:2017-08-01
参数151:2017-08-02
参数152:2017-08-02
参数153:2017-08-03
参数154:2017-08-03
参数155:2017-08-04
参数156:2017-08-04
参数157:2017-08-05
参数158:2017-08-05
参数159:2017-08-06
参数160:2017-08-06
参数161:2017-08-07
参数162:2017-08-07
参数163:2017-08-08
参数164:2017-08-08
参数165:2017-08-09
参数166:2017-08-09
参数167:2017-08-10
参数168:2017-08-10
参数169:2017-08-11
参数170:2017-08-11
参数171:2017-08-12
参数172:2017-08-12
参数173:2017-08-13
参数174:2017-08-13
参数175:2017-08-14
参数176:2017-08-14
参数177:2017-08-15
参数178:2017-08-15
参数179:2017-08-16
参数180:2017-08-16
参数181:2017-05-19
参数182:2017-08-16
参数183:2017-05-19
参数184:2017-08-16
参数185:11
 
[INFO][2017-08-16 17:57:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_good.getReportAnalyseDays: 
select good_name,
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count0',
            SUM(case when sale_time = ? then price else 0 end ) as 'price0',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count1',
            SUM(case when sale_time = ? then price else 0 end ) as 'price1',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count2',
            SUM(case when sale_time = ? then price else 0 end ) as 'price2',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count3',
            SUM(case when sale_time = ? then price else 0 end ) as 'price3',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count4',
            SUM(case when sale_time = ? then price else 0 end ) as 'price4',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count5',
            SUM(case when sale_time = ? then price else 0 end ) as 'price5',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count6',
            SUM(case when sale_time = ? then price else 0 end ) as 'price6',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count7',
            SUM(case when sale_time = ? then price else 0 end ) as 'price7',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count8',
            SUM(case when sale_time = ? then price else 0 end ) as 'price8',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count9',
            SUM(case when sale_time = ? then price else 0 end ) as 'price9',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count10',
            SUM(case when sale_time = ? then price else 0 end ) as 'price10',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count11',
            SUM(case when sale_time = ? then price else 0 end ) as 'price11',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count12',
            SUM(case when sale_time = ? then price else 0 end ) as 'price12',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count13',
            SUM(case when sale_time = ? then price else 0 end ) as 'price13',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count14',
            SUM(case when sale_time = ? then price else 0 end ) as 'price14',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count15',
            SUM(case when sale_time = ? then price else 0 end ) as 'price15',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count16',
            SUM(case when sale_time = ? then price else 0 end ) as 'price16',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count17',
            SUM(case when sale_time = ? then price else 0 end ) as 'price17',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count18',
            SUM(case when sale_time = ? then price else 0 end ) as 'price18',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count19',
            SUM(case when sale_time = ? then price else 0 end ) as 'price19',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count20',
            SUM(case when sale_time = ? then price else 0 end ) as 'price20',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count21',
            SUM(case when sale_time = ? then price else 0 end ) as 'price21',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count22',
            SUM(case when sale_time = ? then price else 0 end ) as 'price22',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count23',
            SUM(case when sale_time = ? then price else 0 end ) as 'price23',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count24',
            SUM(case when sale_time = ? then price else 0 end ) as 'price24',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count25',
            SUM(case when sale_time = ? then price else 0 end ) as 'price25',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count26',
            SUM(case when sale_time = ? then price else 0 end ) as 'price26',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count27',
            SUM(case when sale_time = ? then price else 0 end ) as 'price27',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count28',
            SUM(case when sale_time = ? then price else 0 end ) as 'price28',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count29',
            SUM(case when sale_time = ? then price else 0 end ) as 'price29',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count30',
            SUM(case when sale_time = ? then price else 0 end ) as 'price30',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count31',
            SUM(case when sale_time = ? then price else 0 end ) as 'price31',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count32',
            SUM(case when sale_time = ? then price else 0 end ) as 'price32',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count33',
            SUM(case when sale_time = ? then price else 0 end ) as 'price33',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count34',
            SUM(case when sale_time = ? then price else 0 end ) as 'price34',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count35',
            SUM(case when sale_time = ? then price else 0 end ) as 'price35',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count36',
            SUM(case when sale_time = ? then price else 0 end ) as 'price36',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count37',
            SUM(case when sale_time = ? then price else 0 end ) as 'price37',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count38',
            SUM(case when sale_time = ? then price else 0 end ) as 'price38',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count39',
            SUM(case when sale_time = ? then price else 0 end ) as 'price39',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count40',
            SUM(case when sale_time = ? then price else 0 end ) as 'price40',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count41',
            SUM(case when sale_time = ? then price else 0 end ) as 'price41',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count42',
            SUM(case when sale_time = ? then price else 0 end ) as 'price42',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count43',
            SUM(case when sale_time = ? then price else 0 end ) as 'price43',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count44',
            SUM(case when sale_time = ? then price else 0 end ) as 'price44',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count45',
            SUM(case when sale_time = ? then price else 0 end ) as 'price45',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count46',
            SUM(case when sale_time = ? then price else 0 end ) as 'price46',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count47',
            SUM(case when sale_time = ? then price else 0 end ) as 'price47',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count48',
            SUM(case when sale_time = ? then price else 0 end ) as 'price48',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count49',
            SUM(case when sale_time = ? then price else 0 end ) as 'price49',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count50',
            SUM(case when sale_time = ? then price else 0 end ) as 'price50',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count51',
            SUM(case when sale_time = ? then price else 0 end ) as 'price51',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count52',
            SUM(case when sale_time = ? then price else 0 end ) as 'price52',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count53',
            SUM(case when sale_time = ? then price else 0 end ) as 'price53',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count54',
            SUM(case when sale_time = ? then price else 0 end ) as 'price54',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count55',
            SUM(case when sale_time = ? then price else 0 end ) as 'price55',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count56',
            SUM(case when sale_time = ? then price else 0 end ) as 'price56',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count57',
            SUM(case when sale_time = ? then price else 0 end ) as 'price57',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count58',
            SUM(case when sale_time = ? then price else 0 end ) as 'price58',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count59',
            SUM(case when sale_time = ? then price else 0 end ) as 'price59',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count60',
            SUM(case when sale_time = ? then price else 0 end ) as 'price60',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count61',
            SUM(case when sale_time = ? then price else 0 end ) as 'price61',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count62',
            SUM(case when sale_time = ? then price else 0 end ) as 'price62',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count63',
            SUM(case when sale_time = ? then price else 0 end ) as 'price63',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count64',
            SUM(case when sale_time = ? then price else 0 end ) as 'price64',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count65',
            SUM(case when sale_time = ? then price else 0 end ) as 'price65',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count66',
            SUM(case when sale_time = ? then price else 0 end ) as 'price66',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count67',
            SUM(case when sale_time = ? then price else 0 end ) as 'price67',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count68',
            SUM(case when sale_time = ? then price else 0 end ) as 'price68',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count69',
            SUM(case when sale_time = ? then price else 0 end ) as 'price69',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count70',
            SUM(case when sale_time = ? then price else 0 end ) as 'price70',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count71',
            SUM(case when sale_time = ? then price else 0 end ) as 'price71',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count72',
            SUM(case when sale_time = ? then price else 0 end ) as 'price72',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count73',
            SUM(case when sale_time = ? then price else 0 end ) as 'price73',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count74',
            SUM(case when sale_time = ? then price else 0 end ) as 'price74',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count75',
            SUM(case when sale_time = ? then price else 0 end ) as 'price75',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count76',
            SUM(case when sale_time = ? then price else 0 end ) as 'price76',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count77',
            SUM(case when sale_time = ? then price else 0 end ) as 'price77',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count78',
            SUM(case when sale_time = ? then price else 0 end ) as 'price78',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count79',
            SUM(case when sale_time = ? then price else 0 end ) as 'price79',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count80',
            SUM(case when sale_time = ? then price else 0 end ) as 'price80',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count81',
            SUM(case when sale_time = ? then price else 0 end ) as 'price81',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count82',
            SUM(case when sale_time = ? then price else 0 end ) as 'price82',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count83',
            SUM(case when sale_time = ? then price else 0 end ) as 'price83',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count84',
            SUM(case when sale_time = ? then price else 0 end ) as 'price84',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count85',
            SUM(case when sale_time = ? then price else 0 end ) as 'price85',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count86',
            SUM(case when sale_time = ? then price else 0 end ) as 'price86',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count87',
            SUM(case when sale_time = ? then price else 0 end ) as 'price87',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count88',
            SUM(case when sale_time = ? then price else 0 end ) as 'price88',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count89',
            SUM(case when sale_time = ? then price else 0 end ) as 'price89',
         
        SUM(count) 'count',
        SUM(price) 'price'
        from (
        select Convert(varchar(10),sale_time,120) sale_time,price,good_name,stores_id,count from cds_ms_goods_list goods
        where
         goods.sale_time >= ? and goods.sale_time <= ? + ' 23:59:59'   
        union ALL
        select Convert(varchar(10),sale_time,120) sale_time,price,good_name,stores_id,count from view_cds_ms_goods_list goods
        where
         goods.create_date >= ? and goods.create_date <= ?+ ' 23:59:59'   
        ) goods
         
            where
              stores_id = ?  
         
        group by good_name
        order by count DESC 
[INFO][2017-08-16 17:57:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2017-05-19
参数2:2017-05-19
参数3:2017-05-20
参数4:2017-05-20
参数5:2017-05-21
参数6:2017-05-21
参数7:2017-05-22
参数8:2017-05-22
参数9:2017-05-23
参数10:2017-05-23
参数11:2017-05-24
参数12:2017-05-24
参数13:2017-05-25
参数14:2017-05-25
参数15:2017-05-26
参数16:2017-05-26
参数17:2017-05-27
参数18:2017-05-27
参数19:2017-05-28
参数20:2017-05-28
参数21:2017-05-29
参数22:2017-05-29
参数23:2017-05-30
参数24:2017-05-30
参数25:2017-05-31
参数26:2017-05-31
参数27:2017-06-01
参数28:2017-06-01
参数29:2017-06-02
参数30:2017-06-02
参数31:2017-06-03
参数32:2017-06-03
参数33:2017-06-04
参数34:2017-06-04
参数35:2017-06-05
参数36:2017-06-05
参数37:2017-06-06
参数38:2017-06-06
参数39:2017-06-07
参数40:2017-06-07
参数41:2017-06-08
参数42:2017-06-08
参数43:2017-06-09
参数44:2017-06-09
参数45:2017-06-10
参数46:2017-06-10
参数47:2017-06-11
参数48:2017-06-11
参数49:2017-06-12
参数50:2017-06-12
参数51:2017-06-13
参数52:2017-06-13
参数53:2017-06-14
参数54:2017-06-14
参数55:2017-06-15
参数56:2017-06-15
参数57:2017-06-16
参数58:2017-06-16
参数59:2017-06-17
参数60:2017-06-17
参数61:2017-06-18
参数62:2017-06-18
参数63:2017-06-19
参数64:2017-06-19
参数65:2017-06-20
参数66:2017-06-20
参数67:2017-06-21
参数68:2017-06-21
参数69:2017-06-22
参数70:2017-06-22
参数71:2017-06-23
参数72:2017-06-23
参数73:2017-06-24
参数74:2017-06-24
参数75:2017-06-25
参数76:2017-06-25
参数77:2017-06-26
参数78:2017-06-26
参数79:2017-06-27
参数80:2017-06-27
参数81:2017-06-28
参数82:2017-06-28
参数83:2017-06-29
参数84:2017-06-29
参数85:2017-06-30
参数86:2017-06-30
参数87:2017-07-01
参数88:2017-07-01
参数89:2017-07-02
参数90:2017-07-02
参数91:2017-07-03
参数92:2017-07-03
参数93:2017-07-04
参数94:2017-07-04
参数95:2017-07-05
参数96:2017-07-05
参数97:2017-07-06
参数98:2017-07-06
参数99:2017-07-07
参数100:2017-07-07
参数101:2017-07-08
参数102:2017-07-08
参数103:2017-07-09
参数104:2017-07-09
参数105:2017-07-10
参数106:2017-07-10
参数107:2017-07-11
参数108:2017-07-11
参数109:2017-07-12
参数110:2017-07-12
参数111:2017-07-13
参数112:2017-07-13
参数113:2017-07-14
参数114:2017-07-14
参数115:2017-07-15
参数116:2017-07-15
参数117:2017-07-16
参数118:2017-07-16
参数119:2017-07-17
参数120:2017-07-17
参数121:2017-07-18
参数122:2017-07-18
参数123:2017-07-19
参数124:2017-07-19
参数125:2017-07-20
参数126:2017-07-20
参数127:2017-07-21
参数128:2017-07-21
参数129:2017-07-22
参数130:2017-07-22
参数131:2017-07-23
参数132:2017-07-23
参数133:2017-07-24
参数134:2017-07-24
参数135:2017-07-25
参数136:2017-07-25
参数137:2017-07-26
参数138:2017-07-26
参数139:2017-07-27
参数140:2017-07-27
参数141:2017-07-28
参数142:2017-07-28
参数143:2017-07-29
参数144:2017-07-29
参数145:2017-07-30
参数146:2017-07-30
参数147:2017-07-31
参数148:2017-07-31
参数149:2017-08-01
参数150:2017-08-01
参数151:2017-08-02
参数152:2017-08-02
参数153:2017-08-03
参数154:2017-08-03
参数155:2017-08-04
参数156:2017-08-04
参数157:2017-08-05
参数158:2017-08-05
参数159:2017-08-06
参数160:2017-08-06
参数161:2017-08-07
参数162:2017-08-07
参数163:2017-08-08
参数164:2017-08-08
参数165:2017-08-09
参数166:2017-08-09
参数167:2017-08-10
参数168:2017-08-10
参数169:2017-08-11
参数170:2017-08-11
参数171:2017-08-12
参数172:2017-08-12
参数173:2017-08-13
参数174:2017-08-13
参数175:2017-08-14
参数176:2017-08-14
参数177:2017-08-15
参数178:2017-08-15
参数179:2017-08-16
参数180:2017-08-16
参数181:2017-05-19
参数182:2017-08-16
参数183:2017-05-19
参数184:2017-08-16
参数185:11
 
[INFO][2017-08-16 17:57:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_good.getReportAnalyseDays: 
select good_name,
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count0',
            SUM(case when sale_time = ? then price else 0 end ) as 'price0',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count1',
            SUM(case when sale_time = ? then price else 0 end ) as 'price1',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count2',
            SUM(case when sale_time = ? then price else 0 end ) as 'price2',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count3',
            SUM(case when sale_time = ? then price else 0 end ) as 'price3',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count4',
            SUM(case when sale_time = ? then price else 0 end ) as 'price4',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count5',
            SUM(case when sale_time = ? then price else 0 end ) as 'price5',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count6',
            SUM(case when sale_time = ? then price else 0 end ) as 'price6',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count7',
            SUM(case when sale_time = ? then price else 0 end ) as 'price7',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count8',
            SUM(case when sale_time = ? then price else 0 end ) as 'price8',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count9',
            SUM(case when sale_time = ? then price else 0 end ) as 'price9',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count10',
            SUM(case when sale_time = ? then price else 0 end ) as 'price10',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count11',
            SUM(case when sale_time = ? then price else 0 end ) as 'price11',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count12',
            SUM(case when sale_time = ? then price else 0 end ) as 'price12',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count13',
            SUM(case when sale_time = ? then price else 0 end ) as 'price13',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count14',
            SUM(case when sale_time = ? then price else 0 end ) as 'price14',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count15',
            SUM(case when sale_time = ? then price else 0 end ) as 'price15',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count16',
            SUM(case when sale_time = ? then price else 0 end ) as 'price16',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count17',
            SUM(case when sale_time = ? then price else 0 end ) as 'price17',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count18',
            SUM(case when sale_time = ? then price else 0 end ) as 'price18',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count19',
            SUM(case when sale_time = ? then price else 0 end ) as 'price19',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count20',
            SUM(case when sale_time = ? then price else 0 end ) as 'price20',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count21',
            SUM(case when sale_time = ? then price else 0 end ) as 'price21',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count22',
            SUM(case when sale_time = ? then price else 0 end ) as 'price22',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count23',
            SUM(case when sale_time = ? then price else 0 end ) as 'price23',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count24',
            SUM(case when sale_time = ? then price else 0 end ) as 'price24',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count25',
            SUM(case when sale_time = ? then price else 0 end ) as 'price25',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count26',
            SUM(case when sale_time = ? then price else 0 end ) as 'price26',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count27',
            SUM(case when sale_time = ? then price else 0 end ) as 'price27',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count28',
            SUM(case when sale_time = ? then price else 0 end ) as 'price28',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count29',
            SUM(case when sale_time = ? then price else 0 end ) as 'price29',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count30',
            SUM(case when sale_time = ? then price else 0 end ) as 'price30',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count31',
            SUM(case when sale_time = ? then price else 0 end ) as 'price31',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count32',
            SUM(case when sale_time = ? then price else 0 end ) as 'price32',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count33',
            SUM(case when sale_time = ? then price else 0 end ) as 'price33',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count34',
            SUM(case when sale_time = ? then price else 0 end ) as 'price34',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count35',
            SUM(case when sale_time = ? then price else 0 end ) as 'price35',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count36',
            SUM(case when sale_time = ? then price else 0 end ) as 'price36',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count37',
            SUM(case when sale_time = ? then price else 0 end ) as 'price37',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count38',
            SUM(case when sale_time = ? then price else 0 end ) as 'price38',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count39',
            SUM(case when sale_time = ? then price else 0 end ) as 'price39',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count40',
            SUM(case when sale_time = ? then price else 0 end ) as 'price40',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count41',
            SUM(case when sale_time = ? then price else 0 end ) as 'price41',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count42',
            SUM(case when sale_time = ? then price else 0 end ) as 'price42',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count43',
            SUM(case when sale_time = ? then price else 0 end ) as 'price43',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count44',
            SUM(case when sale_time = ? then price else 0 end ) as 'price44',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count45',
            SUM(case when sale_time = ? then price else 0 end ) as 'price45',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count46',
            SUM(case when sale_time = ? then price else 0 end ) as 'price46',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count47',
            SUM(case when sale_time = ? then price else 0 end ) as 'price47',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count48',
            SUM(case when sale_time = ? then price else 0 end ) as 'price48',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count49',
            SUM(case when sale_time = ? then price else 0 end ) as 'price49',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count50',
            SUM(case when sale_time = ? then price else 0 end ) as 'price50',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count51',
            SUM(case when sale_time = ? then price else 0 end ) as 'price51',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count52',
            SUM(case when sale_time = ? then price else 0 end ) as 'price52',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count53',
            SUM(case when sale_time = ? then price else 0 end ) as 'price53',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count54',
            SUM(case when sale_time = ? then price else 0 end ) as 'price54',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count55',
            SUM(case when sale_time = ? then price else 0 end ) as 'price55',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count56',
            SUM(case when sale_time = ? then price else 0 end ) as 'price56',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count57',
            SUM(case when sale_time = ? then price else 0 end ) as 'price57',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count58',
            SUM(case when sale_time = ? then price else 0 end ) as 'price58',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count59',
            SUM(case when sale_time = ? then price else 0 end ) as 'price59',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count60',
            SUM(case when sale_time = ? then price else 0 end ) as 'price60',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count61',
            SUM(case when sale_time = ? then price else 0 end ) as 'price61',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count62',
            SUM(case when sale_time = ? then price else 0 end ) as 'price62',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count63',
            SUM(case when sale_time = ? then price else 0 end ) as 'price63',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count64',
            SUM(case when sale_time = ? then price else 0 end ) as 'price64',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count65',
            SUM(case when sale_time = ? then price else 0 end ) as 'price65',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count66',
            SUM(case when sale_time = ? then price else 0 end ) as 'price66',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count67',
            SUM(case when sale_time = ? then price else 0 end ) as 'price67',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count68',
            SUM(case when sale_time = ? then price else 0 end ) as 'price68',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count69',
            SUM(case when sale_time = ? then price else 0 end ) as 'price69',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count70',
            SUM(case when sale_time = ? then price else 0 end ) as 'price70',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count71',
            SUM(case when sale_time = ? then price else 0 end ) as 'price71',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count72',
            SUM(case when sale_time = ? then price else 0 end ) as 'price72',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count73',
            SUM(case when sale_time = ? then price else 0 end ) as 'price73',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count74',
            SUM(case when sale_time = ? then price else 0 end ) as 'price74',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count75',
            SUM(case when sale_time = ? then price else 0 end ) as 'price75',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count76',
            SUM(case when sale_time = ? then price else 0 end ) as 'price76',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count77',
            SUM(case when sale_time = ? then price else 0 end ) as 'price77',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count78',
            SUM(case when sale_time = ? then price else 0 end ) as 'price78',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count79',
            SUM(case when sale_time = ? then price else 0 end ) as 'price79',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count80',
            SUM(case when sale_time = ? then price else 0 end ) as 'price80',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count81',
            SUM(case when sale_time = ? then price else 0 end ) as 'price81',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count82',
            SUM(case when sale_time = ? then price else 0 end ) as 'price82',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count83',
            SUM(case when sale_time = ? then price else 0 end ) as 'price83',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count84',
            SUM(case when sale_time = ? then price else 0 end ) as 'price84',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count85',
            SUM(case when sale_time = ? then price else 0 end ) as 'price85',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count86',
            SUM(case when sale_time = ? then price else 0 end ) as 'price86',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count87',
            SUM(case when sale_time = ? then price else 0 end ) as 'price87',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count88',
            SUM(case when sale_time = ? then price else 0 end ) as 'price88',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count89',
            SUM(case when sale_time = ? then price else 0 end ) as 'price89',
         
        SUM(count) 'count',
        SUM(price) 'price'
        from (
        select Convert(varchar(10),sale_time,120) sale_time,price,good_name,stores_id,count from cds_ms_goods_list goods
        where
         goods.sale_time >= ? and goods.sale_time <= ? + ' 23:59:59'   
        union ALL
        select Convert(varchar(10),sale_time,120) sale_time,price,good_name,stores_id,count from view_cds_ms_goods_list goods
        where
         goods.create_date >= ? and goods.create_date <= ?+ ' 23:59:59'   
        ) goods
         
            where
              stores_id = ?  
         
        group by good_name
        order by count DESC 
[INFO][2017-08-16 17:57:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2017-05-19
参数2:2017-05-19
参数3:2017-05-20
参数4:2017-05-20
参数5:2017-05-21
参数6:2017-05-21
参数7:2017-05-22
参数8:2017-05-22
参数9:2017-05-23
参数10:2017-05-23
参数11:2017-05-24
参数12:2017-05-24
参数13:2017-05-25
参数14:2017-05-25
参数15:2017-05-26
参数16:2017-05-26
参数17:2017-05-27
参数18:2017-05-27
参数19:2017-05-28
参数20:2017-05-28
参数21:2017-05-29
参数22:2017-05-29
参数23:2017-05-30
参数24:2017-05-30
参数25:2017-05-31
参数26:2017-05-31
参数27:2017-06-01
参数28:2017-06-01
参数29:2017-06-02
参数30:2017-06-02
参数31:2017-06-03
参数32:2017-06-03
参数33:2017-06-04
参数34:2017-06-04
参数35:2017-06-05
参数36:2017-06-05
参数37:2017-06-06
参数38:2017-06-06
参数39:2017-06-07
参数40:2017-06-07
参数41:2017-06-08
参数42:2017-06-08
参数43:2017-06-09
参数44:2017-06-09
参数45:2017-06-10
参数46:2017-06-10
参数47:2017-06-11
参数48:2017-06-11
参数49:2017-06-12
参数50:2017-06-12
参数51:2017-06-13
参数52:2017-06-13
参数53:2017-06-14
参数54:2017-06-14
参数55:2017-06-15
参数56:2017-06-15
参数57:2017-06-16
参数58:2017-06-16
参数59:2017-06-17
参数60:2017-06-17
参数61:2017-06-18
参数62:2017-06-18
参数63:2017-06-19
参数64:2017-06-19
参数65:2017-06-20
参数66:2017-06-20
参数67:2017-06-21
参数68:2017-06-21
参数69:2017-06-22
参数70:2017-06-22
参数71:2017-06-23
参数72:2017-06-23
参数73:2017-06-24
参数74:2017-06-24
参数75:2017-06-25
参数76:2017-06-25
参数77:2017-06-26
参数78:2017-06-26
参数79:2017-06-27
参数80:2017-06-27
参数81:2017-06-28
参数82:2017-06-28
参数83:2017-06-29
参数84:2017-06-29
参数85:2017-06-30
参数86:2017-06-30
参数87:2017-07-01
参数88:2017-07-01
参数89:2017-07-02
参数90:2017-07-02
参数91:2017-07-03
参数92:2017-07-03
参数93:2017-07-04
参数94:2017-07-04
参数95:2017-07-05
参数96:2017-07-05
参数97:2017-07-06
参数98:2017-07-06
参数99:2017-07-07
参数100:2017-07-07
参数101:2017-07-08
参数102:2017-07-08
参数103:2017-07-09
参数104:2017-07-09
参数105:2017-07-10
参数106:2017-07-10
参数107:2017-07-11
参数108:2017-07-11
参数109:2017-07-12
参数110:2017-07-12
参数111:2017-07-13
参数112:2017-07-13
参数113:2017-07-14
参数114:2017-07-14
参数115:2017-07-15
参数116:2017-07-15
参数117:2017-07-16
参数118:2017-07-16
参数119:2017-07-17
参数120:2017-07-17
参数121:2017-07-18
参数122:2017-07-18
参数123:2017-07-19
参数124:2017-07-19
参数125:2017-07-20
参数126:2017-07-20
参数127:2017-07-21
参数128:2017-07-21
参数129:2017-07-22
参数130:2017-07-22
参数131:2017-07-23
参数132:2017-07-23
参数133:2017-07-24
参数134:2017-07-24
参数135:2017-07-25
参数136:2017-07-25
参数137:2017-07-26
参数138:2017-07-26
参数139:2017-07-27
参数140:2017-07-27
参数141:2017-07-28
参数142:2017-07-28
参数143:2017-07-29
参数144:2017-07-29
参数145:2017-07-30
参数146:2017-07-30
参数147:2017-07-31
参数148:2017-07-31
参数149:2017-08-01
参数150:2017-08-01
参数151:2017-08-02
参数152:2017-08-02
参数153:2017-08-03
参数154:2017-08-03
参数155:2017-08-04
参数156:2017-08-04
参数157:2017-08-05
参数158:2017-08-05
参数159:2017-08-06
参数160:2017-08-06
参数161:2017-08-07
参数162:2017-08-07
参数163:2017-08-08
参数164:2017-08-08
参数165:2017-08-09
参数166:2017-08-09
参数167:2017-08-10
参数168:2017-08-10
参数169:2017-08-11
参数170:2017-08-11
参数171:2017-08-12
参数172:2017-08-12
参数173:2017-08-13
参数174:2017-08-13
参数175:2017-08-14
参数176:2017-08-14
参数177:2017-08-15
参数178:2017-08-15
参数179:2017-08-16
参数180:2017-08-16
参数181:2017-05-19
参数182:2017-08-16
参数183:2017-05-19
参数184:2017-08-16
参数185:11
 
[INFO][2017-08-16 17:57:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_good.getReportAnalyseDays: 
select good_name,
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count0',
            SUM(case when sale_time = ? then price else 0 end ) as 'price0',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count1',
            SUM(case when sale_time = ? then price else 0 end ) as 'price1',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count2',
            SUM(case when sale_time = ? then price else 0 end ) as 'price2',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count3',
            SUM(case when sale_time = ? then price else 0 end ) as 'price3',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count4',
            SUM(case when sale_time = ? then price else 0 end ) as 'price4',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count5',
            SUM(case when sale_time = ? then price else 0 end ) as 'price5',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count6',
            SUM(case when sale_time = ? then price else 0 end ) as 'price6',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count7',
            SUM(case when sale_time = ? then price else 0 end ) as 'price7',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count8',
            SUM(case when sale_time = ? then price else 0 end ) as 'price8',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count9',
            SUM(case when sale_time = ? then price else 0 end ) as 'price9',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count10',
            SUM(case when sale_time = ? then price else 0 end ) as 'price10',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count11',
            SUM(case when sale_time = ? then price else 0 end ) as 'price11',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count12',
            SUM(case when sale_time = ? then price else 0 end ) as 'price12',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count13',
            SUM(case when sale_time = ? then price else 0 end ) as 'price13',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count14',
            SUM(case when sale_time = ? then price else 0 end ) as 'price14',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count15',
            SUM(case when sale_time = ? then price else 0 end ) as 'price15',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count16',
            SUM(case when sale_time = ? then price else 0 end ) as 'price16',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count17',
            SUM(case when sale_time = ? then price else 0 end ) as 'price17',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count18',
            SUM(case when sale_time = ? then price else 0 end ) as 'price18',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count19',
            SUM(case when sale_time = ? then price else 0 end ) as 'price19',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count20',
            SUM(case when sale_time = ? then price else 0 end ) as 'price20',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count21',
            SUM(case when sale_time = ? then price else 0 end ) as 'price21',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count22',
            SUM(case when sale_time = ? then price else 0 end ) as 'price22',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count23',
            SUM(case when sale_time = ? then price else 0 end ) as 'price23',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count24',
            SUM(case when sale_time = ? then price else 0 end ) as 'price24',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count25',
            SUM(case when sale_time = ? then price else 0 end ) as 'price25',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count26',
            SUM(case when sale_time = ? then price else 0 end ) as 'price26',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count27',
            SUM(case when sale_time = ? then price else 0 end ) as 'price27',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count28',
            SUM(case when sale_time = ? then price else 0 end ) as 'price28',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count29',
            SUM(case when sale_time = ? then price else 0 end ) as 'price29',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count30',
            SUM(case when sale_time = ? then price else 0 end ) as 'price30',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count31',
            SUM(case when sale_time = ? then price else 0 end ) as 'price31',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count32',
            SUM(case when sale_time = ? then price else 0 end ) as 'price32',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count33',
            SUM(case when sale_time = ? then price else 0 end ) as 'price33',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count34',
            SUM(case when sale_time = ? then price else 0 end ) as 'price34',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count35',
            SUM(case when sale_time = ? then price else 0 end ) as 'price35',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count36',
            SUM(case when sale_time = ? then price else 0 end ) as 'price36',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count37',
            SUM(case when sale_time = ? then price else 0 end ) as 'price37',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count38',
            SUM(case when sale_time = ? then price else 0 end ) as 'price38',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count39',
            SUM(case when sale_time = ? then price else 0 end ) as 'price39',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count40',
            SUM(case when sale_time = ? then price else 0 end ) as 'price40',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count41',
            SUM(case when sale_time = ? then price else 0 end ) as 'price41',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count42',
            SUM(case when sale_time = ? then price else 0 end ) as 'price42',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count43',
            SUM(case when sale_time = ? then price else 0 end ) as 'price43',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count44',
            SUM(case when sale_time = ? then price else 0 end ) as 'price44',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count45',
            SUM(case when sale_time = ? then price else 0 end ) as 'price45',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count46',
            SUM(case when sale_time = ? then price else 0 end ) as 'price46',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count47',
            SUM(case when sale_time = ? then price else 0 end ) as 'price47',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count48',
            SUM(case when sale_time = ? then price else 0 end ) as 'price48',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count49',
            SUM(case when sale_time = ? then price else 0 end ) as 'price49',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count50',
            SUM(case when sale_time = ? then price else 0 end ) as 'price50',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count51',
            SUM(case when sale_time = ? then price else 0 end ) as 'price51',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count52',
            SUM(case when sale_time = ? then price else 0 end ) as 'price52',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count53',
            SUM(case when sale_time = ? then price else 0 end ) as 'price53',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count54',
            SUM(case when sale_time = ? then price else 0 end ) as 'price54',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count55',
            SUM(case when sale_time = ? then price else 0 end ) as 'price55',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count56',
            SUM(case when sale_time = ? then price else 0 end ) as 'price56',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count57',
            SUM(case when sale_time = ? then price else 0 end ) as 'price57',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count58',
            SUM(case when sale_time = ? then price else 0 end ) as 'price58',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count59',
            SUM(case when sale_time = ? then price else 0 end ) as 'price59',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count60',
            SUM(case when sale_time = ? then price else 0 end ) as 'price60',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count61',
            SUM(case when sale_time = ? then price else 0 end ) as 'price61',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count62',
            SUM(case when sale_time = ? then price else 0 end ) as 'price62',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count63',
            SUM(case when sale_time = ? then price else 0 end ) as 'price63',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count64',
            SUM(case when sale_time = ? then price else 0 end ) as 'price64',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count65',
            SUM(case when sale_time = ? then price else 0 end ) as 'price65',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count66',
            SUM(case when sale_time = ? then price else 0 end ) as 'price66',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count67',
            SUM(case when sale_time = ? then price else 0 end ) as 'price67',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count68',
            SUM(case when sale_time = ? then price else 0 end ) as 'price68',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count69',
            SUM(case when sale_time = ? then price else 0 end ) as 'price69',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count70',
            SUM(case when sale_time = ? then price else 0 end ) as 'price70',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count71',
            SUM(case when sale_time = ? then price else 0 end ) as 'price71',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count72',
            SUM(case when sale_time = ? then price else 0 end ) as 'price72',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count73',
            SUM(case when sale_time = ? then price else 0 end ) as 'price73',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count74',
            SUM(case when sale_time = ? then price else 0 end ) as 'price74',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count75',
            SUM(case when sale_time = ? then price else 0 end ) as 'price75',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count76',
            SUM(case when sale_time = ? then price else 0 end ) as 'price76',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count77',
            SUM(case when sale_time = ? then price else 0 end ) as 'price77',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count78',
            SUM(case when sale_time = ? then price else 0 end ) as 'price78',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count79',
            SUM(case when sale_time = ? then price else 0 end ) as 'price79',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count80',
            SUM(case when sale_time = ? then price else 0 end ) as 'price80',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count81',
            SUM(case when sale_time = ? then price else 0 end ) as 'price81',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count82',
            SUM(case when sale_time = ? then price else 0 end ) as 'price82',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count83',
            SUM(case when sale_time = ? then price else 0 end ) as 'price83',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count84',
            SUM(case when sale_time = ? then price else 0 end ) as 'price84',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count85',
            SUM(case when sale_time = ? then price else 0 end ) as 'price85',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count86',
            SUM(case when sale_time = ? then price else 0 end ) as 'price86',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count87',
            SUM(case when sale_time = ? then price else 0 end ) as 'price87',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count88',
            SUM(case when sale_time = ? then price else 0 end ) as 'price88',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count89',
            SUM(case when sale_time = ? then price else 0 end ) as 'price89',
         
        SUM(count) 'count',
        SUM(price) 'price'
        from (
        select Convert(varchar(10),sale_time,120) sale_time,price,good_name,stores_id,count from cds_ms_goods_list goods
        where
         goods.sale_time >= ? and goods.sale_time <= ? + ' 23:59:59'   
        union ALL
        select Convert(varchar(10),sale_time,120) sale_time,price,good_name,stores_id,count from view_cds_ms_goods_list goods
        where
         goods.create_date >= ? and goods.create_date <= ?+ ' 23:59:59'   
        ) goods
         
            where
              stores_id = ?  
         
        group by good_name
        order by count DESC 
[INFO][2017-08-16 17:57:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2017-05-19
参数2:2017-05-19
参数3:2017-05-20
参数4:2017-05-20
参数5:2017-05-21
参数6:2017-05-21
参数7:2017-05-22
参数8:2017-05-22
参数9:2017-05-23
参数10:2017-05-23
参数11:2017-05-24
参数12:2017-05-24
参数13:2017-05-25
参数14:2017-05-25
参数15:2017-05-26
参数16:2017-05-26
参数17:2017-05-27
参数18:2017-05-27
参数19:2017-05-28
参数20:2017-05-28
参数21:2017-05-29
参数22:2017-05-29
参数23:2017-05-30
参数24:2017-05-30
参数25:2017-05-31
参数26:2017-05-31
参数27:2017-06-01
参数28:2017-06-01
参数29:2017-06-02
参数30:2017-06-02
参数31:2017-06-03
参数32:2017-06-03
参数33:2017-06-04
参数34:2017-06-04
参数35:2017-06-05
参数36:2017-06-05
参数37:2017-06-06
参数38:2017-06-06
参数39:2017-06-07
参数40:2017-06-07
参数41:2017-06-08
参数42:2017-06-08
参数43:2017-06-09
参数44:2017-06-09
参数45:2017-06-10
参数46:2017-06-10
参数47:2017-06-11
参数48:2017-06-11
参数49:2017-06-12
参数50:2017-06-12
参数51:2017-06-13
参数52:2017-06-13
参数53:2017-06-14
参数54:2017-06-14
参数55:2017-06-15
参数56:2017-06-15
参数57:2017-06-16
参数58:2017-06-16
参数59:2017-06-17
参数60:2017-06-17
参数61:2017-06-18
参数62:2017-06-18
参数63:2017-06-19
参数64:2017-06-19
参数65:2017-06-20
参数66:2017-06-20
参数67:2017-06-21
参数68:2017-06-21
参数69:2017-06-22
参数70:2017-06-22
参数71:2017-06-23
参数72:2017-06-23
参数73:2017-06-24
参数74:2017-06-24
参数75:2017-06-25
参数76:2017-06-25
参数77:2017-06-26
参数78:2017-06-26
参数79:2017-06-27
参数80:2017-06-27
参数81:2017-06-28
参数82:2017-06-28
参数83:2017-06-29
参数84:2017-06-29
参数85:2017-06-30
参数86:2017-06-30
参数87:2017-07-01
参数88:2017-07-01
参数89:2017-07-02
参数90:2017-07-02
参数91:2017-07-03
参数92:2017-07-03
参数93:2017-07-04
参数94:2017-07-04
参数95:2017-07-05
参数96:2017-07-05
参数97:2017-07-06
参数98:2017-07-06
参数99:2017-07-07
参数100:2017-07-07
参数101:2017-07-08
参数102:2017-07-08
参数103:2017-07-09
参数104:2017-07-09
参数105:2017-07-10
参数106:2017-07-10
参数107:2017-07-11
参数108:2017-07-11
参数109:2017-07-12
参数110:2017-07-12
参数111:2017-07-13
参数112:2017-07-13
参数113:2017-07-14
参数114:2017-07-14
参数115:2017-07-15
参数116:2017-07-15
参数117:2017-07-16
参数118:2017-07-16
参数119:2017-07-17
参数120:2017-07-17
参数121:2017-07-18
参数122:2017-07-18
参数123:2017-07-19
参数124:2017-07-19
参数125:2017-07-20
参数126:2017-07-20
参数127:2017-07-21
参数128:2017-07-21
参数129:2017-07-22
参数130:2017-07-22
参数131:2017-07-23
参数132:2017-07-23
参数133:2017-07-24
参数134:2017-07-24
参数135:2017-07-25
参数136:2017-07-25
参数137:2017-07-26
参数138:2017-07-26
参数139:2017-07-27
参数140:2017-07-27
参数141:2017-07-28
参数142:2017-07-28
参数143:2017-07-29
参数144:2017-07-29
参数145:2017-07-30
参数146:2017-07-30
参数147:2017-07-31
参数148:2017-07-31
参数149:2017-08-01
参数150:2017-08-01
参数151:2017-08-02
参数152:2017-08-02
参数153:2017-08-03
参数154:2017-08-03
参数155:2017-08-04
参数156:2017-08-04
参数157:2017-08-05
参数158:2017-08-05
参数159:2017-08-06
参数160:2017-08-06
参数161:2017-08-07
参数162:2017-08-07
参数163:2017-08-08
参数164:2017-08-08
参数165:2017-08-09
参数166:2017-08-09
参数167:2017-08-10
参数168:2017-08-10
参数169:2017-08-11
参数170:2017-08-11
参数171:2017-08-12
参数172:2017-08-12
参数173:2017-08-13
参数174:2017-08-13
参数175:2017-08-14
参数176:2017-08-14
参数177:2017-08-15
参数178:2017-08-15
参数179:2017-08-16
参数180:2017-08-16
参数181:2017-05-19
参数182:2017-08-16
参数183:2017-05-19
参数184:2017-08-16
参数185:11
 
[INFO][2017-08-16 17:57:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_good.getReportAnalyseDays: 
select good_name,
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count0',
            SUM(case when sale_time = ? then price else 0 end ) as 'price0',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count1',
            SUM(case when sale_time = ? then price else 0 end ) as 'price1',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count2',
            SUM(case when sale_time = ? then price else 0 end ) as 'price2',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count3',
            SUM(case when sale_time = ? then price else 0 end ) as 'price3',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count4',
            SUM(case when sale_time = ? then price else 0 end ) as 'price4',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count5',
            SUM(case when sale_time = ? then price else 0 end ) as 'price5',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count6',
            SUM(case when sale_time = ? then price else 0 end ) as 'price6',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count7',
            SUM(case when sale_time = ? then price else 0 end ) as 'price7',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count8',
            SUM(case when sale_time = ? then price else 0 end ) as 'price8',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count9',
            SUM(case when sale_time = ? then price else 0 end ) as 'price9',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count10',
            SUM(case when sale_time = ? then price else 0 end ) as 'price10',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count11',
            SUM(case when sale_time = ? then price else 0 end ) as 'price11',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count12',
            SUM(case when sale_time = ? then price else 0 end ) as 'price12',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count13',
            SUM(case when sale_time = ? then price else 0 end ) as 'price13',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count14',
            SUM(case when sale_time = ? then price else 0 end ) as 'price14',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count15',
            SUM(case when sale_time = ? then price else 0 end ) as 'price15',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count16',
            SUM(case when sale_time = ? then price else 0 end ) as 'price16',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count17',
            SUM(case when sale_time = ? then price else 0 end ) as 'price17',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count18',
            SUM(case when sale_time = ? then price else 0 end ) as 'price18',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count19',
            SUM(case when sale_time = ? then price else 0 end ) as 'price19',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count20',
            SUM(case when sale_time = ? then price else 0 end ) as 'price20',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count21',
            SUM(case when sale_time = ? then price else 0 end ) as 'price21',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count22',
            SUM(case when sale_time = ? then price else 0 end ) as 'price22',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count23',
            SUM(case when sale_time = ? then price else 0 end ) as 'price23',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count24',
            SUM(case when sale_time = ? then price else 0 end ) as 'price24',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count25',
            SUM(case when sale_time = ? then price else 0 end ) as 'price25',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count26',
            SUM(case when sale_time = ? then price else 0 end ) as 'price26',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count27',
            SUM(case when sale_time = ? then price else 0 end ) as 'price27',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count28',
            SUM(case when sale_time = ? then price else 0 end ) as 'price28',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count29',
            SUM(case when sale_time = ? then price else 0 end ) as 'price29',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count30',
            SUM(case when sale_time = ? then price else 0 end ) as 'price30',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count31',
            SUM(case when sale_time = ? then price else 0 end ) as 'price31',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count32',
            SUM(case when sale_time = ? then price else 0 end ) as 'price32',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count33',
            SUM(case when sale_time = ? then price else 0 end ) as 'price33',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count34',
            SUM(case when sale_time = ? then price else 0 end ) as 'price34',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count35',
            SUM(case when sale_time = ? then price else 0 end ) as 'price35',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count36',
            SUM(case when sale_time = ? then price else 0 end ) as 'price36',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count37',
            SUM(case when sale_time = ? then price else 0 end ) as 'price37',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count38',
            SUM(case when sale_time = ? then price else 0 end ) as 'price38',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count39',
            SUM(case when sale_time = ? then price else 0 end ) as 'price39',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count40',
            SUM(case when sale_time = ? then price else 0 end ) as 'price40',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count41',
            SUM(case when sale_time = ? then price else 0 end ) as 'price41',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count42',
            SUM(case when sale_time = ? then price else 0 end ) as 'price42',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count43',
            SUM(case when sale_time = ? then price else 0 end ) as 'price43',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count44',
            SUM(case when sale_time = ? then price else 0 end ) as 'price44',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count45',
            SUM(case when sale_time = ? then price else 0 end ) as 'price45',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count46',
            SUM(case when sale_time = ? then price else 0 end ) as 'price46',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count47',
            SUM(case when sale_time = ? then price else 0 end ) as 'price47',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count48',
            SUM(case when sale_time = ? then price else 0 end ) as 'price48',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count49',
            SUM(case when sale_time = ? then price else 0 end ) as 'price49',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count50',
            SUM(case when sale_time = ? then price else 0 end ) as 'price50',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count51',
            SUM(case when sale_time = ? then price else 0 end ) as 'price51',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count52',
            SUM(case when sale_time = ? then price else 0 end ) as 'price52',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count53',
            SUM(case when sale_time = ? then price else 0 end ) as 'price53',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count54',
            SUM(case when sale_time = ? then price else 0 end ) as 'price54',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count55',
            SUM(case when sale_time = ? then price else 0 end ) as 'price55',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count56',
            SUM(case when sale_time = ? then price else 0 end ) as 'price56',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count57',
            SUM(case when sale_time = ? then price else 0 end ) as 'price57',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count58',
            SUM(case when sale_time = ? then price else 0 end ) as 'price58',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count59',
            SUM(case when sale_time = ? then price else 0 end ) as 'price59',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count60',
            SUM(case when sale_time = ? then price else 0 end ) as 'price60',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count61',
            SUM(case when sale_time = ? then price else 0 end ) as 'price61',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count62',
            SUM(case when sale_time = ? then price else 0 end ) as 'price62',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count63',
            SUM(case when sale_time = ? then price else 0 end ) as 'price63',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count64',
            SUM(case when sale_time = ? then price else 0 end ) as 'price64',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count65',
            SUM(case when sale_time = ? then price else 0 end ) as 'price65',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count66',
            SUM(case when sale_time = ? then price else 0 end ) as 'price66',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count67',
            SUM(case when sale_time = ? then price else 0 end ) as 'price67',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count68',
            SUM(case when sale_time = ? then price else 0 end ) as 'price68',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count69',
            SUM(case when sale_time = ? then price else 0 end ) as 'price69',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count70',
            SUM(case when sale_time = ? then price else 0 end ) as 'price70',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count71',
            SUM(case when sale_time = ? then price else 0 end ) as 'price71',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count72',
            SUM(case when sale_time = ? then price else 0 end ) as 'price72',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count73',
            SUM(case when sale_time = ? then price else 0 end ) as 'price73',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count74',
            SUM(case when sale_time = ? then price else 0 end ) as 'price74',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count75',
            SUM(case when sale_time = ? then price else 0 end ) as 'price75',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count76',
            SUM(case when sale_time = ? then price else 0 end ) as 'price76',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count77',
            SUM(case when sale_time = ? then price else 0 end ) as 'price77',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count78',
            SUM(case when sale_time = ? then price else 0 end ) as 'price78',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count79',
            SUM(case when sale_time = ? then price else 0 end ) as 'price79',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count80',
            SUM(case when sale_time = ? then price else 0 end ) as 'price80',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count81',
            SUM(case when sale_time = ? then price else 0 end ) as 'price81',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count82',
            SUM(case when sale_time = ? then price else 0 end ) as 'price82',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count83',
            SUM(case when sale_time = ? then price else 0 end ) as 'price83',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count84',
            SUM(case when sale_time = ? then price else 0 end ) as 'price84',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count85',
            SUM(case when sale_time = ? then price else 0 end ) as 'price85',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count86',
            SUM(case when sale_time = ? then price else 0 end ) as 'price86',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count87',
            SUM(case when sale_time = ? then price else 0 end ) as 'price87',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count88',
            SUM(case when sale_time = ? then price else 0 end ) as 'price88',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count89',
            SUM(case when sale_time = ? then price else 0 end ) as 'price89',
         
        SUM(count) 'count',
        SUM(price) 'price'
        from (
        select Convert(varchar(10),sale_time,120) sale_time,price,good_name,stores_id,count from cds_ms_goods_list goods
        where
         goods.sale_time >= ? and goods.sale_time <= ? + ' 23:59:59'   
        union ALL
        select Convert(varchar(10),sale_time,120) sale_time,price,good_name,stores_id,count from view_cds_ms_goods_list goods
        where
         goods.create_date >= ? and goods.create_date <= ?+ ' 23:59:59'   
        ) goods
         
            where
              stores_id = ?  
         
        group by good_name
        order by count DESC 
[INFO][2017-08-16 17:57:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2017-05-19
参数2:2017-05-19
参数3:2017-05-20
参数4:2017-05-20
参数5:2017-05-21
参数6:2017-05-21
参数7:2017-05-22
参数8:2017-05-22
参数9:2017-05-23
参数10:2017-05-23
参数11:2017-05-24
参数12:2017-05-24
参数13:2017-05-25
参数14:2017-05-25
参数15:2017-05-26
参数16:2017-05-26
参数17:2017-05-27
参数18:2017-05-27
参数19:2017-05-28
参数20:2017-05-28
参数21:2017-05-29
参数22:2017-05-29
参数23:2017-05-30
参数24:2017-05-30
参数25:2017-05-31
参数26:2017-05-31
参数27:2017-06-01
参数28:2017-06-01
参数29:2017-06-02
参数30:2017-06-02
参数31:2017-06-03
参数32:2017-06-03
参数33:2017-06-04
参数34:2017-06-04
参数35:2017-06-05
参数36:2017-06-05
参数37:2017-06-06
参数38:2017-06-06
参数39:2017-06-07
参数40:2017-06-07
参数41:2017-06-08
参数42:2017-06-08
参数43:2017-06-09
参数44:2017-06-09
参数45:2017-06-10
参数46:2017-06-10
参数47:2017-06-11
参数48:2017-06-11
参数49:2017-06-12
参数50:2017-06-12
参数51:2017-06-13
参数52:2017-06-13
参数53:2017-06-14
参数54:2017-06-14
参数55:2017-06-15
参数56:2017-06-15
参数57:2017-06-16
参数58:2017-06-16
参数59:2017-06-17
参数60:2017-06-17
参数61:2017-06-18
参数62:2017-06-18
参数63:2017-06-19
参数64:2017-06-19
参数65:2017-06-20
参数66:2017-06-20
参数67:2017-06-21
参数68:2017-06-21
参数69:2017-06-22
参数70:2017-06-22
参数71:2017-06-23
参数72:2017-06-23
参数73:2017-06-24
参数74:2017-06-24
参数75:2017-06-25
参数76:2017-06-25
参数77:2017-06-26
参数78:2017-06-26
参数79:2017-06-27
参数80:2017-06-27
参数81:2017-06-28
参数82:2017-06-28
参数83:2017-06-29
参数84:2017-06-29
参数85:2017-06-30
参数86:2017-06-30
参数87:2017-07-01
参数88:2017-07-01
参数89:2017-07-02
参数90:2017-07-02
参数91:2017-07-03
参数92:2017-07-03
参数93:2017-07-04
参数94:2017-07-04
参数95:2017-07-05
参数96:2017-07-05
参数97:2017-07-06
参数98:2017-07-06
参数99:2017-07-07
参数100:2017-07-07
参数101:2017-07-08
参数102:2017-07-08
参数103:2017-07-09
参数104:2017-07-09
参数105:2017-07-10
参数106:2017-07-10
参数107:2017-07-11
参数108:2017-07-11
参数109:2017-07-12
参数110:2017-07-12
参数111:2017-07-13
参数112:2017-07-13
参数113:2017-07-14
参数114:2017-07-14
参数115:2017-07-15
参数116:2017-07-15
参数117:2017-07-16
参数118:2017-07-16
参数119:2017-07-17
参数120:2017-07-17
参数121:2017-07-18
参数122:2017-07-18
参数123:2017-07-19
参数124:2017-07-19
参数125:2017-07-20
参数126:2017-07-20
参数127:2017-07-21
参数128:2017-07-21
参数129:2017-07-22
参数130:2017-07-22
参数131:2017-07-23
参数132:2017-07-23
参数133:2017-07-24
参数134:2017-07-24
参数135:2017-07-25
参数136:2017-07-25
参数137:2017-07-26
参数138:2017-07-26
参数139:2017-07-27
参数140:2017-07-27
参数141:2017-07-28
参数142:2017-07-28
参数143:2017-07-29
参数144:2017-07-29
参数145:2017-07-30
参数146:2017-07-30
参数147:2017-07-31
参数148:2017-07-31
参数149:2017-08-01
参数150:2017-08-01
参数151:2017-08-02
参数152:2017-08-02
参数153:2017-08-03
参数154:2017-08-03
参数155:2017-08-04
参数156:2017-08-04
参数157:2017-08-05
参数158:2017-08-05
参数159:2017-08-06
参数160:2017-08-06
参数161:2017-08-07
参数162:2017-08-07
参数163:2017-08-08
参数164:2017-08-08
参数165:2017-08-09
参数166:2017-08-09
参数167:2017-08-10
参数168:2017-08-10
参数169:2017-08-11
参数170:2017-08-11
参数171:2017-08-12
参数172:2017-08-12
参数173:2017-08-13
参数174:2017-08-13
参数175:2017-08-14
参数176:2017-08-14
参数177:2017-08-15
参数178:2017-08-15
参数179:2017-08-16
参数180:2017-08-16
参数181:2017-05-19
参数182:2017-08-16
参数183:2017-05-19
参数184:2017-08-16
参数185:11
 
[INFO][2017-08-16 17:57:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-16 17:57:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-16 17:57:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-16 17:57:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-16 17:57:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-16 17:57:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1032
 
[INFO][2017-08-16 17:57:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.orderOnTimeStores: 
select stores_id storesId,name storesName from cds_stores
         
         WHERE stores_id = ? 
        order by stores_id 
[INFO][2017-08-16 17:57:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:11
 
[INFO][2017-08-16 17:57:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_report.report2: 
select * from (
                select (case when SUM(temp.iscount)>0 then
                (SUM(temp.iscount)+0.0)/SUM(1)
                else 0 end) as storescount,
                  
                    (case when SUM(case when stores_id=11 then temp.iscount else 0 end)>0 then
                    (SUM(case when stores_id=11 then temp.iscount else 0 end)+0.0)/SUM(case when stores_id=11 then 1 else 0 end )
                    else 0 end) as cur_storescount0,
                 
                isnull(order_date,'合计') as order_date
                from (
                    select
                    s.stores_id,
                    s.name stores_name,
                    DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
                    CONVERT(varchar(100),o.create_date,23) as order_date,
                    (case when o.pack_user_time is null or DATEDIFF(minute,o.create_date,o.pack_user_time)>20 then 0 else 1 end ) as iscount
                    from cds_order_info o
                    left join cds_stores s on o.stores_id = s.stores_id
                    where o.create_date >= ?+' 00:00:00'
                             AND o.create_date <= ?+' 23:59:59'  
                    and o.service_time is null

                    union all

                   select
                    s.stores_id,
                    s.name stores_name,
                    DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
                    CONVERT(varchar(100),o.create_date,23) as order_date,
                    (case when o.pack_user_time is null or DATEDIFF(minute,o.create_date,o.pack_user_time)>20 then 0 else 1 end ) as iscount
                    from view_cds_order_info o
                    left join cds_stores s on o.stores_id = s.stores_id
                    where o.create_date >= ?+' 00:00:00'
                            AND o.create_date <= ?+' 23:59:59' 
                    and o.service_time is null
                ) temp
                group by temp.order_date
                with cube) t order by t.order_date 
[INFO][2017-08-16 17:57:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2017-08-10
参数2:2017-08-16
参数3:2017-08-10
参数4:2017-08-16
 
[INFO][2017-08-16 17:57:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-16 17:57:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1029
 
[INFO][2017-08-16 17:57:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-16 17:57:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-16 17:57:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-16 17:57:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[WARN][2017-08-16 17:57:58] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-2 Resolved exception caused by Handler execution: org.apache.catalina.connector.ClientAbortException: java.io.IOException: 您的主机中的软件中止了一个已建立的连接。 
[WARN][2017-08-16 17:58:05] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-9 Resolved exception caused by Handler execution: org.apache.catalina.connector.ClientAbortException: java.io.IOException: 您的主机中的软件中止了一个已建立的连接。 
[WARN][2017-08-16 17:58:06] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-6 Resolved exception caused by Handler execution: org.apache.catalina.connector.ClientAbortException: java.io.IOException: 您的主机中的软件中止了一个已建立的连接。 
[WARN][2017-08-16 17:58:06] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-4 Resolved exception caused by Handler execution: org.apache.catalina.connector.ClientAbortException: java.io.IOException: 您的主机中的软件中止了一个已建立的连接。 
[WARN][2017-08-16 17:58:06] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-5 Resolved exception caused by Handler execution: org.apache.catalina.connector.ClientAbortException: java.io.IOException: 您的主机中的软件中止了一个已建立的连接。 
[INFO][2017-08-16 17:59:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_good.getEditReportAnalyse: 
select good_name,
          
            cast(cast(sum(good_count_0) as FLOAT)/? as numeric(8,2))  good_count_0,
          
            cast(cast(sum(good_count_1) as FLOAT)/? as numeric(8,2))  good_count_1,
          
            cast(cast(sum(good_count_2) as FLOAT)/? as numeric(8,2))  good_count_2,
          
            cast(cast(sum(good_count_3) as FLOAT)/? as numeric(8,2))  good_count_3,
          
            cast(cast(sum(good_count_4) as FLOAT)/? as numeric(8,2))  good_count_4,
          
            cast(cast(sum(good_count_5) as FLOAT)/? as numeric(8,2))  good_count_5,
          
            cast(cast(sum(good_count_6) as FLOAT)/? as numeric(8,2))  good_count_6,
          
            cast(cast(sum(good_count_7) as FLOAT)/? as numeric(8,2))  good_count_7,
         
        cast(cast(sum(sum_count) as FLOAT)/? as numeric(8,2)) sum_count
            from (
                select isnull(temp.good_name,'合计') as good_name,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_0,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_1,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_2,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_3,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_4,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_5,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_6,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_7,
                 
                    sum(case when t_minute>=? AND t_minute  <  ? then count else 0 end) as sum_count
                from (
                    select cgl.sale_time,
                           convert(int,datename(Hour , cgl.sale_time))*60 + convert(int,datename(minute, cgl.sale_time)) as t_minute,
                           cgl.class_good_name as good_name,
                           cgl.count
                    from cds_ms_goods_list cgl
                    where cgl.sale_time >=?
                    and cgl.sale_time  <= ?  + ' 23:59:59'
                    and cgl.stores_id = ?
                    and class_good_name is not null
                ) temp group by good_name with rollup

				union all
				 select isnull(temp.good_name,'合计') as good_name,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_0,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_1,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_2,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_3,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_4,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_5,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_6,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_7,
                 
                    sum(case when t_minute>=? AND t_minute  <  ? then count else 0 end) as sum_count
                from (
                    select cgl.sale_time,
                           convert(int,datename(Hour, cgl.sale_time))*60 + convert(int,datename(minute, cgl.sale_time)) as t_minute,
                           cgl.class_good_name as good_name,
                           cgl.count
                    from view_cds_ms_goods_list cgl
                    where cgl.create_date >=?
                    and cgl.create_date  <= ?  + ' 23:59:59'
                    and cgl.stores_id = ?
                    and class_good_name is not null
                ) temp group by good_name with rollup
             ) t
			 group by good_name
			 order by sum_count desc 
[INFO][2017-08-16 17:59:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:1
参数3:1
参数4:1
参数5:1
参数6:1
参数7:1
参数8:1
参数9:1
参数10:1080
参数11:1110
参数12:1110
参数13:1140
参数14:1140
参数15:1170
参数16:1170
参数17:1200
参数18:1200
参数19:1230
参数20:1230
参数21:1260
参数22:1260
参数23:1290
参数24:1290
参数25:1320
参数26:1080
参数27:1320
参数28:2017-08-15
参数29:2017-08-15
参数30:11
参数31:1080
参数32:1110
参数33:1110
参数34:1140
参数35:1140
参数36:1170
参数37:1170
参数38:1200
参数39:1200
参数40:1230
参数41:1230
参数42:1260
参数43:1260
参数44:1290
参数45:1290
参数46:1320
参数47:1080
参数48:1320
参数49:2017-08-15
参数50:2017-08-15
参数51:11
 
[INFO][2017-08-16 17:59:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_good.getReportGood: 
select temp.class_good_name,
            SUM(good_count) as good_count,
            sum(good_price) as good_price
            from (
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from cds_ms_goods_list
             
                WHERE  sale_time >= ?
                AND sale_time <= ? + ' 23:59:59' 
             
                AND stores_id = ?
             
                and class_good_name is not null
                group by class_good_name
                union all
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from view_cds_ms_goods_list
             
                WHERE  create_date >= ?
                AND create_date <= ? + ' 23:59:59' 
             
                AND stores_id = ?
             
            and class_good_name is not null
                group by class_good_name
            ) temp
            group by temp.class_good_name
         
              order by good_count desc 
[INFO][2017-08-16 17:59:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2017-08-16
参数2:2017-08-16
参数3:11
参数4:2017-08-16
参数5:2017-08-16
参数6:11
 
[INFO][2017-08-16 17:59:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_good.getReportGood: 
select temp.class_good_name,
            SUM(good_count) as good_count,
            sum(good_price) as good_price
            from (
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from cds_ms_goods_list
             
                WHERE  sale_time >= ?
                AND sale_time <= ? + ' 23:59:59' 
             
                AND stores_id = ?
             
                and class_good_name is not null
                group by class_good_name
                union all
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from view_cds_ms_goods_list
             
                WHERE  create_date >= ?
                AND create_date <= ? + ' 23:59:59' 
             
                AND stores_id = ?
             
            and class_good_name is not null
                group by class_good_name
            ) temp
            group by temp.class_good_name
         
              order by good_count desc 
[INFO][2017-08-16 17:59:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2017-08-16
参数2:2017-08-16
参数3:11
参数4:2017-08-16
参数5:2017-08-16
参数6:11
 
[INFO][2017-08-16 17:59:47] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Wed Aug 16 17:24:09 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-16 17:59:47] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-16 17:59:48] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-08-16 17:59:48] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Wed Aug 16 17:24:06 CST 2017]; root of context hierarchy 
[INFO][2017-08-16 17:59:48] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-17 09:01:08] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-08-17 09:01:08] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Thu Aug 17 09:01:08 CST 2017]; root of context hierarchy 
[INFO][2017-08-17 09:01:08] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-08-17 09:01:09] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-08-17 09:01:09] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-08-17 09:01:09] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-08-17 09:01:11] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-17 09:01:11] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 3203 ms 
[INFO][2017-08-17 09:01:11] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-08-17 09:01:12] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Aug 17 09:01:12 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-17 09:01:12] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-08-17 09:01:15] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/emp/downFile]}" onto public void com.framework.controller.ExpController.downFile() throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/emp/getCreateProgress]}" onto public void com.framework.controller.ExpController.getCreateProgress() throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/emp/expCurrentPage]}" onto private void com.framework.controller.ExpController.responseExcelPage(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model,java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/order_day],methods=[GET]}" onto public java.lang.String com.controller.ClientController.order_day() 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_day],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_day() 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/order_ontime],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderOnTime() 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/refund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.refund() 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/historyRefund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.historyRefund() 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/exception_orderlist/{action}],methods=[GET]}" onto public java.lang.String com.controller.ClientController.exception_orderlist(java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/commentList],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.commentList() throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getClassName(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoodList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoodList(java.util.HashMap) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree() throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree2],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree2() throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/classIndex2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.classIndex2() throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClassList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClassList(java.util.HashMap) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getBrandCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getBrandCombobox() throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresClass],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresClass(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTreeLazy],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getClassTreeLazy(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGood(java.util.HashMap) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/edit],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.edit(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStandardGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStandardGood(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/editErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.editErp(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleErp(java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/editStandard],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.editStandard(java.util.HashMap) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteStandard],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteStandard(java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.updateGood(java.util.HashMap) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassCombobox(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGood(java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index2() throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresCombobox() throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/reminderHf],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderHf(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/reminderLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderLogin(java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/validateLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLogin() 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/geReminderList],methods=[POST]}" onto public void com.controller.ReminderController.geReminderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/cdCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.cdCount() 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/MtText],methods=[POST]}" onto public void com.controller.ReminderController.MtText() 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/indexCd],methods=[GET]}" onto public java.lang.String com.controller.ReminderController.indexCd() throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/validateLoginText],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLoginText() 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/setStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.setStatus(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.toggle(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.deleteGood(java.lang.String) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addTask(com.framework.mapping.system.CdsChufanTask) 
[INFO][2017-08-17 09:01:16] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.getChuFanTask(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addMeal(com.framework.mapping.system.CdsChufanMeal,java.lang.String) 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getErpGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addErpGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addErpGood(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/refund],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.refund(java.util.HashMap) 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/historybacklist],methods=[POST]}" onto public void com.api.BackMoneyController.historybacklist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/bmCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.bmCount(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/backlist],methods=[POST]}" onto public void com.api.BackMoneyController.backlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/CommentApi/comment/list],methods=[POST]}" onto public void com.api.CommentController.commentList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/CommentApi/comment/replyEleme],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.CommentController.replyEleme(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/CommentApi/comment/shops],methods=[GET]}" onto public java.lang.Object com.api.CommentController.getBrandShops(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/CommentApi/comment/order],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.CommentController.showOrderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getPicAddress],methods=[GET]}" onto public java.lang.String com.api.GiftController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/GetGoodsInfoLists],methods=[POST]}" onto public void com.api.GiftController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReportDays],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyseDays(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReportDaysExcel],methods=[POST]}" onto public void com.api.GoodController.getReportAnalyseDaysExcel(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/shopSelect],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.shopSelect(com.framework.mapping.system.CdsUsers) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/exceptionOrderList],methods=[POST]}" onto public void com.api.HomeController.exceptionOrderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderOntimeCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.orderTimeCount(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/order_count],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.orderDayCount(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderOntimeSelect],methods=[POST]}" onto public void com.api.OrderController.orderOntimeSelect(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfos],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfos(java.lang.String) 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getMtCookie],methods=[POST]}" onto public void com.api.PackController.getMtCookie(java.lang.String) 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:01:17] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:01:19] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Aug 17 09:01:12 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-17 09:01:19] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-08-17 09:01:20] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-17 09:01:20] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-49568-1502931680542-1:1,clientId=null,started=false} 
[INFO][2017-08-17 09:01:20] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-08-17 09:01:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-08-17 09:01:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-08-17 09:01:21] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 9661 ms 
[INFO][2017-08-17 09:13:49] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Aug 17 09:01:12 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-17 09:13:49] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-17 09:13:49] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-08-17 09:13:49] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Thu Aug 17 09:01:08 CST 2017]; root of context hierarchy 
[INFO][2017-08-17 09:13:49] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-17 09:14:03] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-08-17 09:14:03] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Thu Aug 17 09:14:03 CST 2017]; root of context hierarchy 
[INFO][2017-08-17 09:14:03] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-08-17 09:14:03] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-08-17 09:14:03] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-08-17 09:14:03] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(5)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-08-17 09:14:05] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-17 09:14:05] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(5)-127.0.0.1 Root WebApplicationContext: initialization completed in 2822 ms 
[INFO][2017-08-17 09:14:05] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-08-17 09:14:05] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(5)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Aug 17 09:14:05 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-17 09:14:05] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(5)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-08-17 09:14:08] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(5)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/emp/getCreateProgress]}" onto public void com.framework.controller.ExpController.getCreateProgress() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/emp/expCurrentPage]}" onto private void com.framework.controller.ExpController.responseExcelPage(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/emp/downFile]}" onto public void com.framework.controller.ExpController.downFile() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model,java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/exception_orderlist/{action}],methods=[GET]}" onto public java.lang.String com.controller.ClientController.exception_orderlist(java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/order_day],methods=[GET]}" onto public java.lang.String com.controller.ClientController.order_day() 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/good_day],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_day() 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/order_ontime],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderOnTime() 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/refund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.refund() 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/historyRefund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.historyRefund() 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ClientSet/commentList],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.commentList() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getClassName(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/index2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index2() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresCombobox() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoodList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoodList(java.util.HashMap) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree2],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree2() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/classIndex2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.classIndex2() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClassList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClassList(java.util.HashMap) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getBrandCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getBrandCombobox() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresClass],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresClass(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTreeLazy],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getClassTreeLazy(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGood(java.util.HashMap) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/edit],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.edit(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStandardGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStandardGood(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/editErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.editErp(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleErp(java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/editStandard],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.editStandard(java.util.HashMap) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteStandard],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteStandard(java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/updateGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.updateGood(java.util.HashMap) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassCombobox(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGood(java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/validateLoginText],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLoginText() 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/reminderLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderLogin(java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/reminderHf],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderHf(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/validateLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLogin() 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/cdCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.cdCount() 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/indexCd],methods=[GET]}" onto public java.lang.String com.controller.ReminderController.indexCd() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/geReminderList],methods=[POST]}" onto public void com.controller.ReminderController.geReminderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Reminder/MtText],methods=[POST]}" onto public void com.controller.ReminderController.MtText() 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/setStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.setStatus(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.toggle(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.deleteGood(java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/addErpGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addErpGood(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/addMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addMeal(com.framework.mapping.system.CdsChufanMeal,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/addTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addTask(com.framework.mapping.system.CdsChufanTask) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.getChuFanTask(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/StoresPrinter/getErpGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/BackMoneyApi/refund],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.refund(java.util.HashMap) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/BackMoneyApi/historybacklist],methods=[POST]}" onto public void com.api.BackMoneyController.historybacklist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/BackMoneyApi/bmCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.bmCount(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/BackMoneyApi/backlist],methods=[POST]}" onto public void com.api.BackMoneyController.backlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/CommentApi/comment/list],methods=[POST]}" onto public void com.api.CommentController.commentList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/CommentApi/comment/replyEleme],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.CommentController.replyEleme(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/CommentApi/comment/shops],methods=[GET]}" onto public java.lang.Object com.api.CommentController.getBrandShops(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/CommentApi/comment/order],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.CommentController.showOrderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/GetGoodsInfoLists],methods=[POST]}" onto public void com.api.GiftController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getPicAddress],methods=[GET]}" onto public java.lang.String com.api.GiftController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/goodReportDays],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyseDays(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/goodReportDaysExcel],methods=[POST]}" onto public void com.api.GoodController.getReportAnalyseDaysExcel(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/exceptionOrderList],methods=[POST]}" onto public void com.api.HomeController.exceptionOrderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/homeApi/shopSelect],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.shopSelect(com.framework.mapping.system.CdsUsers) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderOntimeSelect],methods=[POST]}" onto public void com.api.OrderController.orderOntimeSelect(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/orderOntimeCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.orderTimeCount(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/order_count],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.orderDayCount(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getOrderInfos],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfos(java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/packApi/getMtCookie],methods=[POST]}" onto public void com.api.PackController.getMtCookie(java.lang.String) 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:14:10] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(5)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:14:11] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(5)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Aug 17 09:14:05 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-17 09:14:11] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(5)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-08-17 09:14:12] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(5)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-17 09:14:12] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(5)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-50162-1502932452067-1:1,clientId=null,started=false} 
[INFO][2017-08-17 09:14:12] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-08-17 09:14:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(5)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-08-17 09:14:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(5)-127.0.0.1 参数1:site_options
 
[INFO][2017-08-17 09:14:12] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(5)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 6981 ms 
[INFO][2017-08-17 09:14:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-17 09:14:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:chenbin
 
[INFO][2017-08-17 09:14:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 09:14:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:351
参数2:1032
 
[INFO][2017-08-17 09:14:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 09:14:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:352
参数2:1032
 
[INFO][2017-08-17 09:14:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 09:14:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:375
参数2:1032
 
[INFO][2017-08-17 09:14:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 09:14:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:380
参数2:1032
 
[INFO][2017-08-17 09:14:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 09:14:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:353
参数2:1032
 
[INFO][2017-08-17 09:14:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 09:14:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:376
参数2:1032
 
[INFO][2017-08-17 09:14:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 09:14:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:372
参数2:1032
 
[INFO][2017-08-17 09:14:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 09:14:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:354
参数2:1032
 
[INFO][2017-08-17 09:14:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 09:14:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:355
参数2:1032
 
[INFO][2017-08-17 09:14:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 09:14:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:356
参数2:1032
 
[INFO][2017-08-17 09:14:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-17 09:14:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:0
 
[INFO][2017-08-17 09:14:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 09:14:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 09:14:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-17 09:14:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:0
参数2:2017-08-17
参数3:2017-08-17
参数4:0
参数5:2017-08-17
参数6:2017-08-17
参数7:0
参数8:2017-08-17
参数9:2017-08-17
参数10:0
参数11:2017-08-17
参数12:2017-08-17
参数13:0
参数14:2017-08-17
参数15:2017-08-17
参数16:0
参数17:2017-08-17
参数18:2017-08-17
参数19:0
参数20:2017-08-17
参数21:2017-08-17
参数22:0
参数23:2017-08-17
参数24:2017-08-17
参数25:0
参数26:2017-08-17
参数27:2017-08-17
 
[INFO][2017-08-17 09:14:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-17 09:14:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2017-08-17
参数2:2017-08-17
 
[INFO][2017-08-17 09:14:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 09:14:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 09:14:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-17 09:14:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2017-08-17
参数2:2017-08-17
参数3:0
参数4:2017-08-17
参数5:2017-08-17
参数6:0
参数7:2017-08-16
参数8:2017-08-16
参数9:0
参数10:2017-08-16
参数11:2017-08-16
参数12:0
参数13:2017-08-10
参数14:2017-08-10
参数15:0
 
[INFO][2017-08-17 09:16:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 09:16:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[WARN][2017-08-17 09:17:04] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-3 Resolved exception caused by Handler execution: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 37 
[INFO][2017-08-17 09:17:09] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Aug 17 09:14:05 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-17 09:17:09] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-17 09:17:10] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-08-17 09:17:10] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Thu Aug 17 09:14:03 CST 2017]; root of context hierarchy 
[INFO][2017-08-17 09:17:10] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-17 09:17:26] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(4)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-08-17 09:17:26] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(4)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Thu Aug 17 09:17:26 CST 2017]; root of context hierarchy 
[INFO][2017-08-17 09:17:26] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(4)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-08-17 09:17:27] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(4)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-08-17 09:17:27] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(4)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-08-17 09:17:27] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(4)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-08-17 09:17:29] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(4)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-17 09:17:29] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(4)-127.0.0.1 Root WebApplicationContext: initialization completed in 3240 ms 
[INFO][2017-08-17 09:17:29] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(4)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-08-17 09:17:29] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(4)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Aug 17 09:17:29 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-17 09:17:29] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(4)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-08-17 09:17:32] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(4)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/emp/getCreateProgress]}" onto public void com.framework.controller.ExpController.getCreateProgress() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/emp/expCurrentPage]}" onto private void com.framework.controller.ExpController.responseExcelPage(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/emp/downFile]}" onto public void com.framework.controller.ExpController.downFile() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model,java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/exception_orderlist/{action}],methods=[GET]}" onto public java.lang.String com.controller.ClientController.exception_orderlist(java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/order_day],methods=[GET]}" onto public java.lang.String com.controller.ClientController.order_day() 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/good_day],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_day() 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/order_ontime],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderOnTime() 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/refund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.refund() 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/historyRefund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.historyRefund() 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ClientSet/commentList],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.commentList() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getClassName(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresCombobox() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/index2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index2() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoodList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoodList(java.util.HashMap) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree2],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree2() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/classIndex2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.classIndex2() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClassList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClassList(java.util.HashMap) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getBrandCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getBrandCombobox() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresClass],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresClass(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTreeLazy],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getClassTreeLazy(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGood(java.util.HashMap) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/edit],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.edit(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStandardGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStandardGood(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/editErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.editErp(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/deleErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleErp(java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/editStandard],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.editStandard(java.util.HashMap) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteStandard],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteStandard(java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/updateGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.updateGood(java.util.HashMap) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassCombobox(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGood(java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Reminder/validateLoginText],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLoginText() 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Reminder/reminderLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderLogin(java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Reminder/MtText],methods=[POST]}" onto public void com.controller.ReminderController.MtText() 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Reminder/validateLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLogin() 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Reminder/geReminderList],methods=[POST]}" onto public void com.controller.ReminderController.geReminderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Reminder/cdCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.cdCount() 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Reminder/reminderHf],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderHf(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Reminder/indexCd],methods=[GET]}" onto public java.lang.String com.controller.ReminderController.indexCd() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/setStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.setStatus(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.deleteGood(java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/addTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addTask(com.framework.mapping.system.CdsChufanTask) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.getChuFanTask(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/addMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addMeal(com.framework.mapping.system.CdsChufanMeal,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/getErpGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/addErpGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addErpGood(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/StoresPrinter/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.toggle(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/BackMoneyApi/historybacklist],methods=[POST]}" onto public void com.api.BackMoneyController.historybacklist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/BackMoneyApi/bmCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.bmCount(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/BackMoneyApi/backlist],methods=[POST]}" onto public void com.api.BackMoneyController.backlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/BackMoneyApi/refund],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.refund(java.util.HashMap) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/CommentApi/comment/replyEleme],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.CommentController.replyEleme(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/CommentApi/comment/shops],methods=[GET]}" onto public java.lang.Object com.api.CommentController.getBrandShops(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/CommentApi/comment/order],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.CommentController.showOrderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/CommentApi/comment/list],methods=[POST]}" onto public void com.api.CommentController.commentList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/GetGoodsInfoLists],methods=[POST]}" onto public void com.api.GiftController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/getPicAddress],methods=[GET]}" onto public java.lang.String com.api.GiftController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodAPI/goodReportDays],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyseDays(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodAPI/goodReportDaysExcel],methods=[POST]}" onto public void com.api.GoodController.getReportAnalyseDaysExcel(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/homeApi/exceptionOrderList],methods=[POST]}" onto public void com.api.HomeController.exceptionOrderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/homeApi/shopSelect],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.shopSelect(com.framework.mapping.system.CdsUsers) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/orderOntimeSelect],methods=[POST]}" onto public void com.api.OrderController.orderOntimeSelect(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/orderOntimeCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.orderTimeCount(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/order_count],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.orderDayCount(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/packApi/getOrderInfos],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfos(java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/packApi/getMtCookie],methods=[POST]}" onto public void com.api.PackController.getMtCookie(java.lang.String) 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:17:35] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:17:36] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(4)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:17:36] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(4)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Aug 17 09:17:29 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-17 09:17:37] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(4)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-08-17 09:17:37] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(4)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-17 09:17:37] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(4)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-50416-1502932657520-1:1,clientId=null,started=false} 
[INFO][2017-08-17 09:17:37] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-08-17 09:17:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(4)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-08-17 09:17:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(4)-127.0.0.1 参数1:site_options
 
[INFO][2017-08-17 09:17:38] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(4)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 8548 ms 
[INFO][2017-08-17 09:18:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-17 09:18:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:chenbin
 
[INFO][2017-08-17 09:18:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 09:18:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:351
参数2:1032
 
[INFO][2017-08-17 09:18:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 09:18:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:352
参数2:1032
 
[INFO][2017-08-17 09:18:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 09:18:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:375
参数2:1032
 
[INFO][2017-08-17 09:18:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 09:18:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:380
参数2:1032
 
[INFO][2017-08-17 09:18:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 09:18:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:353
参数2:1032
 
[INFO][2017-08-17 09:18:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 09:18:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:376
参数2:1032
 
[INFO][2017-08-17 09:18:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 09:18:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:372
参数2:1032
 
[INFO][2017-08-17 09:18:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 09:18:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:354
参数2:1032
 
[INFO][2017-08-17 09:18:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 09:18:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:355
参数2:1032
 
[INFO][2017-08-17 09:18:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 09:18:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:356
参数2:1032
 
[INFO][2017-08-17 09:18:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-17 09:18:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:0
 
[INFO][2017-08-17 09:18:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 09:18:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 09:18:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-17 09:18:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:0
参数2:2017-08-17
参数3:2017-08-17
参数4:0
参数5:2017-08-17
参数6:2017-08-17
参数7:0
参数8:2017-08-17
参数9:2017-08-17
参数10:0
参数11:2017-08-17
参数12:2017-08-17
参数13:0
参数14:2017-08-17
参数15:2017-08-17
参数16:0
参数17:2017-08-17
参数18:2017-08-17
参数19:0
参数20:2017-08-17
参数21:2017-08-17
参数22:0
参数23:2017-08-17
参数24:2017-08-17
参数25:0
参数26:2017-08-17
参数27:2017-08-17
 
[INFO][2017-08-17 09:18:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 09:18:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 09:18:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-17 09:18:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2017-08-17
参数2:2017-08-17
 
[INFO][2017-08-17 09:18:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-17 09:18:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2017-08-17
参数2:2017-08-17
参数3:0
参数4:2017-08-17
参数5:2017-08-17
参数6:0
参数7:2017-08-16
参数8:2017-08-16
参数9:0
参数10:2017-08-16
参数11:2017-08-16
参数12:0
参数13:2017-08-10
参数14:2017-08-10
参数15:0
 
[INFO][2017-08-17 09:18:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 09:18:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[WARN][2017-08-17 09:18:18] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-10 Resolved exception caused by Handler execution: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 37 
[INFO][2017-08-17 09:20:01] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Aug 17 09:17:29 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-17 09:20:01] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-17 09:20:02] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-08-17 09:20:02] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Thu Aug 17 09:17:26 CST 2017]; root of context hierarchy 
[INFO][2017-08-17 09:20:02] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-17 09:20:14] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-08-17 09:20:14] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Thu Aug 17 09:20:14 CST 2017]; root of context hierarchy 
[INFO][2017-08-17 09:20:14] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-08-17 09:20:14] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-08-17 09:20:14] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-08-17 09:20:14] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-08-17 09:20:17] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-17 09:20:17] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 2920 ms 
[INFO][2017-08-17 09:20:17] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-08-17 09:20:17] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Aug 17 09:20:17 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-17 09:20:17] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-08-17 09:20:19] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/emp/downFile]}" onto public void com.framework.controller.ExpController.downFile() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/emp/getCreateProgress]}" onto public void com.framework.controller.ExpController.getCreateProgress() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/emp/expCurrentPage]}" onto private void com.framework.controller.ExpController.responseExcelPage(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model,java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/exception_orderlist/{action}],methods=[GET]}" onto public java.lang.String com.controller.ClientController.exception_orderlist(java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/order_day],methods=[GET]}" onto public java.lang.String com.controller.ClientController.order_day() 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_day],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_day() 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/order_ontime],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderOnTime() 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/refund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.refund() 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/historyRefund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.historyRefund() 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/commentList],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.commentList() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getClassName(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index2() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresCombobox() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoodList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoodList(java.util.HashMap) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree2],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree2() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/classIndex2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.classIndex2() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClassList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClassList(java.util.HashMap) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getBrandCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getBrandCombobox() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresClass],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresClass(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTreeLazy],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getClassTreeLazy(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGood(java.util.HashMap) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/edit],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.edit(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStandardGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStandardGood(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/editErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.editErp(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleErp(java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/editStandard],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.editStandard(java.util.HashMap) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteStandard],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteStandard(java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.updateGood(java.util.HashMap) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassCombobox(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGood(java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/validateLoginText],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLoginText() 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/cdCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.cdCount() 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/reminderLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderLogin(java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/indexCd],methods=[GET]}" onto public java.lang.String com.controller.ReminderController.indexCd() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/MtText],methods=[POST]}" onto public void com.controller.ReminderController.MtText() 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/validateLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLogin() 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/geReminderList],methods=[POST]}" onto public void com.controller.ReminderController.geReminderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/reminderHf],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderHf(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/setStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.setStatus(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.toggle(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.deleteGood(java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addTask(com.framework.mapping.system.CdsChufanTask) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.getChuFanTask(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addMeal(com.framework.mapping.system.CdsChufanMeal,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getErpGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addErpGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addErpGood(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/refund],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.refund(java.util.HashMap) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/historybacklist],methods=[POST]}" onto public void com.api.BackMoneyController.historybacklist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/bmCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.bmCount(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/backlist],methods=[POST]}" onto public void com.api.BackMoneyController.backlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/CommentApi/comment/list],methods=[POST]}" onto public void com.api.CommentController.commentList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/CommentApi/comment/replyEleme],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.CommentController.replyEleme(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/CommentApi/comment/shops],methods=[GET]}" onto public java.lang.Object com.api.CommentController.getBrandShops(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/CommentApi/comment/order],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.CommentController.showOrderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/GetGoodsInfoLists],methods=[POST]}" onto public void com.api.GiftController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getPicAddress],methods=[GET]}" onto public java.lang.String com.api.GiftController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReportDays],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyseDays(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReportDaysExcel],methods=[POST]}" onto public void com.api.GoodController.getReportAnalyseDaysExcel(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/exceptionOrderList],methods=[POST]}" onto public void com.api.HomeController.exceptionOrderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/shopSelect],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.shopSelect(com.framework.mapping.system.CdsUsers) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderOntimeSelect],methods=[POST]}" onto public void com.api.OrderController.orderOntimeSelect(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderOntimeCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.orderTimeCount(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/order_count],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.orderDayCount(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfos],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfos(java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getMtCookie],methods=[POST]}" onto public void com.api.PackController.getMtCookie(java.lang.String) 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 09:20:20] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 09:20:21] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Aug 17 09:20:17 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-17 09:20:21] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-08-17 09:20:21] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-17 09:20:21] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-50515-1502932821809-1:1,clientId=null,started=false} 
[INFO][2017-08-17 09:20:21] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-08-17 09:20:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-08-17 09:20:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-08-17 09:20:22] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 5245 ms 
[INFO][2017-08-17 09:20:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-17 09:20:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:chenbin
 
[INFO][2017-08-17 09:20:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 09:20:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:351
参数2:1032
 
[INFO][2017-08-17 09:20:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 09:20:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:352
参数2:1032
 
[INFO][2017-08-17 09:20:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 09:20:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:375
参数2:1032
 
[INFO][2017-08-17 09:20:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 09:20:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:380
参数2:1032
 
[INFO][2017-08-17 09:20:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 09:20:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:353
参数2:1032
 
[INFO][2017-08-17 09:20:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 09:20:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:376
参数2:1032
 
[INFO][2017-08-17 09:20:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 09:20:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:372
参数2:1032
 
[INFO][2017-08-17 09:20:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 09:20:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:354
参数2:1032
 
[INFO][2017-08-17 09:20:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 09:20:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:355
参数2:1032
 
[INFO][2017-08-17 09:20:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 09:20:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:356
参数2:1032
 
[INFO][2017-08-17 09:20:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-17 09:20:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:0
 
[INFO][2017-08-17 09:20:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 09:20:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 09:20:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-17 09:20:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2017-08-17
参数2:2017-08-17
 
[INFO][2017-08-17 09:20:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 09:20:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 09:20:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-17 09:20:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:0
参数2:2017-08-17
参数3:2017-08-17
参数4:0
参数5:2017-08-17
参数6:2017-08-17
参数7:0
参数8:2017-08-17
参数9:2017-08-17
参数10:0
参数11:2017-08-17
参数12:2017-08-17
参数13:0
参数14:2017-08-17
参数15:2017-08-17
参数16:0
参数17:2017-08-17
参数18:2017-08-17
参数19:0
参数20:2017-08-17
参数21:2017-08-17
参数22:0
参数23:2017-08-17
参数24:2017-08-17
参数25:0
参数26:2017-08-17
参数27:2017-08-17
 
[INFO][2017-08-17 09:20:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-17 09:20:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2017-08-17
参数2:2017-08-17
参数3:0
参数4:2017-08-17
参数5:2017-08-17
参数6:0
参数7:2017-08-16
参数8:2017-08-16
参数9:0
参数10:2017-08-16
参数11:2017-08-16
参数12:0
参数13:2017-08-10
参数14:2017-08-10
参数15:0
 
[INFO][2017-08-17 09:20:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 09:20:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 09:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 09:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 09:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 09:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 09:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 09:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 09:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 09:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 09:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 09:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 09:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 09:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 09:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 09:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 09:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 09:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-17 09:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 09:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 09:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 09:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-17 09:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 09:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 09:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 09:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-17 09:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 09:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-17 09:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 09:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-17 09:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,b.stores_id from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
        order by a.listorder 
[INFO][2017-08-17 09:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:9
 
[INFO][2017-08-17 09:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 09:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-17 09:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 09:20:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-17 09:20:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 09:20:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-17 09:20:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,b.stores_id from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
        order by a.listorder 
[INFO][2017-08-17 09:20:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:9
 
[INFO][2017-08-17 09:20:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,b.stores_id from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
        order by a.listorder 
[INFO][2017-08-17 09:20:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:10
 
[INFO][2017-08-17 09:20:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,b.stores_id from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
        order by a.listorder 
[INFO][2017-08-17 09:20:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:10
 
[INFO][2017-08-17 09:20:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,b.stores_id from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
        order by a.listorder 
[INFO][2017-08-17 09:20:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:11
 
[INFO][2017-08-17 09:20:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,b.stores_id from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
        order by a.listorder 
[INFO][2017-08-17 09:20:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:11
 
[INFO][2017-08-17 09:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,b.stores_id from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
        order by a.listorder 
[INFO][2017-08-17 09:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:12
 
[INFO][2017-08-17 09:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,b.stores_id from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
        order by a.listorder 
[INFO][2017-08-17 09:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:12
 
[INFO][2017-08-17 09:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,b.stores_id from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
        order by a.listorder 
[INFO][2017-08-17 09:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:13
 
[INFO][2017-08-17 09:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,b.stores_id from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
        order by a.listorder 
[INFO][2017-08-17 09:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:13
 
[INFO][2017-08-17 09:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,b.stores_id from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
        order by a.listorder 
[INFO][2017-08-17 09:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:14
 
[INFO][2017-08-17 09:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,b.stores_id from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
        order by a.listorder 
[INFO][2017-08-17 09:20:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:14
 
[INFO][2017-08-17 09:20:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,b.stores_id from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
        order by a.listorder 
[INFO][2017-08-17 09:20:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:15
 
[INFO][2017-08-17 09:20:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,b.stores_id from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
        order by a.listorder 
[INFO][2017-08-17 09:20:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:15
 
[INFO][2017-08-17 09:20:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,b.stores_id from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
        order by a.listorder 
[INFO][2017-08-17 09:20:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:16
 
[INFO][2017-08-17 09:20:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,b.stores_id from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
        order by a.listorder 
[INFO][2017-08-17 09:20:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:16
 
[INFO][2017-08-17 09:20:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,b.stores_id from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
        order by a.listorder 
[INFO][2017-08-17 09:20:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:17
 
[INFO][2017-08-17 09:20:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,b.stores_id from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
        order by a.listorder 
[INFO][2017-08-17 09:20:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:17
 
[INFO][2017-08-17 09:20:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,b.stores_id from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
        order by a.listorder 
[INFO][2017-08-17 09:20:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:18
 
[INFO][2017-08-17 09:20:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,b.stores_id from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
        order by a.listorder 
[INFO][2017-08-17 09:20:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:18
 
[INFO][2017-08-17 09:20:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,b.stores_id from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
        order by a.listorder 
[INFO][2017-08-17 09:20:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:19
 
[INFO][2017-08-17 09:20:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,b.stores_id from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
        order by a.listorder 
[INFO][2017-08-17 09:20:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:19
 
[INFO][2017-08-17 09:20:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,b.stores_id from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
        order by a.listorder 
[INFO][2017-08-17 09:20:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:20
 
[INFO][2017-08-17 09:20:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,b.stores_id from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
        order by a.listorder 
[INFO][2017-08-17 09:20:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:20
 
[INFO][2017-08-17 09:20:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,b.stores_id from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
        order by a.listorder 
[INFO][2017-08-17 09:20:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:21
 
[INFO][2017-08-17 09:20:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,b.stores_id from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
        order by a.listorder 
[INFO][2017-08-17 09:20:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:21
 
[INFO][2017-08-17 09:20:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 09:20:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[WARN][2017-08-17 09:25:32] org.apache.activemq.transport.failover.FailoverTransport.handleTransportFailure(FailoverTransport.java:251) ActiveMQ Transport: tcp:///127.0.0.1:61616@50516 Transport (tcp://127.0.0.1:61616) failed, reason:  java.io.EOFException, attempting to automatically reconnect 
[INFO][2017-08-17 09:25:32] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1042) ActiveMQ Task-3 Successfully reconnected to tcp://127.0.0.1:61616 
[INFO][2017-08-17 09:25:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 09:25:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 09:25:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 09:25:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1032
 
[INFO][2017-08-17 09:25:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 09:25:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 09:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 09:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 09:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 09:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 09:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 09:31:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1032
 
[INFO][2017-08-17 09:35:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 09:35:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 09:35:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 09:35:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 09:35:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 09:35:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1032
 
[INFO][2017-08-17 09:40:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 09:40:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1032
 
[INFO][2017-08-17 09:40:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 09:40:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 09:40:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 09:40:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 09:45:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 09:45:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 09:45:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 09:45:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1032
 
[INFO][2017-08-17 09:45:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 09:45:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 09:50:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 09:50:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1032
 
[INFO][2017-08-17 09:50:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 09:50:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 09:50:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 09:50:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 09:55:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 09:55:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 09:55:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 09:55:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 09:55:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 09:55:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1032
 
[INFO][2017-08-17 10:00:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 10:00:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 10:00:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 10:00:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 10:00:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 10:00:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1032
 
[INFO][2017-08-17 10:05:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 10:05:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-17 10:05:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 10:05:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 10:05:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 10:05:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 10:10:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 10:10:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 10:10:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 10:10:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-17 10:10:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 10:10:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 10:15:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 10:15:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 10:15:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 10:15:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-17 10:15:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 10:15:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 10:20:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 10:20:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 10:20:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 10:20:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 10:20:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 10:20:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1032
 
[INFO][2017-08-17 10:25:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 10:25:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1032
 
[INFO][2017-08-17 10:25:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 10:25:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 10:25:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 10:25:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 10:27:21] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Aug 17 09:20:17 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-17 10:27:21] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-17 10:27:22] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-08-17 10:27:22] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Thu Aug 17 09:20:14 CST 2017]; root of context hierarchy 
[INFO][2017-08-17 10:27:22] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-17 10:27:38] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(7)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-08-17 10:27:38] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(7)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Thu Aug 17 10:27:38 CST 2017]; root of context hierarchy 
[INFO][2017-08-17 10:27:38] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(7)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-08-17 10:27:38] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(7)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-08-17 10:27:38] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(7)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-08-17 10:27:38] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(7)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-08-17 10:27:41] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(7)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-17 10:27:41] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(7)-127.0.0.1 Root WebApplicationContext: initialization completed in 3556 ms 
[INFO][2017-08-17 10:27:41] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(7)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-08-17 10:27:41] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(7)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Aug 17 10:27:41 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-17 10:27:41] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(7)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-08-17 10:27:44] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(7)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-08-17 10:27:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/emp/downFile]}" onto public void com.framework.controller.ExpController.downFile() throws java.lang.Exception 
[INFO][2017-08-17 10:27:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/emp/getCreateProgress]}" onto public void com.framework.controller.ExpController.getCreateProgress() throws java.lang.Exception 
[INFO][2017-08-17 10:27:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/emp/expCurrentPage]}" onto private void com.framework.controller.ExpController.responseExcelPage(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:27:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-08-17 10:27:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-08-17 10:27:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-08-17 10:27:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-17 10:27:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-08-17 10:27:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-08-17 10:27:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-08-17 10:27:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-08-17 10:27:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-08-17 10:27:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-08-17 10:27:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-08-17 10:27:45] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model,java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/order_day],methods=[GET]}" onto public java.lang.String com.controller.ClientController.order_day() 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/good_day],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_day() 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/order_ontime],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderOnTime() 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/refund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.refund() 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/historyRefund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.historyRefund() 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/exception_orderlist/{action}],methods=[GET]}" onto public java.lang.String com.controller.ClientController.exception_orderlist(java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/commentList],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.commentList() throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getClassName(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/index2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index2() throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoodList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoodList(java.util.HashMap) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree() throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree2],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree2() throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/classIndex2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.classIndex2() throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClassList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClassList(java.util.HashMap) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getBrandCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getBrandCombobox() throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresClass],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresClass(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTreeLazy],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getClassTreeLazy(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGood(java.util.HashMap) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/edit],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.edit(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStandardGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStandardGood(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/editErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.editErp(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleErp(java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/editStandard],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.editStandard(java.util.HashMap) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteStandard],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteStandard(java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/updateGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.updateGood(java.util.HashMap) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassCombobox(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGood(java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresCombobox() throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/cdCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.cdCount() 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/reminderLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderLogin(java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/validateLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLogin() 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/MtText],methods=[POST]}" onto public void com.controller.ReminderController.MtText() 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/indexCd],methods=[GET]}" onto public java.lang.String com.controller.ReminderController.indexCd() throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/reminderHf],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderHf(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/geReminderList],methods=[POST]}" onto public void com.controller.ReminderController.geReminderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/validateLoginText],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLoginText() 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/setStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.setStatus(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.toggle(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.deleteGood(java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/addTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addTask(com.framework.mapping.system.CdsChufanTask) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.getChuFanTask(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/addMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addMeal(com.framework.mapping.system.CdsChufanMeal,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/getErpGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/addErpGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addErpGood(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/BackMoneyApi/refund],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.refund(java.util.HashMap) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/BackMoneyApi/historybacklist],methods=[POST]}" onto public void com.api.BackMoneyController.historybacklist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/BackMoneyApi/bmCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.bmCount(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/BackMoneyApi/backlist],methods=[POST]}" onto public void com.api.BackMoneyController.backlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/CommentApi/comment/list],methods=[POST]}" onto public void com.api.CommentController.commentList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/CommentApi/comment/replyEleme],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.CommentController.replyEleme(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/CommentApi/comment/shops],methods=[GET]}" onto public java.lang.Object com.api.CommentController.getBrandShops(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/CommentApi/comment/order],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.CommentController.showOrderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/getPicAddress],methods=[GET]}" onto public java.lang.String com.api.GiftController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/GetGoodsInfoLists],methods=[POST]}" onto public void com.api.GiftController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodAPI/goodReportDays],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyseDays(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodAPI/goodReportDaysExcel],methods=[POST]}" onto public void com.api.GoodController.getReportAnalyseDaysExcel(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/homeApi/shopSelect],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.shopSelect(com.framework.mapping.system.CdsUsers) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/homeApi/exceptionOrderList],methods=[POST]}" onto public void com.api.HomeController.exceptionOrderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/orderOntimeCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.orderTimeCount(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/order_count],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.orderDayCount(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/orderOntimeSelect],methods=[POST]}" onto public void com.api.OrderController.orderOntimeSelect(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/getOrderInfos],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfos(java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/getMtCookie],methods=[POST]}" onto public void com.api.PackController.getMtCookie(java.lang.String) 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:27:46] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:27:47] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(7)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Aug 17 10:27:41 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-17 10:27:47] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(7)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-08-17 10:27:48] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(7)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-17 10:27:48] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(7)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-51448-1502936868178-1:1,clientId=null,started=false} 
[INFO][2017-08-17 10:27:48] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-08-17 10:27:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(7)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-08-17 10:27:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(7)-127.0.0.1 参数1:site_options
 
[INFO][2017-08-17 10:27:49] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(7)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 7831 ms 
[INFO][2017-08-17 10:28:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-17 10:28:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:chenbin
 
[INFO][2017-08-17 10:28:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:28:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:351
参数2:1032
 
[INFO][2017-08-17 10:28:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:28:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:352
参数2:1032
 
[INFO][2017-08-17 10:28:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:28:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:375
参数2:1032
 
[INFO][2017-08-17 10:28:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:28:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:380
参数2:1032
 
[INFO][2017-08-17 10:28:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:28:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:353
参数2:1032
 
[INFO][2017-08-17 10:28:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:28:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:376
参数2:1032
 
[INFO][2017-08-17 10:28:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:28:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:372
参数2:1032
 
[INFO][2017-08-17 10:28:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:28:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:354
参数2:1032
 
[INFO][2017-08-17 10:28:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:28:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:355
参数2:1032
 
[INFO][2017-08-17 10:28:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:28:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:356
参数2:1032
 
[INFO][2017-08-17 10:28:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-17 10:28:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:0
 
[INFO][2017-08-17 10:28:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 10:28:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 10:28:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-17 10:28:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:0
参数2:2017-08-17
参数3:2017-08-17
参数4:0
参数5:2017-08-17
参数6:2017-08-17
参数7:0
参数8:2017-08-17
参数9:2017-08-17
参数10:0
参数11:2017-08-17
参数12:2017-08-17
参数13:0
参数14:2017-08-17
参数15:2017-08-17
参数16:0
参数17:2017-08-17
参数18:2017-08-17
参数19:0
参数20:2017-08-17
参数21:2017-08-17
参数22:0
参数23:2017-08-17
参数24:2017-08-17
参数25:0
参数26:2017-08-17
参数27:2017-08-17
 
[INFO][2017-08-17 10:28:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-17 10:28:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2017-08-17
参数2:2017-08-17
 
[INFO][2017-08-17 10:28:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 10:28:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 10:28:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-17 10:28:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2017-08-17
参数2:2017-08-17
参数3:0
参数4:2017-08-17
参数5:2017-08-17
参数6:0
参数7:2017-08-16
参数8:2017-08-16
参数9:0
参数10:2017-08-16
参数11:2017-08-16
参数12:0
参数13:2017-08-10
参数14:2017-08-10
参数15:0
 
[INFO][2017-08-17 10:28:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 10:28:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 10:28:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 10:28:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 10:28:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:28:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:28:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 10:28:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 10:28:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:28:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 10:28:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 10:28:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 10:28:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 10:28:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 10:28:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:28:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 10:28:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 10:28:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 10:28:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:28:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-17 10:28:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:28:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-17 10:28:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:28:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-17 10:28:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:28:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 10:28:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:28:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-17 10:28:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:28:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-17 10:28:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:28:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-17 10:28:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:28:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-17 10:28:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:28:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 10:28:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:28:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-17 10:28:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 10:28:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
 
[INFO][2017-08-17 10:28:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 10:28:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
 
[INFO][2017-08-17 10:29:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 10:29:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 10:29:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 10:29:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 10:29:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:29:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 10:29:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:29:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:29:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 10:29:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:29:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 10:29:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 10:29:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 10:29:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 10:29:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 10:29:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 10:29:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 10:29:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 10:29:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:29:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-17 10:29:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:29:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-17 10:29:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:29:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-17 10:29:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:29:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 10:29:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:29:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-17 10:29:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:29:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-17 10:29:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:29:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-17 10:29:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:29:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-17 10:29:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:29:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 10:29:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:29:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-17 10:31:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 10:31:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 10:31:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 10:31:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 10:31:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:31:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 10:31:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:31:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:31:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 10:31:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 10:31:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:31:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 10:31:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 10:31:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 10:31:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 10:31:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 10:31:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:31:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-17 10:31:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:31:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-17 10:31:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 10:31:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 10:31:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:31:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 10:31:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:31:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-17 10:31:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:31:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-17 10:31:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:31:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-17 10:31:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:31:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-17 10:31:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:31:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-17 10:31:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:31:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 10:31:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:31:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-17 10:33:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 10:33:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 10:33:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 10:33:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 10:33:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 10:33:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-17 10:36:42] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Aug 17 10:27:41 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-17 10:36:42] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-17 10:36:43] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-08-17 10:36:44] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Thu Aug 17 10:27:38 CST 2017]; root of context hierarchy 
[INFO][2017-08-17 10:36:44] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-17 10:36:56] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-08-17 10:36:56] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Thu Aug 17 10:36:56 CST 2017]; root of context hierarchy 
[INFO][2017-08-17 10:36:56] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-08-17 10:36:56] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-08-17 10:36:56] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-08-17 10:36:56] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-08-17 10:36:58] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-17 10:36:58] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 2701 ms 
[INFO][2017-08-17 10:36:58] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-08-17 10:36:58] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Aug 17 10:36:58 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-17 10:36:58] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-08-17 10:37:00] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/emp/downFile]}" onto public void com.framework.controller.ExpController.downFile() throws java.lang.Exception 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/emp/getCreateProgress]}" onto public void com.framework.controller.ExpController.getCreateProgress() throws java.lang.Exception 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/emp/expCurrentPage]}" onto private void com.framework.controller.ExpController.responseExcelPage(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model,java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/exception_orderlist/{action}],methods=[GET]}" onto public java.lang.String com.controller.ClientController.exception_orderlist(java.lang.String) 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/order_day],methods=[GET]}" onto public java.lang.String com.controller.ClientController.order_day() 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_day],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_day() 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/order_ontime],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderOnTime() 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/refund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.refund() 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/historyRefund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.historyRefund() 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/commentList],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.commentList() throws java.lang.Exception 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:01] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getClassName(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index2() throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresCombobox() throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoodList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoodList(java.util.HashMap) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree() throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree2],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree2() throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/classIndex2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.classIndex2() throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClassList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClassList(java.util.HashMap) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getBrandCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getBrandCombobox() throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresClass],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresClass(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTreeLazy],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getClassTreeLazy(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGood(java.util.HashMap) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/edit],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.edit(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStandardGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStandardGood(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/editErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.editErp(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleErp(java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/editStandard],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.editStandard(java.util.HashMap) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteStandard],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteStandard(java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.updateGood(java.util.HashMap) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassCombobox(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGood(java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/validateLoginText],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLoginText() 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/MtText],methods=[POST]}" onto public void com.controller.ReminderController.MtText() 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/validateLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLogin() 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/reminderHf],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderHf(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/geReminderList],methods=[POST]}" onto public void com.controller.ReminderController.geReminderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/reminderLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderLogin(java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/cdCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.cdCount() 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/indexCd],methods=[GET]}" onto public java.lang.String com.controller.ReminderController.indexCd() throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/setStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.setStatus(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.toggle(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.deleteGood(java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addTask(com.framework.mapping.system.CdsChufanTask) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.getChuFanTask(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addMeal(com.framework.mapping.system.CdsChufanMeal,java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getErpGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addErpGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addErpGood(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/refund],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.refund(java.util.HashMap) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/historybacklist],methods=[POST]}" onto public void com.api.BackMoneyController.historybacklist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/bmCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.bmCount(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/backlist],methods=[POST]}" onto public void com.api.BackMoneyController.backlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/CommentApi/comment/list],methods=[POST]}" onto public void com.api.CommentController.commentList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/CommentApi/comment/replyEleme],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.CommentController.replyEleme(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/CommentApi/comment/shops],methods=[GET]}" onto public java.lang.Object com.api.CommentController.getBrandShops(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/CommentApi/comment/order],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.CommentController.showOrderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/GetGoodsInfoLists],methods=[POST]}" onto public void com.api.GiftController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getPicAddress],methods=[GET]}" onto public java.lang.String com.api.GiftController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReportDays],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyseDays(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReportDaysExcel],methods=[POST]}" onto public void com.api.GoodController.getReportAnalyseDaysExcel(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/exceptionOrderList],methods=[POST]}" onto public void com.api.HomeController.exceptionOrderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/shopSelect],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.shopSelect(com.framework.mapping.system.CdsUsers) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderOntimeSelect],methods=[POST]}" onto public void com.api.OrderController.orderOntimeSelect(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderOntimeCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.orderTimeCount(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/order_count],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.orderDayCount(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfos],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfos(java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getMtCookie],methods=[POST]}" onto public void com.api.PackController.getMtCookie(java.lang.String) 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:37:02] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:37:03] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Aug 17 10:36:58 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-17 10:37:03] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-08-17 10:37:03] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-17 10:37:03] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-51612-1502937423694-1:1,clientId=null,started=false} 
[INFO][2017-08-17 10:37:03] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-08-17 10:37:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-08-17 10:37:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-08-17 10:37:04] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 5574 ms 
[INFO][2017-08-17 10:37:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-17 10:37:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:chenbin
 
[INFO][2017-08-17 10:37:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:37:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:351
参数2:1032
 
[INFO][2017-08-17 10:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:352
参数2:1032
 
[INFO][2017-08-17 10:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:375
参数2:1032
 
[INFO][2017-08-17 10:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:380
参数2:1032
 
[INFO][2017-08-17 10:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:353
参数2:1032
 
[INFO][2017-08-17 10:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:37:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:376
参数2:1032
 
[INFO][2017-08-17 10:37:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:37:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:372
参数2:1032
 
[INFO][2017-08-17 10:37:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:37:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:354
参数2:1032
 
[INFO][2017-08-17 10:37:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:37:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:355
参数2:1032
 
[INFO][2017-08-17 10:37:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:37:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:356
参数2:1032
 
[INFO][2017-08-17 10:37:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-17 10:37:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:0
 
[INFO][2017-08-17 10:37:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 10:37:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 10:37:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-17 10:37:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:0
参数2:2017-08-17
参数3:2017-08-17
参数4:0
参数5:2017-08-17
参数6:2017-08-17
参数7:0
参数8:2017-08-17
参数9:2017-08-17
参数10:0
参数11:2017-08-17
参数12:2017-08-17
参数13:0
参数14:2017-08-17
参数15:2017-08-17
参数16:0
参数17:2017-08-17
参数18:2017-08-17
参数19:0
参数20:2017-08-17
参数21:2017-08-17
参数22:0
参数23:2017-08-17
参数24:2017-08-17
参数25:0
参数26:2017-08-17
参数27:2017-08-17
 
[INFO][2017-08-17 10:37:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 10:37:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 10:37:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-17 10:37:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2017-08-17
参数2:2017-08-17
 
[INFO][2017-08-17 10:37:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-17 10:37:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2017-08-17
参数2:2017-08-17
参数3:0
参数4:2017-08-17
参数5:2017-08-17
参数6:0
参数7:2017-08-16
参数8:2017-08-16
参数9:0
参数10:2017-08-16
参数11:2017-08-16
参数12:0
参数13:2017-08-10
参数14:2017-08-10
参数15:0
 
[INFO][2017-08-17 10:37:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 10:37:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-17 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-17 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-17 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-17 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-17 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-17 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-17 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:37:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-17 10:37:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 10:37:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:14
 
[INFO][2017-08-17 10:37:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 10:37:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:14
 
[INFO][2017-08-17 10:37:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 10:37:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-17 10:37:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 10:37:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-17 10:37:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 10:37:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-17 10:37:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 10:37:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-17 10:37:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 10:37:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
 
[INFO][2017-08-17 10:37:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 10:37:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
 
[INFO][2017-08-17 10:37:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 10:37:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:10
 
[INFO][2017-08-17 10:37:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 10:37:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:10
 
[INFO][2017-08-17 10:37:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 10:37:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:11
 
[INFO][2017-08-17 10:37:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 10:37:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:11
 
[INFO][2017-08-17 10:37:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 10:37:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:12
 
[INFO][2017-08-17 10:37:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 10:37:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:12
 
[INFO][2017-08-17 10:41:20] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Aug 17 10:36:58 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-17 10:41:20] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-17 10:41:20] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-08-17 10:41:20] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Thu Aug 17 10:36:56 CST 2017]; root of context hierarchy 
[INFO][2017-08-17 10:41:20] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-17 10:41:33] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-08-17 10:41:33] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Thu Aug 17 10:41:33 CST 2017]; root of context hierarchy 
[INFO][2017-08-17 10:41:33] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-08-17 10:41:33] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-08-17 10:41:33] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-08-17 10:41:34] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-08-17 10:41:36] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-17 10:41:36] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 2793 ms 
[INFO][2017-08-17 10:41:36] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-08-17 10:41:36] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Aug 17 10:41:36 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-17 10:41:36] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-08-17 10:41:38] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/emp/getCreateProgress]}" onto public void com.framework.controller.ExpController.getCreateProgress() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/emp/expCurrentPage]}" onto private void com.framework.controller.ExpController.responseExcelPage(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/emp/downFile]}" onto public void com.framework.controller.ExpController.downFile() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model,java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/order_day],methods=[GET]}" onto public java.lang.String com.controller.ClientController.order_day() 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_day],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_day() 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/order_ontime],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderOnTime() 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/refund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.refund() 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/historyRefund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.historyRefund() 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/exception_orderlist/{action}],methods=[GET]}" onto public java.lang.String com.controller.ClientController.exception_orderlist(java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/commentList],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.commentList() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getClassName(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index2() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresCombobox() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoodList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoodList(java.util.HashMap) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree2],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree2() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/classIndex2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.classIndex2() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClassList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClassList(java.util.HashMap) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getBrandCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getBrandCombobox() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresClass],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresClass(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTreeLazy],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getClassTreeLazy(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGood(java.util.HashMap) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/edit],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.edit(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStandardGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStandardGood(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/editErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.editErp(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleErp(java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/editStandard],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.editStandard(java.util.HashMap) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteStandard],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteStandard(java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.updateGood(java.util.HashMap) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassCombobox(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGood(java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/validateLoginText],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLoginText() 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/reminderHf],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderHf(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/MtText],methods=[POST]}" onto public void com.controller.ReminderController.MtText() 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/cdCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.cdCount() 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/geReminderList],methods=[POST]}" onto public void com.controller.ReminderController.geReminderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/reminderLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderLogin(java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/validateLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLogin() 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/indexCd],methods=[GET]}" onto public java.lang.String com.controller.ReminderController.indexCd() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/setStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.setStatus(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.toggle(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.deleteGood(java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addTask(com.framework.mapping.system.CdsChufanTask) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.getChuFanTask(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addMeal(com.framework.mapping.system.CdsChufanMeal,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getErpGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addErpGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addErpGood(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/refund],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.refund(java.util.HashMap) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/historybacklist],methods=[POST]}" onto public void com.api.BackMoneyController.historybacklist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/bmCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.bmCount(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/backlist],methods=[POST]}" onto public void com.api.BackMoneyController.backlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/CommentApi/comment/list],methods=[POST]}" onto public void com.api.CommentController.commentList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/CommentApi/comment/replyEleme],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.CommentController.replyEleme(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/CommentApi/comment/shops],methods=[GET]}" onto public java.lang.Object com.api.CommentController.getBrandShops(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/CommentApi/comment/order],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.CommentController.showOrderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/GetGoodsInfoLists],methods=[POST]}" onto public void com.api.GiftController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getPicAddress],methods=[GET]}" onto public java.lang.String com.api.GiftController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReportDays],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyseDays(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReportDaysExcel],methods=[POST]}" onto public void com.api.GoodController.getReportAnalyseDaysExcel(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/shopSelect],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.shopSelect(com.framework.mapping.system.CdsUsers) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/exceptionOrderList],methods=[POST]}" onto public void com.api.HomeController.exceptionOrderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderOntimeCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.orderTimeCount(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/order_count],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.orderDayCount(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderOntimeSelect],methods=[POST]}" onto public void com.api.OrderController.orderOntimeSelect(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfos],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfos(java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getMtCookie],methods=[POST]}" onto public void com.api.PackController.getMtCookie(java.lang.String) 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:41:39] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:41:40] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Aug 17 10:41:36 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-17 10:41:40] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-08-17 10:41:40] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-17 10:41:41] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-51694-1502937701005-1:1,clientId=null,started=false} 
[INFO][2017-08-17 10:41:41] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-08-17 10:41:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-08-17 10:41:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-08-17 10:41:41] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 5388 ms 
[INFO][2017-08-17 10:41:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-17 10:41:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:chenbin
 
[INFO][2017-08-17 10:41:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:41:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:351
参数2:1032
 
[INFO][2017-08-17 10:41:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:41:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:352
参数2:1032
 
[INFO][2017-08-17 10:41:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:41:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:375
参数2:1032
 
[INFO][2017-08-17 10:41:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:41:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:380
参数2:1032
 
[INFO][2017-08-17 10:41:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:41:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:353
参数2:1032
 
[INFO][2017-08-17 10:41:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:41:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:376
参数2:1032
 
[INFO][2017-08-17 10:41:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:41:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:372
参数2:1032
 
[INFO][2017-08-17 10:41:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:41:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:354
参数2:1032
 
[INFO][2017-08-17 10:41:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:41:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:355
参数2:1032
 
[INFO][2017-08-17 10:41:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:41:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:356
参数2:1032
 
[INFO][2017-08-17 10:41:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-17 10:41:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:0
 
[INFO][2017-08-17 10:41:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 10:41:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 10:41:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-17 10:41:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:0
参数2:2017-08-17
参数3:2017-08-17
参数4:0
参数5:2017-08-17
参数6:2017-08-17
参数7:0
参数8:2017-08-17
参数9:2017-08-17
参数10:0
参数11:2017-08-17
参数12:2017-08-17
参数13:0
参数14:2017-08-17
参数15:2017-08-17
参数16:0
参数17:2017-08-17
参数18:2017-08-17
参数19:0
参数20:2017-08-17
参数21:2017-08-17
参数22:0
参数23:2017-08-17
参数24:2017-08-17
参数25:0
参数26:2017-08-17
参数27:2017-08-17
 
[INFO][2017-08-17 10:41:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-17 10:41:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2017-08-17
参数2:2017-08-17
 
[INFO][2017-08-17 10:41:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 10:41:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 10:41:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-17 10:41:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2017-08-17
参数2:2017-08-17
参数3:0
参数4:2017-08-17
参数5:2017-08-17
参数6:0
参数7:2017-08-16
参数8:2017-08-16
参数9:0
参数10:2017-08-16
参数11:2017-08-16
参数12:0
参数13:2017-08-10
参数14:2017-08-10
参数15:0
 
[INFO][2017-08-17 10:41:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 10:41:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 10:41:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 10:41:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 10:41:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:41:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 10:41:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:41:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 10:41:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:41:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 10:41:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 10:41:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 10:41:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 10:41:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 10:41:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:41:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 10:41:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 10:41:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 10:41:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:41:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 10:41:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:41:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-17 10:41:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:41:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-17 10:41:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:41:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-17 10:41:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:41:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-17 10:41:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:41:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-17 10:41:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:41:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-17 10:41:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:41:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 10:41:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:41:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-17 10:41:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:41:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-17 10:42:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 10:42:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-17 10:42:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 10:42:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-17 10:42:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 10:42:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:9
 
[INFO][2017-08-17 10:42:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 10:42:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:9
 
[INFO][2017-08-17 10:44:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 10:44:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 10:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 10:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 10:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 10:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 10:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 10:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 10:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 10:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 10:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 10:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 10:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-17 10:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 10:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 10:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-17 10:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-17 10:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 10:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-17 10:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-17 10:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-17 10:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 10:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-17 10:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:44:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-17 10:44:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 10:44:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
 
[INFO][2017-08-17 10:44:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 10:44:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
 
[INFO][2017-08-17 10:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 10:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:10
 
[INFO][2017-08-17 10:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 10:44:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:10
 
[INFO][2017-08-17 10:44:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 10:44:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:10
 
[INFO][2017-08-17 10:44:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 10:44:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:10
 
[INFO][2017-08-17 10:45:00] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Aug 17 10:41:36 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-17 10:45:00] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-17 10:45:01] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-08-17 10:45:01] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Thu Aug 17 10:41:33 CST 2017]; root of context hierarchy 
[INFO][2017-08-17 10:45:01] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-17 10:45:15] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-08-17 10:45:15] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Thu Aug 17 10:45:15 CST 2017]; root of context hierarchy 
[INFO][2017-08-17 10:45:15] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-08-17 10:45:15] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-08-17 10:45:15] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-08-17 10:45:15] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-08-17 10:45:17] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-17 10:45:17] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 2766 ms 
[INFO][2017-08-17 10:45:17] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-08-17 10:45:17] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Aug 17 10:45:17 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-17 10:45:17] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-08-17 10:45:20] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/emp/downFile]}" onto public void com.framework.controller.ExpController.downFile() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/emp/getCreateProgress]}" onto public void com.framework.controller.ExpController.getCreateProgress() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/emp/expCurrentPage]}" onto private void com.framework.controller.ExpController.responseExcelPage(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model,java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_day],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_day() 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/order_day],methods=[GET]}" onto public java.lang.String com.controller.ClientController.order_day() 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/order_ontime],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderOnTime() 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/refund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.refund() 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/historyRefund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.historyRefund() 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/exception_orderlist/{action}],methods=[GET]}" onto public java.lang.String com.controller.ClientController.exception_orderlist(java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/commentList],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.commentList() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getClassName(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index2() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree2],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree2() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/classIndex2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.classIndex2() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClassList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClassList(java.util.HashMap) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getBrandCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getBrandCombobox() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresClass],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresClass(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTreeLazy],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getClassTreeLazy(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGood(java.util.HashMap) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/edit],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.edit(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStandardGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStandardGood(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/editErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.editErp(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleErp(java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/editStandard],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.editStandard(java.util.HashMap) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteStandard],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteStandard(java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.updateGood(java.util.HashMap) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassCombobox(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGood(java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresCombobox() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoodList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoodList(java.util.HashMap) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/reminderLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderLogin(java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/reminderHf],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderHf(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/indexCd],methods=[GET]}" onto public java.lang.String com.controller.ReminderController.indexCd() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/validateLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLogin() 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/cdCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.cdCount() 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/MtText],methods=[POST]}" onto public void com.controller.ReminderController.MtText() 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/geReminderList],methods=[POST]}" onto public void com.controller.ReminderController.geReminderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/validateLoginText],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLoginText() 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/setStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.setStatus(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.deleteGood(java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addTask(com.framework.mapping.system.CdsChufanTask) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.getChuFanTask(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addMeal(com.framework.mapping.system.CdsChufanMeal,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getErpGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addErpGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addErpGood(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.toggle(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/refund],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.refund(java.util.HashMap) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/historybacklist],methods=[POST]}" onto public void com.api.BackMoneyController.historybacklist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/bmCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.bmCount(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/backlist],methods=[POST]}" onto public void com.api.BackMoneyController.backlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/CommentApi/comment/replyEleme],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.CommentController.replyEleme(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/CommentApi/comment/shops],methods=[GET]}" onto public java.lang.Object com.api.CommentController.getBrandShops(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/CommentApi/comment/order],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.CommentController.showOrderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/CommentApi/comment/list],methods=[POST]}" onto public void com.api.CommentController.commentList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/GetGoodsInfoLists],methods=[POST]}" onto public void com.api.GiftController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getPicAddress],methods=[GET]}" onto public java.lang.String com.api.GiftController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReportDays],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyseDays(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReportDaysExcel],methods=[POST]}" onto public void com.api.GoodController.getReportAnalyseDaysExcel(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/shopSelect],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.shopSelect(com.framework.mapping.system.CdsUsers) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/exceptionOrderList],methods=[POST]}" onto public void com.api.HomeController.exceptionOrderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderOntimeCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.orderTimeCount(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/order_count],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.orderDayCount(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderOntimeSelect],methods=[POST]}" onto public void com.api.OrderController.orderOntimeSelect(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfos],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfos(java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getMtCookie],methods=[POST]}" onto public void com.api.PackController.getMtCookie(java.lang.String) 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:45:21] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:45:22] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Aug 17 10:45:17 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-17 10:45:22] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-08-17 10:45:22] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-17 10:45:23] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-51902-1502937922923-1:1,clientId=null,started=false} 
[INFO][2017-08-17 10:45:23] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-08-17 10:45:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-08-17 10:45:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-08-17 10:45:23] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 5732 ms 
[INFO][2017-08-17 10:45:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-17 10:45:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:chenbin
 
[INFO][2017-08-17 10:45:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:45:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:351
参数2:1032
 
[INFO][2017-08-17 10:45:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:45:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:352
参数2:1032
 
[INFO][2017-08-17 10:45:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:45:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:375
参数2:1032
 
[INFO][2017-08-17 10:45:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:45:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:380
参数2:1032
 
[INFO][2017-08-17 10:45:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:45:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:353
参数2:1032
 
[INFO][2017-08-17 10:45:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:45:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:376
参数2:1032
 
[INFO][2017-08-17 10:45:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:45:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:372
参数2:1032
 
[INFO][2017-08-17 10:45:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:45:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:354
参数2:1032
 
[INFO][2017-08-17 10:45:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:45:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:355
参数2:1032
 
[INFO][2017-08-17 10:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:356
参数2:1032
 
[INFO][2017-08-17 10:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-17 10:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:0
 
[INFO][2017-08-17 10:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 10:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 10:45:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-17 10:45:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2017-08-17
参数2:2017-08-17
 
[INFO][2017-08-17 10:45:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 10:45:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 10:45:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-17 10:45:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:0
参数2:2017-08-17
参数3:2017-08-17
参数4:0
参数5:2017-08-17
参数6:2017-08-17
参数7:0
参数8:2017-08-17
参数9:2017-08-17
参数10:0
参数11:2017-08-17
参数12:2017-08-17
参数13:0
参数14:2017-08-17
参数15:2017-08-17
参数16:0
参数17:2017-08-17
参数18:2017-08-17
参数19:0
参数20:2017-08-17
参数21:2017-08-17
参数22:0
参数23:2017-08-17
参数24:2017-08-17
参数25:0
参数26:2017-08-17
参数27:2017-08-17
 
[INFO][2017-08-17 10:45:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-17 10:45:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2017-08-17
参数2:2017-08-17
参数3:0
参数4:2017-08-17
参数5:2017-08-17
参数6:0
参数7:2017-08-16
参数8:2017-08-16
参数9:0
参数10:2017-08-16
参数11:2017-08-16
参数12:0
参数13:2017-08-10
参数14:2017-08-10
参数15:0
 
[INFO][2017-08-17 10:45:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 10:45:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 10:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 10:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 10:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 10:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 10:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 10:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 10:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 10:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 10:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 10:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 10:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 10:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 10:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-17 10:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 10:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-17 10:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-17 10:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-17 10:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-17 10:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-17 10:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 10:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-17 10:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-17 10:45:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 10:45:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
 
[INFO][2017-08-17 10:45:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 10:45:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
 
[INFO][2017-08-17 10:45:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 10:45:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:11
 
[INFO][2017-08-17 10:45:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 6 
[INFO][2017-08-17 10:45:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:11
 
[INFO][2017-08-17 10:45:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 10:45:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:10
 
[INFO][2017-08-17 10:45:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 10:45:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:10
 
[INFO][2017-08-17 10:45:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 10:45:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:9
 
[INFO][2017-08-17 10:45:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 10:45:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:9
 
[INFO][2017-08-17 10:45:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 10:45:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:9
参数2:29
 
[INFO][2017-08-17 10:45:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-08-17 10:45:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:9
参数2:29
 
[INFO][2017-08-17 10:45:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 10:45:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:9
参数2:30
 
[INFO][2017-08-17 10:45:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 10:45:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:9
参数2:30
 
[INFO][2017-08-17 10:45:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 10:45:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
参数2:32
 
[INFO][2017-08-17 10:45:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 10:45:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
参数2:32
 
[INFO][2017-08-17 10:45:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 10:45:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:9
参数2:31
 
[INFO][2017-08-17 10:45:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 10:45:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:9
参数2:31
 
[INFO][2017-08-17 10:45:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 10:45:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:9
 
[INFO][2017-08-17 10:45:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-08-17 10:45:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:9
 
[INFO][2017-08-17 10:45:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 10:45:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
参数2:9
 
[INFO][2017-08-17 10:45:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 10:45:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
参数2:9
 
[INFO][2017-08-17 10:45:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 10:45:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:10
 
[INFO][2017-08-17 10:45:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 10:45:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:10
 
[INFO][2017-08-17 10:46:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-08-17 10:46:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 10:46:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 10:46:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 10:46:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:46:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 10:46:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-08-17 10:46:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 10:46:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-08-17 10:46:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 10:46:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 10:46:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 10:46:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 10:46:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 10:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 10:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 10:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 10:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 10:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 10:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 10:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 10:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 10:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 10:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 10:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-17 10:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 10:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 10:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-17 10:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-17 10:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 10:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-17 10:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-17 10:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-17 10:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-17 10:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 10:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:46:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-17 10:46:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 10:46:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:9
 
[INFO][2017-08-17 10:46:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 10:46:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:9
 
[INFO][2017-08-17 10:46:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 10:46:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:10
 
[INFO][2017-08-17 10:46:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 10:46:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:10
 
[INFO][2017-08-17 10:46:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 10:46:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:10
参数2:30
 
[INFO][2017-08-17 10:46:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 10:46:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:10
参数2:30
 
[INFO][2017-08-17 10:46:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 10:46:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:10
参数2:31
 
[INFO][2017-08-17 10:46:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 10:46:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:10
参数2:31
 
[INFO][2017-08-17 10:46:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 10:46:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:10
参数2:32
 
[INFO][2017-08-17 10:46:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 10:46:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:10
参数2:32
 
[INFO][2017-08-17 10:47:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 10:47:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:9
 
[INFO][2017-08-17 10:47:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 10:47:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:9
 
[INFO][2017-08-17 10:50:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 10:50:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 10:50:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 10:50:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 10:50:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 10:50:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1032
 
[INFO][2017-08-17 10:53:44] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Aug 17 10:45:17 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-17 10:53:44] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-17 10:53:44] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-08-17 10:53:45] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Thu Aug 17 10:45:15 CST 2017]; root of context hierarchy 
[INFO][2017-08-17 10:53:45] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-17 10:53:59] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(7)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-08-17 10:53:59] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(7)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Thu Aug 17 10:53:59 CST 2017]; root of context hierarchy 
[INFO][2017-08-17 10:53:59] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(7)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-08-17 10:54:00] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(7)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-08-17 10:54:00] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(7)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-08-17 10:54:00] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(7)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-08-17 10:54:02] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(7)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-17 10:54:02] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(7)-127.0.0.1 Root WebApplicationContext: initialization completed in 3337 ms 
[INFO][2017-08-17 10:54:03] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(7)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-08-17 10:54:03] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(7)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Aug 17 10:54:03 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-17 10:54:03] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(7)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-08-17 10:54:05] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(7)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-08-17 10:54:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/emp/downFile]}" onto public void com.framework.controller.ExpController.downFile() throws java.lang.Exception 
[INFO][2017-08-17 10:54:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/emp/getCreateProgress]}" onto public void com.framework.controller.ExpController.getCreateProgress() throws java.lang.Exception 
[INFO][2017-08-17 10:54:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/emp/expCurrentPage]}" onto private void com.framework.controller.ExpController.responseExcelPage(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:54:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-08-17 10:54:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-08-17 10:54:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-08-17 10:54:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-08-17 10:54:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-08-17 10:54:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-08-17 10:54:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-08-17 10:54:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-08-17 10:54:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-08-17 10:54:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-08-17 10:54:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-08-17 10:54:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-17 10:54:06] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model,java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/order_day],methods=[GET]}" onto public java.lang.String com.controller.ClientController.order_day() 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/good_day],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_day() 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/order_ontime],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderOnTime() 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/refund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.refund() 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/historyRefund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.historyRefund() 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/exception_orderlist/{action}],methods=[GET]}" onto public java.lang.String com.controller.ClientController.exception_orderlist(java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/commentList],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.commentList() throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getClassName(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/index2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index2() throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresCombobox() throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoodList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoodList(java.util.HashMap) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree() throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree2],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree2() throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/classIndex2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.classIndex2() throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClassList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClassList(java.util.HashMap) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getBrandCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getBrandCombobox() throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresClass],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresClass(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTreeLazy],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getClassTreeLazy(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGood(java.util.HashMap) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/edit],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.edit(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStandardGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStandardGood(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/editErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.editErp(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleErp(java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/editStandard],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.editStandard(java.util.HashMap) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteStandard],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteStandard(java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/updateGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.updateGood(java.util.HashMap) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassCombobox(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGood(java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/validateLoginText],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLoginText() 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/cdCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.cdCount() 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/reminderHf],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderHf(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/indexCd],methods=[GET]}" onto public java.lang.String com.controller.ReminderController.indexCd() throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/validateLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLogin() 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/geReminderList],methods=[POST]}" onto public void com.controller.ReminderController.geReminderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/reminderLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderLogin(java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/MtText],methods=[POST]}" onto public void com.controller.ReminderController.MtText() 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.toggle(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/setStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.setStatus(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.deleteGood(java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/addErpGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addErpGood(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/addMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addMeal(com.framework.mapping.system.CdsChufanMeal,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/addTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addTask(com.framework.mapping.system.CdsChufanTask) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.getChuFanTask(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/getErpGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/BackMoneyApi/refund],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.refund(java.util.HashMap) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/BackMoneyApi/historybacklist],methods=[POST]}" onto public void com.api.BackMoneyController.historybacklist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/BackMoneyApi/bmCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.bmCount(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/BackMoneyApi/backlist],methods=[POST]}" onto public void com.api.BackMoneyController.backlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/CommentApi/comment/list],methods=[POST]}" onto public void com.api.CommentController.commentList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/CommentApi/comment/replyEleme],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.CommentController.replyEleme(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/CommentApi/comment/shops],methods=[GET]}" onto public java.lang.Object com.api.CommentController.getBrandShops(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/CommentApi/comment/order],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.CommentController.showOrderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/GetGoodsInfoLists],methods=[POST]}" onto public void com.api.GiftController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/getPicAddress],methods=[GET]}" onto public java.lang.String com.api.GiftController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodAPI/goodReportDays],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyseDays(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodAPI/goodReportDaysExcel],methods=[POST]}" onto public void com.api.GoodController.getReportAnalyseDaysExcel(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/homeApi/exceptionOrderList],methods=[POST]}" onto public void com.api.HomeController.exceptionOrderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/homeApi/shopSelect],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.shopSelect(com.framework.mapping.system.CdsUsers) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/orderOntimeSelect],methods=[POST]}" onto public void com.api.OrderController.orderOntimeSelect(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/orderOntimeCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.orderTimeCount(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/order_count],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.orderDayCount(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/getOrderInfos],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfos(java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/getMtCookie],methods=[POST]}" onto public void com.api.PackController.getMtCookie(java.lang.String) 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 10:54:07] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 10:54:09] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(7)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Aug 17 10:54:03 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-17 10:54:09] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(7)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-08-17 10:54:10] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(7)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-17 10:54:10] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(7)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-52036-1502938450640-1:1,clientId=null,started=false} 
[INFO][2017-08-17 10:54:10] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-08-17 10:54:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(7)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-08-17 10:54:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(7)-127.0.0.1 参数1:site_options
 
[INFO][2017-08-17 10:54:11] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(7)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 8539 ms 
[INFO][2017-08-17 10:55:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-17 10:55:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:chenbin
 
[INFO][2017-08-17 10:55:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:55:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:351
参数2:1032
 
[INFO][2017-08-17 10:55:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:55:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:352
参数2:1032
 
[INFO][2017-08-17 10:55:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:55:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:375
参数2:1032
 
[INFO][2017-08-17 10:55:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:55:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:380
参数2:1032
 
[INFO][2017-08-17 10:55:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:55:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:353
参数2:1032
 
[INFO][2017-08-17 10:55:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:55:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:376
参数2:1032
 
[INFO][2017-08-17 10:55:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:55:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:372
参数2:1032
 
[INFO][2017-08-17 10:55:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:55:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:354
参数2:1032
 
[INFO][2017-08-17 10:55:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:55:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:355
参数2:1032
 
[INFO][2017-08-17 10:55:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 10:55:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:356
参数2:1032
 
[INFO][2017-08-17 10:55:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-17 10:55:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:0
 
[INFO][2017-08-17 10:55:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 10:55:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 10:55:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-17 10:55:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:0
参数2:2017-08-17
参数3:2017-08-17
参数4:0
参数5:2017-08-17
参数6:2017-08-17
参数7:0
参数8:2017-08-17
参数9:2017-08-17
参数10:0
参数11:2017-08-17
参数12:2017-08-17
参数13:0
参数14:2017-08-17
参数15:2017-08-17
参数16:0
参数17:2017-08-17
参数18:2017-08-17
参数19:0
参数20:2017-08-17
参数21:2017-08-17
参数22:0
参数23:2017-08-17
参数24:2017-08-17
参数25:0
参数26:2017-08-17
参数27:2017-08-17
 
[INFO][2017-08-17 10:55:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-17 10:55:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2017-08-17
参数2:2017-08-17
 
[INFO][2017-08-17 10:55:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 10:55:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 10:55:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-17 10:55:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2017-08-17
参数2:2017-08-17
参数3:0
参数4:2017-08-17
参数5:2017-08-17
参数6:0
参数7:2017-08-16
参数8:2017-08-16
参数9:0
参数10:2017-08-16
参数11:2017-08-16
参数12:0
参数13:2017-08-10
参数14:2017-08-10
参数15:0
 
[INFO][2017-08-17 10:58:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 10:58:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 10:58:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 10:58:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 10:58:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:58:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 10:58:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:58:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 10:58:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:58:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 10:58:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:58:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 10:58:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 10:58:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 10:58:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 10:58:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 10:58:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:58:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 10:58:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 10:58:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 10:58:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:58:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-17 10:58:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:58:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-17 10:58:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:58:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 10:58:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:58:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-17 10:58:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:58:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-17 10:58:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:58:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-17 10:58:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:58:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-17 10:58:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:58:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-17 10:58:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 10:58:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 10:58:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:58:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-17 10:58:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 10:58:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 10:58:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:58:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 10:58:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:58:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 10:58:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:58:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 10:58:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:58:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 10:58:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:58:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 10:58:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 10:58:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 10:58:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 10:58:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 10:58:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 10:58:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 10:58:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:58:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-17 10:58:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:58:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-17 10:58:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:58:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 10:58:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:58:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-17 10:58:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:58:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:58:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-17 10:58:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-17 10:58:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:58:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-17 10:58:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:58:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-17 10:58:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,b.stores_id from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
        order by a.listorder 
[INFO][2017-08-17 10:58:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
参数2:9
 
[INFO][2017-08-17 10:58:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:58:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-17 10:58:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,b.stores_id from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
        order by a.listorder 
[INFO][2017-08-17 10:58:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
参数2:9
 
[INFO][2017-08-17 10:58:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 10:58:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 10:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 10:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 10:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 10:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 10:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 10:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 10:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 10:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 10:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 10:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 10:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 10:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-17 10:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 10:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 10:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-17 10:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-17 10:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-17 10:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-17 10:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 10:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 10:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-17 10:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-17 10:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 10:58:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-17 11:00:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 11:00:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 11:00:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 11:00:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 11:00:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 11:00:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1032
 
[INFO][2017-08-17 11:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:01:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 11:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 11:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 11:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 11:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 11:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 11:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 11:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 11:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 11:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-17 11:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 11:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 11:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-17 11:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-17 11:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-17 11:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-17 11:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-17 11:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-17 11:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,b.stores_id from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
        order by a.listorder 
[INFO][2017-08-17 11:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
参数2:9
 
[INFO][2017-08-17 11:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-17 11:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,b.stores_id from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
        order by a.listorder 
[INFO][2017-08-17 11:02:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
参数2:9
 
[INFO][2017-08-17 11:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:02:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 11:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 11:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 11:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 11:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 11:02:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 11:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 11:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 11:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-17 11:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 11:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 11:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-17 11:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 11:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-17 11:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-17 11:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-17 11:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 11:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 11:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-17 11:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-17 11:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:02:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-17 11:02:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:02:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:10
 
[INFO][2017-08-17 11:02:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:02:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:10
 
[INFO][2017-08-17 11:02:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:02:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:11
 
[INFO][2017-08-17 11:02:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 6 
[INFO][2017-08-17 11:02:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:11
 
[INFO][2017-08-17 11:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:12
 
[INFO][2017-08-17 11:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:02:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:12
 
[INFO][2017-08-17 11:02:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:02:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 11:02:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:02:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 11:02:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:02:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:02:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:02:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:02:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:02:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:02:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 11:02:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 11:02:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 11:02:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 11:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 11:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 11:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 11:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 11:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-17 11:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-17 11:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-17 11:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 11:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-17 11:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-17 11:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-17 11:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-17 11:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,b.stores_id from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
        order by a.listorder 
[INFO][2017-08-17 11:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
参数2:9
 
[INFO][2017-08-17 11:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-17 11:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,b.stores_id from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
        order by a.listorder 
[INFO][2017-08-17 11:02:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
参数2:9
 
[INFO][2017-08-17 11:02:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:02:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:30
 
[INFO][2017-08-17 11:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 11:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:30
 
[INFO][2017-08-17 11:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:31
 
[INFO][2017-08-17 11:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 11:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:31
 
[INFO][2017-08-17 11:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:32
 
[INFO][2017-08-17 11:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 11:02:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:32
 
[INFO][2017-08-17 11:02:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:02:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:29
 
[INFO][2017-08-17 11:02:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-08-17 11:02:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:29
 
[INFO][2017-08-17 11:02:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:02:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:31
 
[INFO][2017-08-17 11:02:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 11:02:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:31
 
[INFO][2017-08-17 11:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:30
 
[INFO][2017-08-17 11:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 11:02:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:30
 
[INFO][2017-08-17 11:02:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:02:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:43
 
[INFO][2017-08-17 11:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 11:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:43
 
[INFO][2017-08-17 11:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:45
 
[INFO][2017-08-17 11:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:02:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:45
 
[INFO][2017-08-17 11:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:42
 
[INFO][2017-08-17 11:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 11:02:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:42
 
[INFO][2017-08-17 11:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:29
 
[INFO][2017-08-17 11:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-08-17 11:02:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:29
 
[INFO][2017-08-17 11:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:32
 
[INFO][2017-08-17 11:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 11:03:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:32
 
[INFO][2017-08-17 11:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:31
 
[INFO][2017-08-17 11:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 11:03:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:31
 
[INFO][2017-08-17 11:03:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:03:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:30
 
[INFO][2017-08-17 11:03:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 11:03:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:30
 
[INFO][2017-08-17 11:03:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:03:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:29
 
[INFO][2017-08-17 11:03:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-08-17 11:03:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:29
 
[INFO][2017-08-17 11:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:30
 
[INFO][2017-08-17 11:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 11:03:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:30
 
[INFO][2017-08-17 11:03:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:03:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:32
 
[INFO][2017-08-17 11:03:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 11:03:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:32
 
[INFO][2017-08-17 11:03:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:03:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:29
 
[INFO][2017-08-17 11:03:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         b.stores_class_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-08-17 11:03:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:29
 
[INFO][2017-08-17 11:05:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:05:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:05:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:05:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 11:05:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:05:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 11:05:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 11:05:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 11:05:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:05:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 11:05:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:05:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 11:05:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:05:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 11:05:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 11:05:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 11:05:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:05:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-17 11:05:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 11:05:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 11:05:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:05:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:05:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-17 11:05:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-17 11:05:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:05:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 11:05:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:05:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-17 11:05:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:05:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-17 11:05:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:05:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-17 11:05:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,b.stores_id from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
        order by a.listorder 
[INFO][2017-08-17 11:05:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
参数2:9
 
[INFO][2017-08-17 11:05:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:05:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-17 11:05:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,b.stores_id from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
        order by a.listorder 
[INFO][2017-08-17 11:05:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
参数2:9
 
[INFO][2017-08-17 11:05:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:05:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-17 11:05:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:05:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 11:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 11:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 11:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 11:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 11:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 11:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 11:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 11:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 11:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-17 11:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 11:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-17 11:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 11:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-17 11:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-17 11:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-17 11:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-17 11:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 11:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-17 11:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:05:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-17 11:05:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 11:05:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 11:05:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 11:05:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 11:05:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 11:05:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-17 11:08:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:08:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 11:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 11:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 11:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 11:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 11:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 11:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 11:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 11:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 11:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 11:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 11:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-17 11:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-17 11:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-17 11:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:08:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 11:08:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:08:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-17 11:08:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:08:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:08:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-17 11:08:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:08:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-17 11:08:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-17 11:08:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 11:08:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 11:08:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:08:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-17 11:08:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:08:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
 
[INFO][2017-08-17 11:08:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:08:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
 
[INFO][2017-08-17 11:08:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:08:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:9
 
[INFO][2017-08-17 11:08:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:08:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:9
 
[INFO][2017-08-17 11:08:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:08:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
参数2:9
 
[INFO][2017-08-17 11:08:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-08-17 11:08:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
参数2:9
 
[INFO][2017-08-17 11:08:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:08:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
参数2:9
 
[INFO][2017-08-17 11:08:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:08:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
参数2:9
 
[INFO][2017-08-17 11:08:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:08:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:9
 
[INFO][2017-08-17 11:08:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:08:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:9
 
[INFO][2017-08-17 11:08:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:08:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 11:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 11:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 11:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 11:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 11:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 11:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 11:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 11:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 11:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 11:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-17 11:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 11:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-17 11:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-17 11:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-17 11:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-17 11:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-17 11:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-17 11:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,b.stores_id from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
        order by a.listorder 
[INFO][2017-08-17 11:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:9
 
[INFO][2017-08-17 11:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-17 11:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,b.stores_id from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
        order by a.listorder 
[INFO][2017-08-17 11:08:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:9
 
[INFO][2017-08-17 11:09:39] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Aug 17 10:54:03 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-17 11:09:39] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-17 11:09:40] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-08-17 11:09:40] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Thu Aug 17 10:53:59 CST 2017]; root of context hierarchy 
[INFO][2017-08-17 11:09:40] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-17 11:09:55] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(7)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-08-17 11:09:55] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(7)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Thu Aug 17 11:09:55 CST 2017]; root of context hierarchy 
[INFO][2017-08-17 11:09:55] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(7)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-08-17 11:09:56] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(7)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-08-17 11:09:56] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(7)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-08-17 11:09:56] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(7)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-08-17 11:09:58] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(7)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-17 11:09:58] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(7)-127.0.0.1 Root WebApplicationContext: initialization completed in 3287 ms 
[INFO][2017-08-17 11:09:59] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(7)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-08-17 11:09:59] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(7)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Aug 17 11:09:59 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-17 11:09:59] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(7)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-08-17 11:10:01] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(7)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/emp/getCreateProgress]}" onto public void com.framework.controller.ExpController.getCreateProgress() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/emp/expCurrentPage]}" onto private void com.framework.controller.ExpController.responseExcelPage(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/emp/downFile]}" onto public void com.framework.controller.ExpController.downFile() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model,java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/exception_orderlist/{action}],methods=[GET]}" onto public java.lang.String com.controller.ClientController.exception_orderlist(java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/order_day],methods=[GET]}" onto public java.lang.String com.controller.ClientController.order_day() 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/good_day],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_day() 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/order_ontime],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderOnTime() 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/refund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.refund() 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/historyRefund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.historyRefund() 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ClientSet/commentList],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.commentList() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getClassName(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/index2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index2() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresCombobox() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoodList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoodList(java.util.HashMap) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree2],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree2() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/classIndex2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.classIndex2() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClassList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClassList(java.util.HashMap) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getBrandCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getBrandCombobox() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresClass],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresClass(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTreeLazy],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getClassTreeLazy(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGood(java.util.HashMap) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/edit],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.edit(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStandardGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStandardGood(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/editErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.editErp(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleErp(java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/editStandard],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.editStandard(java.util.HashMap) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteStandard],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteStandard(java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/updateGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.updateGood(java.util.HashMap) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassCombobox(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGood(java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/validateLoginText],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLoginText() 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/reminderHf],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderHf(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/cdCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.cdCount() 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/validateLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLogin() 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/reminderLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderLogin(java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/indexCd],methods=[GET]}" onto public java.lang.String com.controller.ReminderController.indexCd() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/MtText],methods=[POST]}" onto public void com.controller.ReminderController.MtText() 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Reminder/geReminderList],methods=[POST]}" onto public void com.controller.ReminderController.geReminderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/setStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.setStatus(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.toggle(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.deleteGood(java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/addErpGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addErpGood(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/addMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addMeal(com.framework.mapping.system.CdsChufanMeal,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/addTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addTask(com.framework.mapping.system.CdsChufanTask) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.getChuFanTask(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/StoresPrinter/getErpGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/BackMoneyApi/refund],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.refund(java.util.HashMap) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/BackMoneyApi/historybacklist],methods=[POST]}" onto public void com.api.BackMoneyController.historybacklist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/BackMoneyApi/bmCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.bmCount(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/BackMoneyApi/backlist],methods=[POST]}" onto public void com.api.BackMoneyController.backlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/CommentApi/comment/list],methods=[POST]}" onto public void com.api.CommentController.commentList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/CommentApi/comment/replyEleme],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.CommentController.replyEleme(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/CommentApi/comment/shops],methods=[GET]}" onto public java.lang.Object com.api.CommentController.getBrandShops(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/CommentApi/comment/order],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.CommentController.showOrderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/GetGoodsInfoLists],methods=[POST]}" onto public void com.api.GiftController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/getPicAddress],methods=[GET]}" onto public java.lang.String com.api.GiftController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodAPI/goodReportDays],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyseDays(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodAPI/goodReportDaysExcel],methods=[POST]}" onto public void com.api.GoodController.getReportAnalyseDaysExcel(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/homeApi/exceptionOrderList],methods=[POST]}" onto public void com.api.HomeController.exceptionOrderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/homeApi/shopSelect],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.shopSelect(com.framework.mapping.system.CdsUsers) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/orderOntimeSelect],methods=[POST]}" onto public void com.api.OrderController.orderOntimeSelect(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/orderOntimeCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.orderTimeCount(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/order_count],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.orderDayCount(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/getOrderInfos],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfos(java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/getMtCookie],methods=[POST]}" onto public void com.api.PackController.getMtCookie(java.lang.String) 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:10:03] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(7)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:10:05] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(7)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Aug 17 11:09:59 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-17 11:10:05] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(7)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-08-17 11:10:06] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(7)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-17 11:10:06] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(7)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-52326-1502939406701-1:1,clientId=null,started=false} 
[INFO][2017-08-17 11:10:06] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-08-17 11:10:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(7)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-08-17 11:10:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(7)-127.0.0.1 参数1:site_options
 
[INFO][2017-08-17 11:10:08] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(7)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 9307 ms 
[WARN][2017-08-17 11:10:32] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-3 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[WARN][2017-08-17 11:10:32] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-1 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[WARN][2017-08-17 11:10:32] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-2 Resolved exception caused by Handler execution: com.framework.exception.NotLoginException: 您未登录系统或者登录已超时,请重新登录 
[INFO][2017-08-17 11:10:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-17 11:10:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:chenbin
 
[INFO][2017-08-17 11:10:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 11:10:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:351
参数2:1032
 
[INFO][2017-08-17 11:10:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 11:10:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:352
参数2:1032
 
[INFO][2017-08-17 11:10:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 11:10:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:375
参数2:1032
 
[INFO][2017-08-17 11:10:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 11:10:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:380
参数2:1032
 
[INFO][2017-08-17 11:10:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 11:10:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:353
参数2:1032
 
[INFO][2017-08-17 11:10:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 11:10:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:376
参数2:1032
 
[INFO][2017-08-17 11:10:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 11:10:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:372
参数2:1032
 
[INFO][2017-08-17 11:10:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 11:10:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:354
参数2:1032
 
[INFO][2017-08-17 11:10:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 11:10:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:355
参数2:1032
 
[INFO][2017-08-17 11:10:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 11:10:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:356
参数2:1032
 
[INFO][2017-08-17 11:10:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-17 11:10:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:0
 
[INFO][2017-08-17 11:10:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 11:10:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 11:10:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-17 11:10:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:0
参数2:2017-08-17
参数3:2017-08-17
参数4:0
参数5:2017-08-17
参数6:2017-08-17
参数7:0
参数8:2017-08-17
参数9:2017-08-17
参数10:0
参数11:2017-08-17
参数12:2017-08-17
参数13:0
参数14:2017-08-17
参数15:2017-08-17
参数16:0
参数17:2017-08-17
参数18:2017-08-17
参数19:0
参数20:2017-08-17
参数21:2017-08-17
参数22:0
参数23:2017-08-17
参数24:2017-08-17
参数25:0
参数26:2017-08-17
参数27:2017-08-17
 
[INFO][2017-08-17 11:10:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-17 11:10:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2017-08-17
参数2:2017-08-17
 
[INFO][2017-08-17 11:10:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 11:10:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 11:10:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-17 11:10:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2017-08-17
参数2:2017-08-17
参数3:0
参数4:2017-08-17
参数5:2017-08-17
参数6:0
参数7:2017-08-16
参数8:2017-08-16
参数9:0
参数10:2017-08-16
参数11:2017-08-16
参数12:0
参数13:2017-08-10
参数14:2017-08-10
参数15:0
 
[INFO][2017-08-17 11:10:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:10:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 11:11:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:11:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 11:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 11:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 11:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 11:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 11:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 11:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 11:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:11:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-17 11:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 11:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-17 11:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 11:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 11:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-17 11:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-17 11:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-17 11:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-17 11:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-17 11:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-17 11:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 11:11:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 11:11:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:11:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 11:11:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:11:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 11:11:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:11:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 11:11:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:11:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 11:11:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:11:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 11:11:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 11:11:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:11:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:11:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:11:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 11:11:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:11:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:11:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-17 11:11:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:11:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-17 11:11:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 11:11:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:11:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-17 11:11:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 11:11:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:11:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 11:11:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:11:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-17 11:11:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:11:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-17 11:11:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:11:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-17 11:11:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:11:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-17 11:11:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,b.stores_id from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
        order by a.listorder 
[INFO][2017-08-17 11:11:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:10
 
[INFO][2017-08-17 11:11:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:11:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-17 11:11:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,b.stores_id from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
        order by a.listorder 
[INFO][2017-08-17 11:11:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
参数2:10
 
[INFO][2017-08-17 11:11:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:11:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
参数2:10
 
[INFO][2017-08-17 11:11:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:11:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
参数2:10
 
[INFO][2017-08-17 11:11:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:11:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
参数2:10
 
[INFO][2017-08-17 11:11:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ) 
[INFO][2017-08-17 11:11:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
参数2:10
 
[INFO][2017-08-17 11:11:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:11:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:10
参数2:58
 
[INFO][2017-08-17 11:11:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 11:11:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:10
参数2:58
 
[INFO][2017-08-17 11:11:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:11:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:10
参数2:19
 
[INFO][2017-08-17 11:11:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-08-17 11:11:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:10
参数2:19
 
[INFO][2017-08-17 11:11:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:11:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
参数2:10
 
[INFO][2017-08-17 11:11:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:11:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
参数2:10
 
[INFO][2017-08-17 11:13:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:13:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-17 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-17 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-17 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-17 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:13:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-17 11:13:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:13:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-17 11:13:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:13:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-17 11:13:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:13:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-17 11:13:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,b.stores_id from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
        order by a.listorder 
[INFO][2017-08-17 11:13:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
参数2:10
 
[INFO][2017-08-17 11:13:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree: 
select (a.stores_class_id)as id ,(a.class_name)as text,'icon icon-367' as iconCls,b.stores_id from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id
         
         WHERE b.brand_id = ?

                
            
            
                
                    AND (
                         b.stores_id = ?
                      ) 
        order by a.listorder 
[INFO][2017-08-17 11:13:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
参数2:10
 
[INFO][2017-08-17 11:13:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:13:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
参数2:10
 
[INFO][2017-08-17 11:13:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:13:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
参数2:10
 
[INFO][2017-08-17 11:13:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-08-17 11:13:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
参数2:10
 
[INFO][2017-08-17 11:13:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-08-17 11:13:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:10
 
[INFO][2017-08-17 11:13:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:13:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:13:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:13:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 11:13:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 11:13:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 11:13:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 11:13:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 11:14:24] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Aug 17 11:09:59 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-17 11:14:24] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-17 11:14:25] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-08-17 11:14:25] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Thu Aug 17 11:09:55 CST 2017]; root of context hierarchy 
[INFO][2017-08-17 11:14:25] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-17 11:14:49] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-08-17 11:14:49] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Thu Aug 17 11:14:49 CST 2017]; root of context hierarchy 
[INFO][2017-08-17 11:14:49] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-08-17 11:14:50] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-08-17 11:14:50] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-08-17 11:14:50] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-08-17 11:14:52] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-17 11:14:52] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 2855 ms 
[INFO][2017-08-17 11:14:52] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-08-17 11:14:52] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Aug 17 11:14:52 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-17 11:14:52] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-08-17 11:14:54] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/emp/downFile]}" onto public void com.framework.controller.ExpController.downFile() throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/emp/getCreateProgress]}" onto public void com.framework.controller.ExpController.getCreateProgress() throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/emp/expCurrentPage]}" onto private void com.framework.controller.ExpController.responseExcelPage(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model,java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/order_day],methods=[GET]}" onto public java.lang.String com.controller.ClientController.order_day() 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_day],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_day() 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/order_ontime],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderOnTime() 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/refund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.refund() 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/historyRefund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.historyRefund() 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/exception_orderlist/{action}],methods=[GET]}" onto public java.lang.String com.controller.ClientController.exception_orderlist(java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/commentList],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.commentList() throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getClassName(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree() throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoodList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoodList(java.util.HashMap) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index2() throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresCombobox() throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree2],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree2() throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/classIndex2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.classIndex2() throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClassList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClassList(java.util.HashMap) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getBrandCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getBrandCombobox() throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresClass],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresClass(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTreeLazy],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getClassTreeLazy(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGood(java.util.HashMap) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/edit],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.edit(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStandardGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStandardGood(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/editErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.editErp(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleErp(java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/editStandard],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.editStandard(java.util.HashMap) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteStandard],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteStandard(java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.updateGood(java.util.HashMap) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassCombobox(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGood(java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/validateLoginText],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLoginText() 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/reminderHf],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderHf(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/cdCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.cdCount() 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/validateLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLogin() 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/reminderLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderLogin(java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/indexCd],methods=[GET]}" onto public java.lang.String com.controller.ReminderController.indexCd() throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/MtText],methods=[POST]}" onto public void com.controller.ReminderController.MtText() 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/geReminderList],methods=[POST]}" onto public void com.controller.ReminderController.geReminderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.toggle(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/setStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.setStatus(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.deleteGood(java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addErpGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addErpGood(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addMeal(com.framework.mapping.system.CdsChufanMeal,java.lang.String) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addTask(com.framework.mapping.system.CdsChufanTask) 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.getChuFanTask(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:55] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getErpGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/refund],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.refund(java.util.HashMap) 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/historybacklist],methods=[POST]}" onto public void com.api.BackMoneyController.historybacklist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/bmCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.bmCount(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/backlist],methods=[POST]}" onto public void com.api.BackMoneyController.backlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/CommentApi/comment/list],methods=[POST]}" onto public void com.api.CommentController.commentList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/CommentApi/comment/replyEleme],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.CommentController.replyEleme(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/CommentApi/comment/shops],methods=[GET]}" onto public java.lang.Object com.api.CommentController.getBrandShops(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/CommentApi/comment/order],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.CommentController.showOrderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getPicAddress],methods=[GET]}" onto public java.lang.String com.api.GiftController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/GetGoodsInfoLists],methods=[POST]}" onto public void com.api.GiftController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReportDays],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyseDays(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReportDaysExcel],methods=[POST]}" onto public void com.api.GoodController.getReportAnalyseDaysExcel(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/exceptionOrderList],methods=[POST]}" onto public void com.api.HomeController.exceptionOrderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/shopSelect],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.shopSelect(com.framework.mapping.system.CdsUsers) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderOntimeSelect],methods=[POST]}" onto public void com.api.OrderController.orderOntimeSelect(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderOntimeCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.orderTimeCount(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/order_count],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.orderDayCount(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfos],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfos(java.lang.String) 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getMtCookie],methods=[POST]}" onto public void com.api.PackController.getMtCookie(java.lang.String) 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:14:56] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:14:57] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Aug 17 11:14:52 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-17 11:14:57] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-08-17 11:14:57] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-17 11:14:57] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-52744-1502939697516-1:1,clientId=null,started=false} 
[INFO][2017-08-17 11:14:57] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-08-17 11:14:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-08-17 11:14:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-08-17 11:14:58] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 5472 ms 
[INFO][2017-08-17 11:15:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-17 11:15:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:chenbin
 
[INFO][2017-08-17 11:15:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 11:15:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:351
参数2:1032
 
[INFO][2017-08-17 11:15:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 11:15:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:352
参数2:1032
 
[INFO][2017-08-17 11:15:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 11:15:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:375
参数2:1032
 
[INFO][2017-08-17 11:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 11:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:380
参数2:1032
 
[INFO][2017-08-17 11:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 11:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:353
参数2:1032
 
[INFO][2017-08-17 11:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 11:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:376
参数2:1032
 
[INFO][2017-08-17 11:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 11:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:372
参数2:1032
 
[INFO][2017-08-17 11:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 11:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:354
参数2:1032
 
[INFO][2017-08-17 11:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 11:15:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:355
参数2:1032
 
[INFO][2017-08-17 11:15:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 11:15:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:356
参数2:1032
 
[INFO][2017-08-17 11:15:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-17 11:15:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:0
 
[INFO][2017-08-17 11:15:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 11:15:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 11:15:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 11:15:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 11:15:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-17 11:15:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2017-08-17
参数2:2017-08-17
 
[INFO][2017-08-17 11:15:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-17 11:15:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:0
参数2:2017-08-17
参数3:2017-08-17
参数4:0
参数5:2017-08-17
参数6:2017-08-17
参数7:0
参数8:2017-08-17
参数9:2017-08-17
参数10:0
参数11:2017-08-17
参数12:2017-08-17
参数13:0
参数14:2017-08-17
参数15:2017-08-17
参数16:0
参数17:2017-08-17
参数18:2017-08-17
参数19:0
参数20:2017-08-17
参数21:2017-08-17
参数22:0
参数23:2017-08-17
参数24:2017-08-17
参数25:0
参数26:2017-08-17
参数27:2017-08-17
 
[INFO][2017-08-17 11:15:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-17 11:15:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2017-08-17
参数2:2017-08-17
参数3:0
参数4:2017-08-17
参数5:2017-08-17
参数6:0
参数7:2017-08-16
参数8:2017-08-16
参数9:0
参数10:2017-08-16
参数11:2017-08-16
参数12:0
参数13:2017-08-10
参数14:2017-08-10
参数15:0
 
[INFO][2017-08-17 11:15:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:15:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 11:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 11:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 11:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 11:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 11:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 11:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 11:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 11:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 11:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 11:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 11:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 11:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:15:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-17 11:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-17 11:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-17 11:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-17 11:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-17 11:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-17 11:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 11:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 11:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-17 11:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:15:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-17 11:15:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:15:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:9
 
[INFO][2017-08-17 11:15:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:15:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:9
 
[INFO][2017-08-17 11:15:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:15:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:10
 
[INFO][2017-08-17 11:15:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:15:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:10
 
[INFO][2017-08-17 11:15:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:15:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:12
 
[INFO][2017-08-17 11:15:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:15:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:12
 
[INFO][2017-08-17 11:15:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:15:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:13
 
[INFO][2017-08-17 11:15:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:15:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:13
 
[INFO][2017-08-17 11:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-08-17 11:15:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
参数2:13
 
[INFO][2017-08-17 11:15:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:15:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:10
 
[INFO][2017-08-17 11:15:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-08-17 11:15:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:13
 
[INFO][2017-08-17 11:15:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:15:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:10
 
[INFO][2017-08-17 11:15:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-08-17 11:15:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
参数2:10
 
[INFO][2017-08-17 11:15:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-08-17 11:15:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:10
 
[INFO][2017-08-17 11:16:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:16:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:9
 
[INFO][2017-08-17 11:16:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 11:16:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 11:16:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:16:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:9
 
[INFO][2017-08-17 11:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 11:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 11:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 11:16:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:16:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-17 11:16:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:0
参数2:2017-08-17
参数3:2017-08-17
参数4:0
参数5:2017-08-17
参数6:2017-08-17
参数7:0
参数8:2017-08-17
参数9:2017-08-17
参数10:0
参数11:2017-08-17
参数12:2017-08-17
参数13:0
参数14:2017-08-17
参数15:2017-08-17
参数16:0
参数17:2017-08-17
参数18:2017-08-17
参数19:0
参数20:2017-08-17
参数21:2017-08-17
参数22:0
参数23:2017-08-17
参数24:2017-08-17
参数25:0
参数26:2017-08-17
参数27:2017-08-17
 
[INFO][2017-08-17 11:16:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-17 11:16:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2017-08-17
参数2:2017-08-17
 
[INFO][2017-08-17 11:16:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 11:16:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:16:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-17 11:16:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2017-08-17
参数2:2017-08-17
参数3:0
参数4:2017-08-17
参数5:2017-08-17
参数6:0
参数7:2017-08-16
参数8:2017-08-16
参数9:0
参数10:2017-08-16
参数11:2017-08-16
参数12:0
参数13:2017-08-10
参数14:2017-08-10
参数15:0
 
[INFO][2017-08-17 11:16:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-17 11:16:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:0
参数2:2017-08-17
参数3:2017-08-17
参数4:0
参数5:2017-08-17
参数6:2017-08-17
参数7:0
参数8:2017-08-17
参数9:2017-08-17
参数10:0
参数11:2017-08-17
参数12:2017-08-17
参数13:0
参数14:2017-08-17
参数15:2017-08-17
参数16:0
参数17:2017-08-17
参数18:2017-08-17
参数19:0
参数20:2017-08-17
参数21:2017-08-17
参数22:0
参数23:2017-08-17
参数24:2017-08-17
参数25:0
参数26:2017-08-17
参数27:2017-08-17
 
[INFO][2017-08-17 11:16:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-17 11:16:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2017-08-17
参数2:2017-08-17
 
[INFO][2017-08-17 11:16:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-17 11:16:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2017-08-17
参数2:2017-08-17
参数3:0
参数4:2017-08-17
参数5:2017-08-17
参数6:0
参数7:2017-08-16
参数8:2017-08-16
参数9:0
参数10:2017-08-16
参数11:2017-08-16
参数12:0
参数13:2017-08-10
参数14:2017-08-10
参数15:0
 
[INFO][2017-08-17 11:16:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:16:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 11:16:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:16:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 11:16:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:16:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-17 11:16:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:16:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-17 11:16:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:16:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 11:16:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:16:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-17 11:16:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:16:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-17 11:16:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:16:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 11:16:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:16:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 11:16:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:16:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-17 11:16:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:16:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-17 11:16:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:16:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-17 11:16:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:16:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-17 11:16:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:16:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:17:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:17:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 11:17:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 11:17:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 11:17:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 11:17:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 11:17:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 11:17:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:17:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 11:17:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:21:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 11:21:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 11:21:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 11:21:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1032
 
[INFO][2017-08-17 11:21:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 11:21:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:22:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:22:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 11:22:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:22:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 11:22:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:22:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:22:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 11:22:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 11:22:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:22:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:22:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:22:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:22:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 11:22:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 11:22:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 11:22:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 11:22:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:22:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:22:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-17 11:22:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-17 11:22:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 11:22:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 11:22:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:22:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-17 11:22:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:22:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 11:22:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:22:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-17 11:22:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:22:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-17 11:22:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:22:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-17 11:22:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:22:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-17 11:22:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 11:22:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 11:22:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:22:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-17 11:22:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:22:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:9
 
[INFO][2017-08-17 11:22:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:22:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:9
 
[INFO][2017-08-17 11:22:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:22:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:9
 
[INFO][2017-08-17 11:22:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:22:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:9
 
[INFO][2017-08-17 11:22:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:22:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:9
 
[INFO][2017-08-17 11:22:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:22:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:9
 
[INFO][2017-08-17 11:22:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:22:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:9
 
[INFO][2017-08-17 11:22:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:22:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:9
 
[INFO][2017-08-17 11:22:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:22:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
 
[INFO][2017-08-17 11:22:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:22:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
 
[INFO][2017-08-17 11:22:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:22:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
 
[INFO][2017-08-17 11:22:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:22:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
 
[INFO][2017-08-17 11:22:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:22:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
 
[INFO][2017-08-17 11:22:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:22:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
 
[INFO][2017-08-17 11:22:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:22:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
参数2:9
 
[INFO][2017-08-17 11:22:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-08-17 11:22:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
参数2:9
 
[INFO][2017-08-17 11:22:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:22:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
参数2:9
 
[INFO][2017-08-17 11:22:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-08-17 11:22:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
参数2:9
 
[INFO][2017-08-17 11:22:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:22:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
参数2:9
 
[INFO][2017-08-17 11:22:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-08-17 11:22:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
参数2:9
 
[INFO][2017-08-17 11:22:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:22:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
参数2:9
 
[INFO][2017-08-17 11:22:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-08-17 11:22:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
参数2:9
 
[INFO][2017-08-17 11:22:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:22:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:9
 
[INFO][2017-08-17 11:22:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:22:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:9
 
[INFO][2017-08-17 11:22:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:22:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:9
 
[INFO][2017-08-17 11:22:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:22:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:9
 
[INFO][2017-08-17 11:22:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:22:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:9
 
[INFO][2017-08-17 11:22:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:22:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:9
 
[INFO][2017-08-17 11:22:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:22:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
 
[INFO][2017-08-17 11:22:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:22:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
 
[INFO][2017-08-17 11:22:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:22:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
 
[INFO][2017-08-17 11:22:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:22:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
 
[INFO][2017-08-17 11:22:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:22:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
 
[INFO][2017-08-17 11:22:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:22:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
 
[INFO][2017-08-17 11:22:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:22:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:9
 
[INFO][2017-08-17 11:22:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:22:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:9
 
[INFO][2017-08-17 11:22:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:22:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:10
 
[INFO][2017-08-17 11:22:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:22:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:10
 
[INFO][2017-08-17 11:22:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:22:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:10
 
[INFO][2017-08-17 11:22:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:22:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:10
 
[INFO][2017-08-17 11:22:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:22:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:9
 
[INFO][2017-08-17 11:22:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:22:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:9
 
[INFO][2017-08-17 11:22:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:22:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
参数2:9
 
[INFO][2017-08-17 11:22:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-08-17 11:22:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
参数2:9
 
[INFO][2017-08-17 11:22:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:22:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:9
 
[INFO][2017-08-17 11:22:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-08-17 11:22:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:9
 
[INFO][2017-08-17 11:22:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:22:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:9
 
[INFO][2017-08-17 11:22:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:22:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:9
 
[INFO][2017-08-17 11:22:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:22:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
 
[INFO][2017-08-17 11:22:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:22:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
 
[INFO][2017-08-17 11:22:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:22:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:10
 
[INFO][2017-08-17 11:22:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:22:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:10
 
[INFO][2017-08-17 11:22:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:22:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:10
 
[INFO][2017-08-17 11:22:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:22:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:10
 
[INFO][2017-08-17 11:23:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:23:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 11:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 11:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 11:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 11:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 11:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 11:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 11:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 11:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 11:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-17 11:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-17 11:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-17 11:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 11:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-17 11:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-17 11:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:23:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-17 11:23:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 11:23:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:23:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:23:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-17 11:23:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:23:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-17 11:23:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:23:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:9
 
[INFO][2017-08-17 11:23:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:23:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:9
 
[INFO][2017-08-17 11:23:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:23:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:10
 
[INFO][2017-08-17 11:23:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:23:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:10
 
[INFO][2017-08-17 11:23:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:23:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:10
 
[INFO][2017-08-17 11:23:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:23:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:10
 
[INFO][2017-08-17 11:23:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:23:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:10
 
[INFO][2017-08-17 11:23:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:23:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:10
 
[INFO][2017-08-17 11:23:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:23:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:12
 
[INFO][2017-08-17 11:23:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:23:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:12
 
[INFO][2017-08-17 11:23:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:23:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:12
 
[INFO][2017-08-17 11:23:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:23:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:12
 
[INFO][2017-08-17 11:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:11
 
[INFO][2017-08-17 11:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 6 
[INFO][2017-08-17 11:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:11
 
[INFO][2017-08-17 11:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:11
 
[INFO][2017-08-17 11:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 6 
[INFO][2017-08-17 11:23:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:11
 
[INFO][2017-08-17 11:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:12
 
[INFO][2017-08-17 11:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:24:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:12
 
[INFO][2017-08-17 11:25:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:25:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 11:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 11:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 11:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 11:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 11:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 11:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 11:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 11:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 11:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-17 11:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-17 11:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-17 11:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-17 11:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-17 11:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-17 11:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-17 11:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 11:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:25:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-17 11:25:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:25:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:9
 
[INFO][2017-08-17 11:25:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:25:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:9
 
[INFO][2017-08-17 11:25:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:25:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:10
 
[INFO][2017-08-17 11:25:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:25:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:10
 
[INFO][2017-08-17 11:25:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:25:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:10
 
[INFO][2017-08-17 11:25:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:25:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:10
 
[INFO][2017-08-17 11:25:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:25:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:9
 
[INFO][2017-08-17 11:25:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:25:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:9
 
[INFO][2017-08-17 11:25:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:25:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:13
 
[INFO][2017-08-17 11:25:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:25:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:13
 
[INFO][2017-08-17 11:25:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:25:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:12
 
[INFO][2017-08-17 11:25:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:25:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:12
 
[INFO][2017-08-17 11:25:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:25:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:11
 
[INFO][2017-08-17 11:25:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 6 
[INFO][2017-08-17 11:25:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:11
 
[INFO][2017-08-17 11:25:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:25:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:12
 
[INFO][2017-08-17 11:25:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:25:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:12
 
[INFO][2017-08-17 11:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:11
 
[INFO][2017-08-17 11:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 6 
[INFO][2017-08-17 11:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:11
 
[INFO][2017-08-17 11:25:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:25:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:10
 
[INFO][2017-08-17 11:25:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:25:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:10
 
[INFO][2017-08-17 11:25:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:25:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:9
 
[INFO][2017-08-17 11:25:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:25:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:9
 
[INFO][2017-08-17 11:25:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:25:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:10
 
[INFO][2017-08-17 11:25:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:25:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:10
 
[INFO][2017-08-17 11:25:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:25:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:10
 
[INFO][2017-08-17 11:25:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:25:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:10
 
[INFO][2017-08-17 11:25:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:25:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:10
 
[INFO][2017-08-17 11:25:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:25:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:10
 
[INFO][2017-08-17 11:25:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:25:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
 
[INFO][2017-08-17 11:25:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:25:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
 
[INFO][2017-08-17 11:25:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:25:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:9
 
[INFO][2017-08-17 11:25:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:25:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:9
 
[INFO][2017-08-17 11:25:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:25:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:10
 
[INFO][2017-08-17 11:25:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:25:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:10
 
[INFO][2017-08-17 11:26:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:26:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:9
 
[INFO][2017-08-17 11:26:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:26:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:9
 
[INFO][2017-08-17 11:26:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-17 11:26:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-17 11:26:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:26:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:26:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:26:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 11:26:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-08-17 11:26:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
参数2:9
 
[INFO][2017-08-17 11:26:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-17 11:26:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-17 11:26:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-17 11:26:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-17 11:26:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-08-17 11:26:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
 
[INFO][2017-08-17 11:26:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE good_name = ?
            and
                stores_class_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-08-17 11:26:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:大米1
参数2:29
 
[INFO][2017-08-17 11:26:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.updateRecord: 
UPDATE cds_stores_goods_list
         SET stores_id = ?
            ,
                good_id = ?
            ,
                brand_id = ?
            ,
                good_number = ?
            ,
                type = ?
            ,
                elem_count = ?
            ,
                mt_count = ?
            ,
                wx_count = ?
            ,
                box_count = ?
            ,
                status = ?
            ,
                box_price = ?
            ,
                market_price = ?
            ,
                unit = ?
            ,
                default_standrad_id = ?
            ,
                isdefault = ?
            ,
                all_count = ?
            ,
                stores_brand_id = ?
            ,
                food_id = ?
            ,
                mt_isband = ?
            ,
                mt_image_hash = ?
            ,
                image_hash = ?
            ,
                good_name = ?
            ,
                good_pic = ?
            ,
                egood_pic = ?
            ,
                good_info = ?
            ,
                listorder = ?
            ,
                stores_class_id = ? 
         WHERE sgl_id = ? 
[INFO][2017-08-17 11:26:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
参数2:0
参数3:0
参数4:0
参数5:0
参数6:0
参数7:0
参数8:0
参数9:0
参数10:1
参数11:0.0
参数12:0.0
参数13:null
参数14:0
参数15:null
参数16:0
参数17:9
参数18:null
参数19:null
参数20:null
参数21:null
参数22:大米1
参数23:1
参数24:1
参数25:少时诵诗书
参数26:0
参数27:29
参数28:1
 
[INFO][2017-08-17 11:26:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:26:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:9
 
[INFO][2017-08-17 11:26:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:26:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:9
 
[INFO][2017-08-17 11:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-17 11:26:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-17 11:26:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:26:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 11:26:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:26:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 11:26:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-08-17 11:26:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
参数2:9
 
[INFO][2017-08-17 11:26:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-17 11:26:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-17 11:26:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-17 11:26:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-17 11:26:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 11:26:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 11:26:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 11:26:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1032
 
[INFO][2017-08-17 11:26:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 11:26:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 11:26:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-08-17 11:26:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:9
 
[INFO][2017-08-17 11:27:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:27:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 11:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 11:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 11:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 11:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 11:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 11:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 11:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 11:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 11:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 11:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-17 11:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-17 11:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 11:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-17 11:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:27:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-17 11:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 11:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 11:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-17 11:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-17 11:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-17 11:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-17 11:27:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:27:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
 
[INFO][2017-08-17 11:27:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:27:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
 
[INFO][2017-08-17 11:27:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:27:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:10
 
[INFO][2017-08-17 11:27:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:27:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:10
 
[INFO][2017-08-17 11:27:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:27:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:11
 
[INFO][2017-08-17 11:27:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 6 
[INFO][2017-08-17 11:27:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:11
 
[INFO][2017-08-17 11:27:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:27:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:10
 
[INFO][2017-08-17 11:27:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:27:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:10
 
[INFO][2017-08-17 11:27:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:27:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:9
 
[INFO][2017-08-17 11:27:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:27:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:9
 
[INFO][2017-08-17 11:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:11
 
[INFO][2017-08-17 11:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 6 
[INFO][2017-08-17 11:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:11
 
[INFO][2017-08-17 11:27:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:27:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:10
 
[INFO][2017-08-17 11:27:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:27:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:10
 
[INFO][2017-08-17 11:27:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:27:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:10
 
[INFO][2017-08-17 11:27:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:27:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:10
 
[INFO][2017-08-17 11:27:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:27:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:10
 
[INFO][2017-08-17 11:27:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:27:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:10
 
[INFO][2017-08-17 11:27:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:27:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:10
 
[INFO][2017-08-17 11:27:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:27:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:10
 
[INFO][2017-08-17 11:27:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:27:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:11
 
[INFO][2017-08-17 11:27:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 6 
[INFO][2017-08-17 11:27:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:11
 
[INFO][2017-08-17 11:27:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:27:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:11
 
[INFO][2017-08-17 11:27:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 6 
[INFO][2017-08-17 11:27:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:11
 
[INFO][2017-08-17 11:27:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:27:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:11
 
[INFO][2017-08-17 11:27:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 6 
[INFO][2017-08-17 11:27:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:11
 
[INFO][2017-08-17 11:27:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:27:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:11
 
[INFO][2017-08-17 11:27:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 6 
[INFO][2017-08-17 11:27:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:11
 
[INFO][2017-08-17 11:27:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:27:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:12
 
[INFO][2017-08-17 11:27:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:27:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:12
 
[INFO][2017-08-17 11:27:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:27:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:12
 
[INFO][2017-08-17 11:27:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:27:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:12
 
[INFO][2017-08-17 11:27:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:27:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:14
 
[INFO][2017-08-17 11:27:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:27:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:14
 
[INFO][2017-08-17 11:27:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:27:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:14
 
[INFO][2017-08-17 11:27:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:27:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:14
 
[INFO][2017-08-17 11:27:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:27:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:14
 
[INFO][2017-08-17 11:27:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:27:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:14
 
[INFO][2017-08-17 11:27:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:27:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:14
 
[INFO][2017-08-17 11:27:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:27:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:14
 
[INFO][2017-08-17 11:27:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:27:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:13
 
[INFO][2017-08-17 11:27:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:27:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:13
 
[INFO][2017-08-17 11:27:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:27:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:13
 
[INFO][2017-08-17 11:27:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:27:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:13
 
[INFO][2017-08-17 11:27:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:27:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:12
 
[INFO][2017-08-17 11:27:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:27:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:12
 
[INFO][2017-08-17 11:27:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:27:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:12
 
[INFO][2017-08-17 11:27:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:27:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:12
 
[INFO][2017-08-17 11:27:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:27:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:10
 
[INFO][2017-08-17 11:27:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:27:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:10
 
[INFO][2017-08-17 11:27:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:27:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:10
 
[INFO][2017-08-17 11:27:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:27:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:10
 
[INFO][2017-08-17 11:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 11:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 11:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 11:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-17 11:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 11:31:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 11:31:38] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Aug 17 11:14:52 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-17 11:31:38] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-17 11:31:39] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:203) localhost-startStop-2 Shutting down ExecutorService 'taskExecutor' 
[INFO][2017-08-17 11:31:39] org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:987) localhost-startStop-2 Closing Root WebApplicationContext: startup date [Thu Aug 17 11:14:49 CST 2017]; root of context hierarchy 
[INFO][2017-08-17 11:31:39] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:356) localhost-startStop-2 Stopping beans in phase 2147483647 
[INFO][2017-08-17 11:31:53] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:305) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization started 
[INFO][2017-08-17 11:31:53] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing Root WebApplicationContext: startup date [Thu Aug 17 11:31:53 CST 2017]; root of context hierarchy 
[INFO][2017-08-17 11:31:53] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/datasource-configurer.xml] 
[INFO][2017-08-17 11:31:54] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/ActiveMQ.xml] 
[INFO][2017-08-17 11:31:54] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/redis.xml] 
[INFO][2017-08-17 11:31:54] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172) RMI TCP Connection(3)-127.0.0.1 Loading properties file from ServletContext resource [/WEB-INF/jdbc_sqlserver.properties] 
[INFO][2017-08-17 11:31:56] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-17 11:31:56] org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:345) RMI TCP Connection(3)-127.0.0.1 Root WebApplicationContext: initialization completed in 3032 ms 
[INFO][2017-08-17 11:31:56] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:489) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization started 
[INFO][2017-08-17 11:31:56] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582) RMI TCP Connection(3)-127.0.0.1 Refreshing WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Aug 17 11:31:56 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-17 11:31:56] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) RMI TCP Connection(3)-127.0.0.1 Loading XML bean definitions from ServletContext resource [/WEB-INF/core-controller-servlet.xml] 
[INFO][2017-08-17 11:31:58] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:165) RMI TCP Connection(3)-127.0.0.1 Initializing ExecutorService  'taskExecutor' 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/emp/downFile]}" onto public void com.framework.controller.ExpController.downFile() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/emp/getCreateProgress]}" onto public void com.framework.controller.ExpController.getCreateProgress() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/emp/expCurrentPage]}" onto private void com.framework.controller.ExpController.responseExcelPage(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/CdsOutside]}" onto public java.util.Map com.controller.ApiServerController.CdsOutside(java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveElemeOrder]}" onto public java.lang.String com.controller.ApiServerController.ReceiveElemeOrder(com.opensdk.eleme.vo.MessageParam) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderPay() 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderConfrim]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderConfrim() 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderFulfillment]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderFulfillment() 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderCancel]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderCancel() 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack() 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrdersendstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrdersendstatus() 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderBack2]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderBack2() 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderSettlement]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderSettlement() 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveMeiruanOrderShopstatus]}" onto public java.lang.String com.controller.ApiServerController.ReceiveMeiruanOrderShopstatus() 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ApiServer/ReceiveBaiduOrderPay]}" onto public java.lang.String com.controller.ApiServerController.ReceiveBaiduOrderPay(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/print],methods=[GET]}" onto public java.lang.String com.controller.ClientController.print() 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment() 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/home],methods=[GET]}" onto public java.lang.String com.controller.ClientController.home(org.springframework.ui.Model,java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/doorderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.doorderlist() 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/business_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.business_data() 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_data() 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_analyse],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_analyse() 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/order_day],methods=[GET]}" onto public java.lang.String com.controller.ClientController.order_day() 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/good_day],methods=[GET]}" onto public java.lang.String com.controller.ClientController.good_day() 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/order_ontime],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderOnTime() 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report1],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report1() 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/report2],methods=[GET]}" onto public java.lang.String com.controller.ClientController.report2() 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/comment_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.comment_data() 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/member_data],methods=[GET]}" onto public java.lang.String com.controller.ClientController.member_data() 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/pack_job],methods=[GET]}" onto public java.lang.String com.controller.ClientController.pack_job() 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/refund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.refund() 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/historyRefund],methods=[GET]}" onto public java.lang.String com.controller.ClientController.historyRefund() 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlist() 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.orderlisthistory() 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlist() 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlist],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlist() 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/exception_orderlist/{action}],methods=[GET]}" onto public java.lang.String com.controller.ClientController.exception_orderlist(java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/all_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.all_orderlisthistory() 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Client/shop_orderlisthistory],methods=[GET]}" onto public java.lang.String com.controller.ClientController.shop_orderlisthistory() 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveScenner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveScenner(com.framework.mapping.system.CdsScanner,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/giftlist],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.giftlist() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/business],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.business() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.toggle(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetDianwodaList],methods=[POST]}" onto public void com.controller.ClientSetController.GetDianwodaList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/erp],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.erp() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/password_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.password_set() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_task_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_task_set() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scnnerToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.scnnerToggle(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveDianwoda(com.framework.mapping.system.CdsDianwodaPhone,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyDianwoda],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyDianwoda(com.framework.mapping.system.CdsDianwodaPhone) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyScanner],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyScanner(com.framework.mapping.system.CdsScanner) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetPrintList],methods=[POST]}" onto public void com.controller.ClientSetController.print_set(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/print_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.print_set() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePassword],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePassword(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/dianwoda_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.dianwoda_set() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/savePrint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.savePrint(com.framework.mapping.system.CdsPrints,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetScannerList],methods=[POST]}" onto public void com.controller.ClientSetController.GetScannerList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyprint],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyprint(com.framework.mapping.system.CdsPrints) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/goodsManage],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.goodsManage() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/cf_meal_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.cf_meal_set() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/scanner_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.scanner_set() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronic_set],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.electronic_set() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/commentList],methods=[GET]}" onto public java.lang.String com.controller.ClientSetController.commentList() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/GetElectronicScaleList],methods=[POST]}" onto public void com.controller.ClientSetController.GetElectronicScaleList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/saveElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.saveElectronicScale(com.framework.mapping.system.CdsElectronicScale,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/destroyElectronicScale],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.destroyElectronicScale(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ClientSet/electronicScaleToggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ClientSetController.electronicScaleToggle(com.framework.mapping.system.CdsElectronicScale) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Code/index]}" onto public void com.controller.CodeController.index(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus_bak]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus_bak() 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/DianWoDan/OrderStatus]}" onto public java.lang.String com.controller.DianWoDanController.OrderStatus() 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/index],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.index() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.getUserName(java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErp(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveMsGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveMsGoods(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/GetErpGoodsLists],methods=[POST]}" onto public void com.controller.ErpGoodsController.GetErpGoodsLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.saveErp(java.util.HashMap,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/userIndex],methods=[GET]}" onto public java.lang.String com.controller.ErpGoodsController.userIndex(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/getUserList],methods=[POST]}" onto public void com.controller.ErpGoodsController.getUserList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/MsGoods/updateErpCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ErpGoodsController.updateErpCount(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/index],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.index() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/checkName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.checkName(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveErp(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getSigna],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.getSigna() 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/classIndex],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.classIndex() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoErp],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetErpInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo2(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/updateGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.updateGoodsInfo(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsClass(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/saveGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.GoodsInfoController.saveGoodsInfo(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/getPicAddress],methods=[GET]}" onto public java.lang.String com.controller.GoodsInfoController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.GoodsInfoController.GetBrandTree() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsInfoLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodsInfo/GetGoodsClassLists],methods=[POST]}" onto public void com.controller.GoodsInfoController.GetGoodsClassLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/LoginVerify]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.LoginVerify(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLogin]}" onto public java.lang.String com.controller.LoginController.userLogin() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLoginVerify]}" onto public java.lang.String com.controller.LoginController.adminLoginVerify(com.framework.mapping.system.SysUser,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/adminLogin]}" onto public java.lang.String com.controller.LoginController.adminLogin() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/isLogon]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.isLogon() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginOut]}" onto public java.lang.String com.controller.LoginController.userLoginOut() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userExitOut]}" onto public com.framework.mapping.JsonMessage com.controller.LoginController.userExitOut() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/login/userLoginVerify]}" onto public java.lang.String com.controller.LoginController.userLoginVerify(com.framework.mapping.system.CdsUsers,org.springframework.ui.ModelMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/main/index],methods=[GET]}" onto public java.lang.String com.controller.MainController.index() 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassName],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getClassName(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/index2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.index2() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetBrandTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetBrandTree(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoodList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoodList(java.util.HashMap) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetGoodsTree() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.GetStoresTree() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/queryGoods],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.queryGoods() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStoresClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStoresClass(java.util.HashMap) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteMT(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindMT],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindMT(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemClassList],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getElemClassList(java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteElem(java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/reverseBindElem],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.reverseBindElem(java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBind(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/sellStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.sellStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteClass(java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGood_ids],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getGood_ids(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getCombobox(java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGoods(java.util.HashMap) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGoods(java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexPt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexPt(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexElem],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexElem(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getElemGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getElemGood(java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/elemBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.elemBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleUpdateFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleUpdateFood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleDeleteFood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleDeleteFood(java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/indexMt],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.indexMt(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtBandGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtBandGood(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtDeleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtDeleteGood(java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getMtGoodTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getMtGoodTree(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/checkBindMt],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.checkBindMt(java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTree2],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassTree2() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/classIndex2],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.classIndex2() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveClassList],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveClassList(java.util.HashMap) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getBrandCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getBrandCombobox() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresClass],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresClass(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassTreeLazy],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getClassTreeLazy(java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveGood(java.util.HashMap) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/edit],methods=[GET]}" onto public java.lang.String com.controller.PtGoodManageController.edit(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStandardGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.getStandardGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/saveStandardGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.saveStandardGood(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/editErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.editErp(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleErp],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleErp(java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/editStandard],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.editStandard(java.util.HashMap) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteStandard],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteStandard(java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.updateGood(java.util.HashMap) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getClassCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getClassCombobox(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.deleteGood(java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetStoresGoodsList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetStoresGoodsList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/updateStoresGoods],methods=[POST]}" onto public void com.controller.PtGoodManageController.updateStoresGoods(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/GetGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.GetGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindUpdate],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindUpdate(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindQuery(java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleGoodClassBindDelete],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.eleGoodClassBindDelete(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/meituanClassQuery],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.meituanClassQuery(java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassRemoveBind],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.mtClassRemoveBind(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresGoodsClass],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.PtGoodManageController.getStoresGoodsClass(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/eleClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.eleClassGoodsQuery(java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/mtClassGoodsQuery],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.PtGoodManageController.mtClassGoodsQuery(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getGoodsClassList],methods=[POST]}" onto public void com.controller.PtGoodManageController.getGoodsClassList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/PtGoodsManage/getStoresCombobox],methods=[POST]}" onto public java.util.List com.controller.PtGoodManageController.getStoresCombobox() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/indexCd],methods=[GET]}" onto public java.lang.String com.controller.ReminderController.indexCd() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/validateLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLogin() 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/MtText],methods=[POST]}" onto public void com.controller.ReminderController.MtText() 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/reminderHf],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderHf(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/reminderLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.reminderLogin(java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/cdCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.cdCount() 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/geReminderList],methods=[POST]}" onto public void com.controller.ReminderController.geReminderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Reminder/validateLoginText],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.ReminderController.validateLoginText() 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_grid],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_grid() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/validateStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.validateStores(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveBrand],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveBrand(java.util.HashMap,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/GetStoresList],methods=[POST]}" onto public void com.controller.StoresController.GetStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/storesbrand_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.storesbrand_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStores(com.framework.mapping.system.CdsBrand,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_list],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_list(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login],methods=[GET]}" onto public java.lang.String com.controller.StoresController.stores_login() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/saveStoresLogin],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.saveStoresLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getCityStores],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.getCityStores(java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/getstoresBrandList2],methods=[POST]}" onto public void com.controller.StoresController.getstoresBrandList2(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindQuery(java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/meituanstoresBindQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.meituanstoresBindQuery(java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresModeQuery],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresModeQuery(java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/elestoresBindMode],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.elestoresBindMode(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/stores_login_grid],methods=[POST]}" onto public void com.controller.StoresController.stores_login_grid(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Stores/updateDispatchExtinfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresController.updateDispatchExtinfo(java.lang.String,java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresGoodsManageController.index() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresGoodsManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresGoodsManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/index],methods=[GET]}" onto public java.lang.String com.controller.StoresManageController.index() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getStoresList],methods=[POST]}" onto public void com.controller.StoresManageController.getStoresList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getProvince],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getProvince() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresManage/getCity],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresManageController.getCity(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/index],methods=[GET]}" onto public java.lang.String com.controller.StoresPrinterController.index() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/setStatus],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.setStatus(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/toggle],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.toggle(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/deleteGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.deleteGood(java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getErpGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addErpGood],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addErpGood(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addTask(com.framework.mapping.system.CdsChufanTask) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanMeal],methods=[POST]}" onto public java.util.List<com.alibaba.fastjson.JSONObject> com.controller.StoresPrinterController.getChuFanMeal(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/addMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.addMeal(com.framework.mapping.system.CdsChufanMeal,java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.controller.StoresPrinterController.getChuFanTask(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/StoresPrinter/getChuFanGoods],methods=[POST]}" onto public void com.controller.StoresPrinterController.getChuFanGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test],methods=[GET]}" onto public java.lang.String com.controller.TestController.test(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/order],methods=[GET]}" onto public java.lang.String com.controller.TestController.test4(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/sendCode],methods=[GET]}" onto public java.lang.String com.controller.TestController.sendCode() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest2],methods=[GET]}" onto public java.lang.String com.controller.TestController.orderTest2(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test3],methods=[GET]}" onto public java.lang.String com.controller.TestController.test3(java.lang.String,int) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/test2],methods=[GET]}" onto public java.lang.String com.controller.TestController.test2(int) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/ordermessage],methods=[GET]}" onto public java.lang.String com.controller.TestController.ordermessage(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Test/orderTest],methods=[GET]}" onto public java.util.Map com.controller.TestController.orderTest(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/Udesk/orderlist],methods=[GET]}" onto public java.lang.String com.controller.UdeskController.doorderlist(javax.servlet.http.HttpServletRequest) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/refund],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.refund(java.util.HashMap) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/historybacklist],methods=[POST]}" onto public void com.api.BackMoneyController.historybacklist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/bmCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.BackMoneyController.bmCount(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/BackMoneyApi/backlist],methods=[POST]}" onto public void com.api.BackMoneyController.backlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.getVersion(java.util.HashMap) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_add(java.util.HashMap) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.task_cancel(java.util.HashMap) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/do_task_Record]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.do_task_Record(java.util.HashMap) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/doningTaskRecord]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.doningTaskRecord(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanTask/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanTaskController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/getVersion]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.getVersion(java.util.HashMap) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/login]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.login(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/productionList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.productionList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_add]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_add(java.util.HashMap) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/storesGoods]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.storesGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/task_cancel]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.task_cancel(java.util.HashMap) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/recordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.recordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/taskrecordList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.taskrecordList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/reportList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.reportList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ChufanXiada/chufanMealList]}" onto public com.framework.mapping.JsonMessage com.api.ChufanXiadaController.chufanMealList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/CommentApi/comment/list],methods=[POST]}" onto public void com.api.CommentController.commentList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/CommentApi/comment/replyEleme],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.CommentController.replyEleme(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/CommentApi/comment/shops],methods=[GET]}" onto public java.lang.Object com.api.CommentController.getBrandShops(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/CommentApi/comment/order],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.CommentController.showOrderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlist],methods=[POST]}" onto public void com.api.GiftController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderlisthistory],methods=[POST]}" onto public void com.api.GiftController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/giftlist],methods=[POST]}" onto public void com.api.GiftController.giftlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getPicAddress],methods=[GET]}" onto public java.lang.String com.api.GiftController.getPicAddress(java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/orderInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.orderInfo(com.framework.mapping.system.CdsOrderInfo) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTreeGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getGoods() 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getTableGoods],methods=[GET]}" onto public void com.api.GiftController.getTableGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.saveGift(java.lang.String,com.framework.mapping.system.CdsGiftRegisterList) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/viewgiftlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.viewgiftlog(java.lang.String) 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/getBrandClass],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.GiftController.getBrandClass(com.framework.mapping.system.CdsClass) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GiftApi/GetGoodsInfoLists],methods=[POST]}" onto public void com.api.GiftController.GetGoodsInfoLists(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReport],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.goodReport(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/getReportAnalyse],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyse(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReportDays],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.GoodController.getReportAnalyseDays(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/GoodAPI/goodReportDaysExcel],methods=[POST]}" onto public void com.api.GoodController.getReportAnalyseDaysExcel(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/viewData],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/shopSelect],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.HomeController.shopSelect(com.framework.mapping.system.CdsUsers) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/homeApi/exceptionOrderList],methods=[POST]}" onto public void com.api.HomeController.exceptionOrderList(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChufangTask(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getMealErpInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getMealErpInfo(java.lang.Integer) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getStoresInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getStoresInfo() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMealErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getChuErpGoods],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getChuErpGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delMealErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delMealErpGoods(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addMaterial],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addMaterial(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateErpGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateErpGoods(com.framework.mapping.system.CdsMsGoods) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/saleSync],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.saleSync(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getGoodsInfo() throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/getErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.getErpGoodsInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/delErpGoodsInfo],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.delErpGoodsInfo(com.framework.mapping.system.CdsErpGoodList) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateGoods(com.framework.mapping.system.CdsGoodsInfo,org.springframework.web.multipart.MultipartFile) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/business/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.businessMg(java.lang.String,com.framework.mapping.system.CdsBusinessUnit) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/userAndShop/{action}],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.usersMg(java.lang.String,java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangTask],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangTask(com.framework.mapping.system.CdsChufanTask) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/updateChufangMeal],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.updateChufangMeal(com.framework.mapping.system.CdsChufanMeal) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ErpApi/addErpGoodsToGoods],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.KeFuController.addErpGoodsToGoods(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:31:59] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlist],methods=[POST]}" onto public void com.api.OrderController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:32:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderlisthistory],methods=[POST]}" onto public void com.api.OrderController.orderlisthistory(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:32:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/printOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.printOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:32:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewsendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewsendlog(java.lang.String) 
[INFO][2017-08-17 11:32:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelorder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelorder(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-17 11:32:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendDwdOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendDwdOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:32:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/sendShOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.sendShOrder(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:32:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderOntimeCount],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.orderTimeCount(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:32:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelDwdsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelDwdsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:32:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/order_count],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.orderDayCount(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:32:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/cancelShsend],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.cancelShsend(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:32:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/vieworderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.vieworderlog(java.lang.String) 
[INFO][2017-08-17 11:32:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistorysendlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistorysendlog(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:32:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/viewhistoryorderlog],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.OrderController.viewhistoryorderlog(java.lang.String,java.lang.String) 
[INFO][2017-08-17 11:32:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/orderSelectAPI/orderOntimeSelect],methods=[POST]}" onto public void com.api.OrderController.orderOntimeSelect(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:32:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/loginVerify],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.LoginVerify(com.framework.mapping.system.CdsStoresLogin) throws java.lang.Exception 
[INFO][2017-08-17 11:32:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/orderlist],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderList(java.util.HashMap) 
[INFO][2017-08-17 11:32:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfo],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfo(com.framework.mapping.system.CdsOrderInfo) 
[INFO][2017-08-17 11:32:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getOrderInfos],methods=[GET]}" onto public com.framework.mapping.JsonMessage com.api.PackController.getOrderInfos(java.lang.String) 
[INFO][2017-08-17 11:32:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/optOrder],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.optOrder(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:32:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/packJob],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.PackController.packJob(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:32:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/packApi/getMtCookie],methods=[POST]}" onto public void com.api.PackController.getMtCookie(java.lang.String) 
[INFO][2017-08-17 11:32:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrSuccess],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrSuccess(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:32:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/getConfigInfo],methods=[POST]}" onto public java.lang.String com.api.PrintController.getConfigInfo(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:32:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/printAPI/printrEmedy],methods=[POST]}" onto public java.lang.String com.api.PrintController.printrEmedy(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:32:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report1],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report1(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:32:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/ReportAPI/report2],methods=[POST]}" onto public com.framework.mapping.JsonMessage com.api.ReportController.report2(java.util.Map) throws java.lang.Exception 
[INFO][2017-08-17 11:32:00] org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) RMI TCP Connection(3)-127.0.0.1 Mapped "{[/udeskAPI/orderlist],methods=[POST]}" onto public void com.api.UdeskAPIController.orderlist(java.util.HashMap) throws java.lang.Exception 
[INFO][2017-08-17 11:32:00] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) RMI TCP Connection(3)-127.0.0.1 Looking for @ControllerAdvice: WebApplicationContext for namespace 'core-controller-servlet': startup date [Thu Aug 17 11:31:56 CST 2017]; parent: Root WebApplicationContext 
[INFO][2017-08-17 11:32:01] org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:354) RMI TCP Connection(3)-127.0.0.1 Mapped URL path [/**] onto handler 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0' 
[INFO][2017-08-17 11:32:01] org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) RMI TCP Connection(3)-127.0.0.1 Starting beans in phase 2147483647 
[INFO][2017-08-17 11:32:01] org.springframework.jms.connection.SingleConnectionFactory.initConnection(SingleConnectionFactory.java:311) RMI TCP Connection(3)-127.0.0.1 Established shared JMS Connection: ActiveMQConnection {id=ID:QH-20161019UENF-53099-1502940721429-1:1,clientId=null,started=false} 
[INFO][2017-08-17 11:32:01] org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1040) ActiveMQ Task-1 Successfully connected to tcp://127.0.0.1:61616 
[INFO][2017-08-17 11:32:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) RMI TCP Connection(3)-127.0.0.1 sys_dict.getRecord: 
select * from cds_options where option_name=? 
[INFO][2017-08-17 11:32:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) RMI TCP Connection(3)-127.0.0.1 参数1:site_options
 
[INFO][2017-08-17 11:32:02] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:508) RMI TCP Connection(3)-127.0.0.1 FrameworkServlet 'core-controller': initialization completed in 5402 ms 
[INFO][2017-08-17 11:32:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-17 11:32:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:chenbin
 
[INFO][2017-08-17 11:32:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 11:32:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:351
参数2:1032
 
[INFO][2017-08-17 11:32:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 11:32:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:352
参数2:1032
 
[INFO][2017-08-17 11:32:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 11:32:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:375
参数2:1032
 
[INFO][2017-08-17 11:32:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 11:32:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:380
参数2:1032
 
[INFO][2017-08-17 11:32:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 11:32:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:353
参数2:1032
 
[INFO][2017-08-17 11:32:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 11:32:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:376
参数2:1032
 
[INFO][2017-08-17 11:32:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 11:32:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:372
参数2:1032
 
[INFO][2017-08-17 11:32:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 11:32:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:354
参数2:1032
 
[INFO][2017-08-17 11:32:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 11:32:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:355
参数2:1032
 
[INFO][2017-08-17 11:32:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 11:32:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:356
参数2:1032
 
[INFO][2017-08-17 11:32:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-17 11:32:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:0
 
[INFO][2017-08-17 11:32:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 11:32:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 11:32:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-17 11:32:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:0
参数2:2017-08-17
参数3:2017-08-17
参数4:0
参数5:2017-08-17
参数6:2017-08-17
参数7:0
参数8:2017-08-17
参数9:2017-08-17
参数10:0
参数11:2017-08-17
参数12:2017-08-17
参数13:0
参数14:2017-08-17
参数15:2017-08-17
参数16:0
参数17:2017-08-17
参数18:2017-08-17
参数19:0
参数20:2017-08-17
参数21:2017-08-17
参数22:0
参数23:2017-08-17
参数24:2017-08-17
参数25:0
参数26:2017-08-17
参数27:2017-08-17
 
[INFO][2017-08-17 11:32:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 11:32:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 11:32:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-17 11:32:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2017-08-17
参数2:2017-08-17
 
[INFO][2017-08-17 11:32:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-17 11:32:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2017-08-17
参数2:2017-08-17
参数3:0
参数4:2017-08-17
参数5:2017-08-17
参数6:0
参数7:2017-08-16
参数8:2017-08-16
参数9:0
参数10:2017-08-16
参数11:2017-08-16
参数12:0
参数13:2017-08-10
参数14:2017-08-10
参数15:0
 
[INFO][2017-08-17 11:32:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:32:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 11:32:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:32:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:32:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:32:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 11:32:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:32:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:32:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 11:32:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 11:32:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 11:32:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 11:32:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 11:32:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 11:32:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:32:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 11:32:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 11:32:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:32:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:32:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-17 11:32:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:32:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-17 11:32:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:32:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:32:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:32:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-17 11:32:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:32:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-17 11:32:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:32:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-17 11:32:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:32:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-17 11:32:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 11:32:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:32:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:32:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-17 11:32:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:32:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-17 11:32:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:32:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-17 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-17 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-17 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-17 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-17 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-17 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-17 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:32:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-17 11:32:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:32:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
 
[INFO][2017-08-17 11:32:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:32:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
 
[INFO][2017-08-17 11:32:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:32:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:9
 
[INFO][2017-08-17 11:32:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:32:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:9
 
[INFO][2017-08-17 11:32:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:32:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:10
 
[INFO][2017-08-17 11:32:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:32:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:10
 
[INFO][2017-08-17 11:32:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:32:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:10
 
[INFO][2017-08-17 11:32:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:32:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:10
 
[INFO][2017-08-17 11:32:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:32:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:11
 
[INFO][2017-08-17 11:32:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 6 
[INFO][2017-08-17 11:32:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:11
 
[INFO][2017-08-17 11:32:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:32:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:11
 
[INFO][2017-08-17 11:32:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 6 
[INFO][2017-08-17 11:32:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:11
 
[INFO][2017-08-17 11:32:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:32:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:12
 
[INFO][2017-08-17 11:32:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:32:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:12
 
[INFO][2017-08-17 11:32:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:32:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:12
 
[INFO][2017-08-17 11:32:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:32:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:12
 
[INFO][2017-08-17 11:32:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:32:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:9
 
[INFO][2017-08-17 11:32:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:32:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:9
 
[INFO][2017-08-17 11:32:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:32:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:10
 
[INFO][2017-08-17 11:32:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:32:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:10
 
[INFO][2017-08-17 11:32:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:32:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:11
 
[INFO][2017-08-17 11:32:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 6 
[INFO][2017-08-17 11:32:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:11
 
[INFO][2017-08-17 11:32:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:32:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:12
 
[INFO][2017-08-17 11:32:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:32:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:12
 
[INFO][2017-08-17 11:33:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:33:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:12
 
[INFO][2017-08-17 11:33:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:33:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:12
 
[INFO][2017-08-17 11:33:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:33:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:10
 
[INFO][2017-08-17 11:33:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:33:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:10
 
[INFO][2017-08-17 11:33:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:33:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
参数2:9
 
[INFO][2017-08-17 11:33:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:33:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
参数2:9
 
[INFO][2017-08-17 11:33:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:33:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
参数2:9
 
[INFO][2017-08-17 11:33:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:33:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
参数2:9
 
[INFO][2017-08-17 11:33:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:33:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
参数2:9
 
[INFO][2017-08-17 11:33:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-08-17 11:33:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
参数2:9
 
[INFO][2017-08-17 11:36:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:36:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 11:36:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:36:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 11:36:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:36:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 11:36:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:36:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 11:36:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:36:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:36:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:36:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 11:36:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 11:36:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:36:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 11:36:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:36:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 11:36:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 11:36:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:36:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-17 11:36:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:36:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-17 11:36:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:36:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 11:36:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:36:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-17 11:36:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 11:36:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 11:36:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:36:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-17 11:36:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:36:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-17 11:36:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:36:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-17 11:36:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:36:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-17 11:36:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:36:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-17 11:36:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:36:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:9
 
[INFO][2017-08-17 11:36:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:36:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:9
 
[INFO][2017-08-17 11:36:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:36:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:9
 
[INFO][2017-08-17 11:36:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:36:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:9
 
[INFO][2017-08-17 11:36:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:36:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:9
 
[INFO][2017-08-17 11:36:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:36:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:9
 
[INFO][2017-08-17 11:36:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:36:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:10
 
[INFO][2017-08-17 11:36:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:36:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:10
 
[INFO][2017-08-17 11:36:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:36:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:10
 
[INFO][2017-08-17 11:36:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:36:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:10
 
[INFO][2017-08-17 11:37:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 11:37:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 11:37:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 11:37:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 11:37:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 11:37:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1032
 
[INFO][2017-08-17 11:38:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:38:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 11:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 11:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 11:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 11:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 11:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 11:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 11:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 11:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 11:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 11:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-17 11:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-17 11:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-17 11:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:38:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:38:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 11:38:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 11:38:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:38:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-17 11:38:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:38:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-17 11:38:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:38:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-17 11:38:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:38:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-17 11:38:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:38:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-17 11:38:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:38:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:9
 
[INFO][2017-08-17 11:38:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:38:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:9
 
[INFO][2017-08-17 11:38:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:38:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:9
 
[INFO][2017-08-17 11:38:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:38:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:9
 
[INFO][2017-08-17 11:38:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:38:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:10
 
[INFO][2017-08-17 11:38:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:38:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:10
 
[INFO][2017-08-17 11:38:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:38:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:9
 
[INFO][2017-08-17 11:38:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:38:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:9
 
[INFO][2017-08-17 11:38:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:38:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
 
[INFO][2017-08-17 11:38:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:38:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
 
[INFO][2017-08-17 11:39:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:39:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 11:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 11:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 11:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 11:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 11:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 11:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 11:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 11:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 11:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 11:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-17 11:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-17 11:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-17 11:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-17 11:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-17 11:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 11:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 11:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-17 11:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-17 11:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-17 11:39:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:39:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:9
 
[INFO][2017-08-17 11:39:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:39:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:9
 
[INFO][2017-08-17 11:39:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:39:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:9
 
[INFO][2017-08-17 11:39:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:39:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:9
 
[INFO][2017-08-17 11:39:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:39:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:9
 
[INFO][2017-08-17 11:39:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:39:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:9
 
[INFO][2017-08-17 11:40:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:40:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:40:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:40:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 11:40:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:40:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 11:40:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:40:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 11:40:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:40:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:40:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:40:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 11:40:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 11:40:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 11:40:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 11:40:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 11:40:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 11:40:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 11:40:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:40:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-17 11:40:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:40:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 11:40:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:40:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-17 11:40:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:40:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-17 11:40:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:40:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-17 11:40:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:40:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-17 11:40:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:40:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-17 11:40:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:40:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-17 11:40:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:40:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-17 11:40:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 11:40:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 11:40:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:40:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:9
 
[INFO][2017-08-17 11:40:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:40:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:9
 
[INFO][2017-08-17 11:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:10
 
[INFO][2017-08-17 11:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:40:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:10
 
[INFO][2017-08-17 11:40:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:40:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:11
 
[INFO][2017-08-17 11:40:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 6 
[INFO][2017-08-17 11:40:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:11
 
[INFO][2017-08-17 11:40:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:40:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:11
 
[INFO][2017-08-17 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 6 
[INFO][2017-08-17 11:41:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:11
 
[INFO][2017-08-17 11:41:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:41:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:10
 
[INFO][2017-08-17 11:41:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:41:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:10
 
[INFO][2017-08-17 11:41:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:41:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 11:41:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:41:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 11:41:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:41:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 11:41:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:41:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 11:41:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:41:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 11:41:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:41:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:41:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 11:41:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 11:41:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 11:41:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 11:41:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:41:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-17 11:41:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:41:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-17 11:41:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 11:41:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 11:41:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:41:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:41:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 11:41:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-17 11:41:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:41:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:41:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-17 11:41:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-17 11:41:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:41:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-17 11:41:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 11:41:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 11:41:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:41:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-17 11:41:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:41:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-17 11:41:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:41:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:9
 
[INFO][2017-08-17 11:41:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:41:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:9
 
[INFO][2017-08-17 11:41:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:41:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:10
 
[INFO][2017-08-17 11:41:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:41:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:10
 
[INFO][2017-08-17 11:41:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:41:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:11
 
[INFO][2017-08-17 11:41:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 6 
[INFO][2017-08-17 11:41:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:11
 
[INFO][2017-08-17 11:41:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:41:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:12
 
[INFO][2017-08-17 11:41:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:41:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:12
 
[INFO][2017-08-17 11:41:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:41:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:14
 
[INFO][2017-08-17 11:41:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:41:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:14
 
[INFO][2017-08-17 11:41:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:41:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:15
 
[INFO][2017-08-17 11:41:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:41:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:15
 
[INFO][2017-08-17 11:41:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:41:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:16
 
[INFO][2017-08-17 11:41:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:41:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:16
 
[INFO][2017-08-17 11:41:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:41:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:9
 
[INFO][2017-08-17 11:41:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:41:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:9
 
[INFO][2017-08-17 11:41:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:41:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
 
[INFO][2017-08-17 11:41:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:41:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
 
[INFO][2017-08-17 11:41:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:41:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
参数2:9
 
[INFO][2017-08-17 11:41:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-08-17 11:41:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
参数2:9
 
[INFO][2017-08-17 11:42:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:42:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 11:42:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:42:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:42:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:42:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 11:42:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:42:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 11:42:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:42:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:42:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 11:42:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 11:42:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:42:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 11:42:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 11:42:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 11:42:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 11:42:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:42:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:42:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-17 11:42:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:42:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 11:42:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:42:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-17 11:42:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:42:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-17 11:42:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:42:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-17 11:42:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:42:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-17 11:42:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 11:42:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:42:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:42:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-17 11:42:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:42:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-17 11:42:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:42:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-17 11:42:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:42:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:9
 
[INFO][2017-08-17 11:42:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:42:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:9
 
[INFO][2017-08-17 11:42:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:42:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:9
 
[INFO][2017-08-17 11:42:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:42:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:9
 
[INFO][2017-08-17 11:42:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:42:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
参数2:9
 
[INFO][2017-08-17 11:42:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-08-17 11:42:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
参数2:9
 
[INFO][2017-08-17 11:42:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:42:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:9
 
[INFO][2017-08-17 11:42:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:42:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:9
 
[INFO][2017-08-17 11:42:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:42:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
参数2:9
 
[INFO][2017-08-17 11:42:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-08-17 11:42:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
参数2:9
 
[INFO][2017-08-17 11:42:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 11:42:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:42:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 11:42:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1032
 
[INFO][2017-08-17 11:42:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 11:42:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:42:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:42:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:10
 
[INFO][2017-08-17 11:42:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:42:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:10
 
[INFO][2017-08-17 11:42:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:42:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:10
 
[INFO][2017-08-17 11:42:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:42:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:10
 
[INFO][2017-08-17 11:42:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:42:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:11
 
[INFO][2017-08-17 11:42:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 6 
[INFO][2017-08-17 11:42:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:11
 
[INFO][2017-08-17 11:42:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:42:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
参数2:11
 
[INFO][2017-08-17 11:42:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 6 
[INFO][2017-08-17 11:42:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
参数2:11
 
[INFO][2017-08-17 11:42:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:42:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:12
 
[INFO][2017-08-17 11:42:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:42:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:12
 
[INFO][2017-08-17 11:42:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:42:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:13
 
[INFO][2017-08-17 11:42:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:42:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:13
 
[INFO][2017-08-17 11:42:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:42:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:14
 
[INFO][2017-08-17 11:42:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:42:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:14
 
[INFO][2017-08-17 11:42:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:42:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:9
 
[INFO][2017-08-17 11:42:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:42:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:9
 
[INFO][2017-08-17 11:42:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:42:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
参数2:9
 
[INFO][2017-08-17 11:42:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-08-17 11:42:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
参数2:9
 
[INFO][2017-08-17 11:42:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:42:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
 
[INFO][2017-08-17 11:42:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:42:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
 
[INFO][2017-08-17 11:42:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:42:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:10
 
[INFO][2017-08-17 11:42:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:42:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:10
 
[INFO][2017-08-17 11:42:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:42:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:12
 
[INFO][2017-08-17 11:42:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:42:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:12
 
[INFO][2017-08-17 11:42:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:42:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:16
 
[INFO][2017-08-17 11:42:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:42:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:16
 
[INFO][2017-08-17 11:42:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:42:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:15
 
[INFO][2017-08-17 11:42:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:42:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:15
 
[INFO][2017-08-17 11:42:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:42:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:10
 
[INFO][2017-08-17 11:42:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:42:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:10
 
[INFO][2017-08-17 11:42:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:42:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
 
[INFO][2017-08-17 11:42:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:42:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
 
[INFO][2017-08-17 11:42:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:42:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
参数2:9
 
[INFO][2017-08-17 11:42:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:42:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
参数2:9
 
[INFO][2017-08-17 11:42:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:42:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:11
 
[INFO][2017-08-17 11:42:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 6 
[INFO][2017-08-17 11:42:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:11
 
[INFO][2017-08-17 11:42:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:42:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:11
参数2:34
 
[INFO][2017-08-17 11:42:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 11:42:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:11
参数2:34
 
[INFO][2017-08-17 11:42:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:42:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:16
 
[INFO][2017-08-17 11:42:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:42:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:16
 
[INFO][2017-08-17 11:42:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:42:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:15
 
[INFO][2017-08-17 11:42:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:42:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:15
 
[INFO][2017-08-17 11:42:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:42:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:14
 
[INFO][2017-08-17 11:42:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:42:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:14
 
[INFO][2017-08-17 11:42:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:42:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:12
 
[INFO][2017-08-17 11:42:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:42:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:12
 
[INFO][2017-08-17 11:42:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:42:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:11
 
[INFO][2017-08-17 11:42:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 6 
[INFO][2017-08-17 11:42:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:11
 
[INFO][2017-08-17 11:42:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:42:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:9
 
[INFO][2017-08-17 11:42:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:42:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:9
 
[INFO][2017-08-17 11:42:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:42:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:10
 
[INFO][2017-08-17 11:42:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:42:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:10
 
[INFO][2017-08-17 11:42:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:42:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:12
 
[INFO][2017-08-17 11:42:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:42:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:12
 
[INFO][2017-08-17 11:42:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:42:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:14
 
[INFO][2017-08-17 11:42:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:42:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:14
 
[INFO][2017-08-17 11:42:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:42:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:15
 
[INFO][2017-08-17 11:42:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:42:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:15
 
[INFO][2017-08-17 11:42:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:42:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:16
 
[INFO][2017-08-17 11:42:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:42:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:16
 
[INFO][2017-08-17 11:43:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:43:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:17
 
[INFO][2017-08-17 11:43:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:43:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:17
 
[INFO][2017-08-17 11:43:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:43:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:16
 
[INFO][2017-08-17 11:43:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:43:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:16
 
[INFO][2017-08-17 11:44:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:44:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 11:44:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:44:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:44:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:44:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 11:44:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:44:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 11:44:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 11:44:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 11:44:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:44:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 11:44:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:44:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 11:44:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 11:44:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 11:44:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 11:44:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:44:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:44:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-17 11:44:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:44:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-17 11:44:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:44:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 11:44:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:44:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-17 11:44:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:44:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-17 11:44:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:44:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-17 11:44:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 11:44:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:44:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:44:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-17 11:44:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:44:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-17 11:44:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:44:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-17 11:44:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:44:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
 
[INFO][2017-08-17 11:44:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:44:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
 
[INFO][2017-08-17 11:44:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:44:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:10
 
[INFO][2017-08-17 11:44:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:44:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:10
 
[INFO][2017-08-17 11:44:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:44:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
参数2:10
 
[INFO][2017-08-17 11:44:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:44:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
参数2:10
 
[INFO][2017-08-17 11:44:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:44:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:10
参数2:16
 
[INFO][2017-08-17 11:44:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 11:44:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:10
参数2:16
 
[INFO][2017-08-17 11:44:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:44:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:10
参数2:17
 
[INFO][2017-08-17 11:44:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 11:44:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:10
参数2:17
 
[INFO][2017-08-17 11:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:10
参数2:19
 
[INFO][2017-08-17 11:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-08-17 11:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:10
参数2:19
 
[INFO][2017-08-17 11:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:10
参数2:18
 
[INFO][2017-08-17 11:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:44:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:10
参数2:18
 
[INFO][2017-08-17 11:44:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:44:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
参数2:10
 
[INFO][2017-08-17 11:44:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:44:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
参数2:10
 
[INFO][2017-08-17 11:44:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:44:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
参数2:10
 
[INFO][2017-08-17 11:44:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ) 
[INFO][2017-08-17 11:44:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
参数2:10
 
[INFO][2017-08-17 11:44:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:44:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
参数2:10
 
[INFO][2017-08-17 11:44:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:44:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
参数2:10
 
[INFO][2017-08-17 11:44:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:44:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
参数2:10
 
[INFO][2017-08-17 11:44:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ) 
[INFO][2017-08-17 11:44:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
参数2:10
 
[INFO][2017-08-17 11:44:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:44:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
参数2:10
 
[INFO][2017-08-17 11:44:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:44:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
参数2:10
 
[INFO][2017-08-17 11:44:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:44:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 11:44:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:44:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:44:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:44:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:44:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 11:44:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 11:44:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:44:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 11:44:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:44:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 11:44:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 11:44:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 11:44:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 11:44:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:44:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 11:44:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 11:44:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:44:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-17 11:44:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:44:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-17 11:44:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:44:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-17 11:44:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:44:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 11:44:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:44:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-17 11:44:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:44:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-17 11:44:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:44:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-17 11:44:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:44:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-17 11:44:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 11:44:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:44:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:44:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-17 11:45:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:45:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
 
[INFO][2017-08-17 11:45:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:45:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
 
[INFO][2017-08-17 11:45:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:45:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
参数2:9
 
[INFO][2017-08-17 11:45:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-08-17 11:45:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
参数2:9
 
[INFO][2017-08-17 11:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
参数2:29
 
[INFO][2017-08-17 11:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-08-17 11:45:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
参数2:29
 
[INFO][2017-08-17 11:45:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:45:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:9
参数2:30
 
[INFO][2017-08-17 11:45:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 11:45:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:9
参数2:30
 
[INFO][2017-08-17 11:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:9
参数2:31
 
[INFO][2017-08-17 11:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 11:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:9
参数2:31
 
[INFO][2017-08-17 11:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:9
参数2:32
 
[INFO][2017-08-17 11:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 11:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:9
参数2:32
 
[INFO][2017-08-17 11:45:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:45:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:9
参数2:43
 
[INFO][2017-08-17 11:45:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 11:45:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:9
参数2:43
 
[INFO][2017-08-17 11:45:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:45:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:9
参数2:45
 
[INFO][2017-08-17 11:45:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:45:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:9
参数2:45
 
[INFO][2017-08-17 11:45:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:45:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
 
[INFO][2017-08-17 11:45:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:45:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
 
[INFO][2017-08-17 11:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:10
 
[INFO][2017-08-17 11:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:45:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:10
 
[INFO][2017-08-17 11:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:11
 
[INFO][2017-08-17 11:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 6 
[INFO][2017-08-17 11:45:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:11
 
[INFO][2017-08-17 11:45:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:45:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:10
 
[INFO][2017-08-17 11:45:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:45:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:10
 
[INFO][2017-08-17 11:45:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:45:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
 
[INFO][2017-08-17 11:45:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:45:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
 
[INFO][2017-08-17 11:45:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:45:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:45:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:45:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:45:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:45:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 11:45:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:45:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 11:45:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:45:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 11:45:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:45:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 11:45:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 11:45:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 11:45:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 11:45:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:45:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 11:45:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 11:45:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:45:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-17 11:45:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:45:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 11:45:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:45:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-17 11:45:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:45:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-17 11:45:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:45:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-17 11:45:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:45:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-17 11:45:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 11:45:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:45:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:45:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-17 11:45:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:45:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-17 11:45:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:45:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-17 11:45:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:45:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:9
 
[INFO][2017-08-17 11:45:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:45:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:9
 
[INFO][2017-08-17 11:45:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:45:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:10
 
[INFO][2017-08-17 11:45:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:45:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:10
 
[INFO][2017-08-17 11:45:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:45:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:11
 
[INFO][2017-08-17 11:45:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 6 
[INFO][2017-08-17 11:45:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:11
 
[INFO][2017-08-17 11:45:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:45:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:12
 
[INFO][2017-08-17 11:45:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:45:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:12
 
[INFO][2017-08-17 11:45:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:45:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:16
 
[INFO][2017-08-17 11:45:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:45:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:16
 
[INFO][2017-08-17 11:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:15
 
[INFO][2017-08-17 11:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:15
 
[INFO][2017-08-17 11:45:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:45:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
参数2:15
 
[INFO][2017-08-17 11:45:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:45:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
参数2:15
 
[INFO][2017-08-17 11:45:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:45:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:9
 
[INFO][2017-08-17 11:45:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:45:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:9
 
[INFO][2017-08-17 11:45:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:45:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:9
 
[INFO][2017-08-17 11:45:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-08-17 11:45:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:9
 
[INFO][2017-08-17 11:45:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:45:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
参数2:9
 
[INFO][2017-08-17 11:45:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:45:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
参数2:9
 
[INFO][2017-08-17 11:45:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:45:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
参数2:9
 
[INFO][2017-08-17 11:45:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-08-17 11:45:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
参数2:9
 
[INFO][2017-08-17 11:45:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:45:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
参数2:29
 
[INFO][2017-08-17 11:45:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-08-17 11:45:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
参数2:29
 
[INFO][2017-08-17 11:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:9
参数2:31
 
[INFO][2017-08-17 11:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 11:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:9
参数2:31
 
[INFO][2017-08-17 11:45:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:45:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
参数2:31
 
[INFO][2017-08-17 11:45:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 11:45:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
参数2:31
 
[INFO][2017-08-17 11:45:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:45:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:10
 
[INFO][2017-08-17 11:45:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:45:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:10
 
[INFO][2017-08-17 11:45:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:45:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:9
 
[INFO][2017-08-17 11:45:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:45:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:9
 
[INFO][2017-08-17 11:45:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:45:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:10
 
[INFO][2017-08-17 11:45:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:45:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:10
 
[INFO][2017-08-17 11:45:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:45:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:9
 
[INFO][2017-08-17 11:45:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:45:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:9
 
[INFO][2017-08-17 11:45:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:45:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:10
 
[INFO][2017-08-17 11:45:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:45:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:10
 
[INFO][2017-08-17 11:46:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-17 11:46:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:8
 
[INFO][2017-08-17 11:46:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:46:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 11:46:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:46:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:46:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-08-17 11:46:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:10
 
[INFO][2017-08-17 11:46:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-17 11:46:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:8
 
[INFO][2017-08-17 11:46:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardList: 
select * from cds_standard_list
         
         WHERE sgl_id = ? 
[INFO][2017-08-17 11:46:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:8
 
[INFO][2017-08-17 11:46:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-08-17 11:46:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:10
 
[INFO][2017-08-17 11:46:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-17 11:46:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-17 11:46:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:46:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 11:46:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:46:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:46:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-08-17 11:46:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
参数2:10
 
[INFO][2017-08-17 11:46:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-17 11:46:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-17 11:46:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:46:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-17 11:46:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-08-17 11:46:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:10
 
[INFO][2017-08-17 11:46:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:46:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:11
 
[INFO][2017-08-17 11:46:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 6 
[INFO][2017-08-17 11:46:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:11
 
[INFO][2017-08-17 11:46:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:46:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:12
 
[INFO][2017-08-17 11:46:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:46:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:12
 
[INFO][2017-08-17 11:46:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:46:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:11
 
[INFO][2017-08-17 11:46:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 6 
[INFO][2017-08-17 11:46:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:11
 
[INFO][2017-08-17 11:46:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:46:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:10
 
[INFO][2017-08-17 11:46:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:46:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:10
 
[INFO][2017-08-17 11:46:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:46:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:9
 
[INFO][2017-08-17 11:46:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:46:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:9
 
[INFO][2017-08-17 11:46:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-17 11:46:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-17 11:46:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:46:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 11:46:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:46:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:46:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-08-17 11:46:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
参数2:9
 
[INFO][2017-08-17 11:46:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-17 11:46:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-17 11:46:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-17 11:46:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-17 11:46:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-08-17 11:46:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
 
[INFO][2017-08-17 11:46:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-17 11:46:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-17 11:46:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:46:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 11:46:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:46:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:46:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-08-17 11:46:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:9
 
[INFO][2017-08-17 11:46:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-17 11:46:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-17 11:46:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-17 11:46:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-17 11:46:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-08-17 11:46:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:9
 
[INFO][2017-08-17 11:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE good_name = ?
            and
                stores_class_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-08-17 11:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:大米1
参数2:29
 
[INFO][2017-08-17 11:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.updateRecord: 
UPDATE cds_stores_goods_list
         SET stores_id = ?
            ,
                good_id = ?
            ,
                brand_id = ?
            ,
                good_number = ?
            ,
                type = ?
            ,
                elem_count = ?
            ,
                mt_count = ?
            ,
                wx_count = ?
            ,
                box_count = ?
            ,
                status = ?
            ,
                box_price = ?
            ,
                market_price = ?
            ,
                unit = ?
            ,
                default_standrad_id = ?
            ,
                isdefault = ?
            ,
                all_count = ?
            ,
                stores_brand_id = ?
            ,
                food_id = ?
            ,
                mt_isband = ?
            ,
                mt_image_hash = ?
            ,
                image_hash = ?
            ,
                good_name = ?
            ,
                good_pic = ?
            ,
                egood_pic = ?
            ,
                good_info = ?
            ,
                listorder = ?
            ,
                stores_class_id = ? 
         WHERE sgl_id = ? 
[INFO][2017-08-17 11:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:9
参数2:0
参数3:0
参数4:0
参数5:0
参数6:0
参数7:0
参数8:0
参数9:0
参数10:1
参数11:0.0
参数12:0.0
参数13:null
参数14:0
参数15:null
参数16:0
参数17:9
参数18:null
参数19:null
参数20:null
参数21:null
参数22:大米1
参数23:goodimg/js63BypfRP.jpg
参数24:goodimg/TWwfTNaZYY.jpg
参数25:少时诵诗书
参数26:0
参数27:29
参数28:1
 
[INFO][2017-08-17 11:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:9
 
[INFO][2017-08-17 11:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:47:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:9
 
[INFO][2017-08-17 11:47:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-17 11:47:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-17 11:47:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:47:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:47:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:47:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 11:47:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-08-17 11:47:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:9
 
[INFO][2017-08-17 11:47:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-17 11:47:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-17 11:47:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-17 11:47:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-17 11:47:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-08-17 11:47:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:9
 
[INFO][2017-08-17 11:47:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE good_name = ?
            and
                stores_class_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-08-17 11:47:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:大米1
参数2:29
 
[INFO][2017-08-17 11:47:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.updateRecord: 
UPDATE cds_stores_goods_list
         SET stores_id = ?
            ,
                good_id = ?
            ,
                brand_id = ?
            ,
                good_number = ?
            ,
                type = ?
            ,
                elem_count = ?
            ,
                mt_count = ?
            ,
                wx_count = ?
            ,
                box_count = ?
            ,
                status = ?
            ,
                box_price = ?
            ,
                market_price = ?
            ,
                unit = ?
            ,
                default_standrad_id = ?
            ,
                isdefault = ?
            ,
                all_count = ?
            ,
                stores_brand_id = ?
            ,
                food_id = ?
            ,
                mt_isband = ?
            ,
                mt_image_hash = ?
            ,
                image_hash = ?
            ,
                good_name = ?
            ,
                good_pic = ?
            ,
                egood_pic = ?
            ,
                good_info = ?
            ,
                listorder = ?
            ,
                stores_class_id = ? 
         WHERE sgl_id = ? 
[INFO][2017-08-17 11:47:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
参数2:0
参数3:0
参数4:0
参数5:0
参数6:0
参数7:0
参数8:0
参数9:0
参数10:1
参数11:0.0
参数12:0.0
参数13:null
参数14:0
参数15:null
参数16:0
参数17:9
参数18:null
参数19:null
参数20:null
参数21:null
参数22:大米1
参数23:null
参数24:null
参数25:少时诵诗书
参数26:0
参数27:29
参数28:1
 
[INFO][2017-08-17 11:47:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:47:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:9
 
[INFO][2017-08-17 11:47:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:47:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:9
 
[INFO][2017-08-17 11:47:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-17 11:47:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-17 11:47:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:47:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 11:47:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:47:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 11:47:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-08-17 11:47:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
参数2:9
 
[INFO][2017-08-17 11:47:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-17 11:47:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-17 11:47:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-17 11:47:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-17 11:47:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-08-17 11:47:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:9
 
[INFO][2017-08-17 11:47:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-17 11:47:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:3
 
[INFO][2017-08-17 11:47:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:47:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 11:47:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:47:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 11:47:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-08-17 11:47:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
参数2:9
 
[INFO][2017-08-17 11:47:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-17 11:47:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:3
 
[INFO][2017-08-17 11:47:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardList: 
select * from cds_standard_list
         
         WHERE sgl_id = ? 
[INFO][2017-08-17 11:47:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:3
 
[INFO][2017-08-17 11:47:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-08-17 11:47:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:9
 
[INFO][2017-08-17 11:47:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 11:47:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 11:47:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 11:47:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 11:47:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 11:47:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1032
 
[INFO][2017-08-17 11:47:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-17 11:47:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-17 11:47:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:47:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:47:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:47:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 11:47:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-08-17 11:47:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:9
 
[INFO][2017-08-17 11:47:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-17 11:47:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-17 11:47:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-17 11:47:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-17 11:47:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-08-17 11:47:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:9
 
[INFO][2017-08-17 11:48:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE good_name = ?
            and
                stores_class_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-08-17 11:48:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:大米1
参数2:29
 
[INFO][2017-08-17 11:48:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.updateRecord: 
UPDATE cds_stores_goods_list
         SET stores_id = ?
            ,
                good_id = ?
            ,
                brand_id = ?
            ,
                good_number = ?
            ,
                type = ?
            ,
                elem_count = ?
            ,
                mt_count = ?
            ,
                wx_count = ?
            ,
                box_count = ?
            ,
                status = ?
            ,
                box_price = ?
            ,
                market_price = ?
            ,
                unit = ?
            ,
                default_standrad_id = ?
            ,
                isdefault = ?
            ,
                all_count = ?
            ,
                stores_brand_id = ?
            ,
                food_id = ?
            ,
                mt_isband = ?
            ,
                mt_image_hash = ?
            ,
                image_hash = ?
            ,
                good_name = ?
            ,
                good_pic = ?
            ,
                egood_pic = ?
            ,
                good_info = ?
            ,
                listorder = ?
            ,
                stores_class_id = ? 
         WHERE sgl_id = ? 
[INFO][2017-08-17 11:48:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:9
参数2:0
参数3:0
参数4:0
参数5:0
参数6:0
参数7:0
参数8:0
参数9:0
参数10:1
参数11:0.0
参数12:0.0
参数13:null
参数14:0
参数15:null
参数16:0
参数17:9
参数18:null
参数19:null
参数20:null
参数21:null
参数22:大米1
参数23:goodimg/wmtXhs3Zhk.jpg
参数24:goodimg/2ZHxQkMQGN.jpg
参数25:少时诵诗书
参数26:0
参数27:29
参数28:1
 
[INFO][2017-08-17 11:48:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:48:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
 
[INFO][2017-08-17 11:48:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:48:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
 
[INFO][2017-08-17 11:48:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:48:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 11:48:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:48:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 11:48:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:48:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:48:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:48:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 11:48:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:48:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 11:48:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:48:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:48:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 11:48:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 11:48:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 11:48:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 11:48:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:48:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-17 11:48:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:48:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-17 11:48:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:48:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-17 11:48:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 11:48:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:48:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:48:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 11:48:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:48:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-17 11:48:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:48:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-17 11:48:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:48:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-17 11:48:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:48:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-17 11:48:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 11:48:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:48:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:48:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-17 11:48:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:48:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
 
[INFO][2017-08-17 11:48:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:48:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
 
[INFO][2017-08-17 11:48:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-17 11:48:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-17 11:48:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:48:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 11:48:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:48:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 11:48:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-08-17 11:48:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
参数2:9
 
[INFO][2017-08-17 11:48:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-17 11:48:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-17 11:48:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-17 11:48:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-17 11:48:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-08-17 11:48:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:9
 
[INFO][2017-08-17 11:48:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE good_name = ?
            and
                stores_class_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-08-17 11:48:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:大米1
参数2:29
 
[INFO][2017-08-17 11:49:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.updateRecord: 
UPDATE cds_stores_goods_list
         SET stores_id = ?
            ,
                good_id = ?
            ,
                brand_id = ?
            ,
                good_number = ?
            ,
                type = ?
            ,
                elem_count = ?
            ,
                mt_count = ?
            ,
                wx_count = ?
            ,
                box_count = ?
            ,
                status = ?
            ,
                box_price = ?
            ,
                market_price = ?
            ,
                unit = ?
            ,
                default_standrad_id = ?
            ,
                isdefault = ?
            ,
                all_count = ?
            ,
                stores_brand_id = ?
            ,
                food_id = ?
            ,
                mt_isband = ?
            ,
                mt_image_hash = ?
            ,
                image_hash = ?
            ,
                good_name = ?
            ,
                good_pic = ?
            ,
                egood_pic = ?
            ,
                good_info = ?
            ,
                listorder = ?
            ,
                stores_class_id = ? 
         WHERE sgl_id = ? 
[INFO][2017-08-17 11:49:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:9
参数2:0
参数3:0
参数4:0
参数5:0
参数6:0
参数7:0
参数8:0
参数9:0
参数10:1
参数11:0.0
参数12:0.0
参数13:null
参数14:0
参数15:null
参数16:0
参数17:9
参数18:null
参数19:null
参数20:null
参数21:null
参数22:大米1
参数23:null
参数24:null
参数25:少时诵诗书
参数26:0
参数27:29
参数28:1
 
[INFO][2017-08-17 11:49:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:49:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:9
 
[INFO][2017-08-17 11:49:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:49:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:9
 
[INFO][2017-08-17 11:51:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-08-17 11:51:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 11:51:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 11:51:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 11:51:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:51:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 11:51:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-08-17 11:51:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 11:51:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-08-17 11:51:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 11:51:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 11:51:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 11:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:52:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 11:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 11:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 11:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 11:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 11:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 11:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 11:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 11:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 11:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 11:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 11:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-17 11:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-17 11:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-17 11:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 11:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-17 11:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-17 11:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-17 11:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 11:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 11:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:52:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-17 11:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:52:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-17 11:52:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:52:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
 
[INFO][2017-08-17 11:52:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:52:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
 
[INFO][2017-08-17 11:52:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-17 11:52:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-17 11:52:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:52:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 11:52:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:52:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 11:52:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-08-17 11:52:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
参数2:9
 
[INFO][2017-08-17 11:52:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-17 11:52:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-17 11:52:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-17 11:52:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-17 11:52:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-08-17 11:52:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:9
 
[INFO][2017-08-17 11:52:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 11:52:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 11:52:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 11:52:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 11:52:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 11:52:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1032
 
[INFO][2017-08-17 11:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE good_name = ?
            and
                stores_class_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-08-17 11:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:大米1
参数2:29
 
[INFO][2017-08-17 11:52:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.updateRecord: 
UPDATE cds_stores_goods_list
         SET stores_id = ?
            ,
                good_id = ?
            ,
                brand_id = ?
            ,
                good_number = ?
            ,
                type = ?
            ,
                elem_count = ?
            ,
                mt_count = ?
            ,
                wx_count = ?
            ,
                box_count = ?
            ,
                status = ?
            ,
                box_price = ?
            ,
                market_price = ?
            ,
                unit = ?
            ,
                default_standrad_id = ?
            ,
                isdefault = ?
            ,
                all_count = ?
            ,
                stores_brand_id = ?
            ,
                food_id = ?
            ,
                mt_isband = ?
            ,
                mt_image_hash = ?
            ,
                image_hash = ?
            ,
                good_name = ?
            ,
                good_pic = ?
            ,
                egood_pic = ?
            ,
                good_info = ?
            ,
                listorder = ?
            ,
                stores_class_id = ? 
         WHERE sgl_id = ? 
[INFO][2017-08-17 11:52:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
参数2:0
参数3:0
参数4:0
参数5:0
参数6:0
参数7:0
参数8:0
参数9:0
参数10:1
参数11:0.0
参数12:0.0
参数13:null
参数14:0
参数15:null
参数16:0
参数17:9
参数18:null
参数19:null
参数20:null
参数21:null
参数22:大米1
参数23:goodimg/PfJNKZdjAr.jpg
参数24:goodimg/nfZJA6KXzB.jpg
参数25:少时诵诗书
参数26:0
参数27:29
参数28:1
 
[INFO][2017-08-17 11:52:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:52:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:9
 
[INFO][2017-08-17 11:52:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:52:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:9
 
[INFO][2017-08-17 11:52:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-17 11:52:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-17 11:52:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:52:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 11:52:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:52:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:52:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-08-17 11:52:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
参数2:9
 
[INFO][2017-08-17 11:52:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-17 11:52:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-17 11:52:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-17 11:52:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-17 11:52:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-08-17 11:52:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
 
[INFO][2017-08-17 11:52:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:52:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 11:52:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:52:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 11:52:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:52:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 11:52:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:52:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 11:52:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:52:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 11:52:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:52:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 11:52:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 11:52:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:52:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 11:52:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:52:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:52:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 11:52:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 11:52:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 11:52:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:52:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-17 11:52:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:52:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-17 11:52:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:52:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-17 11:52:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:52:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-17 11:52:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:52:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-17 11:52:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:52:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-17 11:52:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:52:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-17 11:52:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 11:52:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 11:52:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 11:52:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-17 11:52:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:52:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
 
[INFO][2017-08-17 11:52:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:52:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
 
[INFO][2017-08-17 11:52:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-17 11:52:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-17 11:52:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:52:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 11:52:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:52:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 11:52:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-08-17 11:52:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
参数2:9
 
[INFO][2017-08-17 11:52:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-17 11:52:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-17 11:52:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-17 11:52:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-17 11:52:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-08-17 11:52:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:9
 
[INFO][2017-08-17 11:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE good_name = ?
            and
                stores_class_id = ? 
         
            ORDER BY sgl_id 
[INFO][2017-08-17 11:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:大米1
参数2:29
 
[INFO][2017-08-17 11:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.updateRecord: 
UPDATE cds_stores_goods_list
         SET stores_id = ?
            ,
                good_id = ?
            ,
                brand_id = ?
            ,
                good_number = ?
            ,
                type = ?
            ,
                elem_count = ?
            ,
                mt_count = ?
            ,
                wx_count = ?
            ,
                box_count = ?
            ,
                status = ?
            ,
                box_price = ?
            ,
                market_price = ?
            ,
                unit = ?
            ,
                default_standrad_id = ?
            ,
                isdefault = ?
            ,
                all_count = ?
            ,
                stores_brand_id = ?
            ,
                food_id = ?
            ,
                mt_isband = ?
            ,
                mt_image_hash = ?
            ,
                image_hash = ?
            ,
                good_name = ?
            ,
                good_pic = ?
            ,
                egood_pic = ?
            ,
                good_info = ?
            ,
                listorder = ?
            ,
                stores_class_id = ? 
         WHERE sgl_id = ? 
[INFO][2017-08-17 11:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:9
参数2:0
参数3:0
参数4:0
参数5:0
参数6:0
参数7:0
参数8:0
参数9:0
参数10:1
参数11:0.0
参数12:0.0
参数13:null
参数14:0
参数15:null
参数16:0
参数17:9
参数18:null
参数19:null
参数20:null
参数21:null
参数22:大米1
参数23:goodimg/PfJNKZdjAr.jpg
参数24:goodimg/nfZJA6KXzB.jpg
参数25:少时诵诗书
参数26:0
参数27:29
参数28:1
 
[INFO][2017-08-17 11:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
 
[INFO][2017-08-17 11:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:53:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
 
[INFO][2017-08-17 11:53:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-17 11:53:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-17 11:53:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:53:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 11:53:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:53:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 11:53:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-08-17 11:53:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:9
 
[INFO][2017-08-17 11:53:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-17 11:53:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-17 11:53:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-17 11:53:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-17 11:53:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-08-17 11:53:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:9
 
[INFO][2017-08-17 11:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-17 11:53:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 11:53:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-17 11:53:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 11:53:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:53:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:10
 
[INFO][2017-08-17 11:53:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:53:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:10
 
[INFO][2017-08-17 11:53:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:53:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
 
[INFO][2017-08-17 11:53:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:53:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
 
[INFO][2017-08-17 11:53:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:53:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
参数2:9
 
[INFO][2017-08-17 11:53:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-08-17 11:53:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
参数2:9
 
[INFO][2017-08-17 11:53:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:53:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:9
 
[INFO][2017-08-17 11:53:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:53:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
参数2:9
 
[INFO][2017-08-17 11:53:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:53:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:9
 
[INFO][2017-08-17 11:53:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:53:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:9
 
[INFO][2017-08-17 11:53:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:53:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
参数2:29
 
[INFO][2017-08-17 11:53:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-08-17 11:53:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
参数2:29
 
[INFO][2017-08-17 11:53:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-08-17 11:53:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
参数2:9
 
[INFO][2017-08-17 11:53:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-08-17 11:53:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:9
 
[INFO][2017-08-17 11:54:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:54:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:10
 
[INFO][2017-08-17 11:54:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:54:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:10
 
[INFO][2017-08-17 11:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:12
 
[INFO][2017-08-17 11:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:54:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:12
 
[INFO][2017-08-17 11:54:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:54:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:16
 
[INFO][2017-08-17 11:54:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:54:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:16
 
[INFO][2017-08-17 11:54:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:54:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:15
 
[INFO][2017-08-17 11:54:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:54:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:15
 
[INFO][2017-08-17 11:54:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:54:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:14
 
[INFO][2017-08-17 11:54:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:54:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:14
 
[INFO][2017-08-17 11:54:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:54:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:13
 
[INFO][2017-08-17 11:54:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:54:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:13
 
[INFO][2017-08-17 11:54:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:54:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:12
 
[INFO][2017-08-17 11:54:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:54:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:12
 
[INFO][2017-08-17 11:54:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:54:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:10
 
[INFO][2017-08-17 11:54:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:54:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:10
 
[INFO][2017-08-17 11:54:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:54:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:15
 
[INFO][2017-08-17 11:54:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:54:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:15
 
[INFO][2017-08-17 11:54:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:54:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:20
 
[INFO][2017-08-17 11:54:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 13 
[INFO][2017-08-17 11:54:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:20
 
[INFO][2017-08-17 11:54:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:54:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:21
 
[INFO][2017-08-17 11:54:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-17 11:54:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:21
 
[INFO][2017-08-17 11:54:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:54:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:19
 
[INFO][2017-08-17 11:54:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:54:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:19
 
[INFO][2017-08-17 11:54:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:54:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:16
 
[INFO][2017-08-17 11:54:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:54:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:16
 
[INFO][2017-08-17 11:54:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:54:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:14
 
[INFO][2017-08-17 11:54:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:54:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:14
 
[INFO][2017-08-17 11:54:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:54:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:12
 
[INFO][2017-08-17 11:54:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:54:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:12
 
[INFO][2017-08-17 11:54:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:54:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:11
 
[INFO][2017-08-17 11:54:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 6 
[INFO][2017-08-17 11:54:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:11
 
[INFO][2017-08-17 11:54:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:54:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:10
 
[INFO][2017-08-17 11:54:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:54:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:10
 
[INFO][2017-08-17 11:54:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:54:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:9
 
[INFO][2017-08-17 11:54:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:54:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:9
 
[INFO][2017-08-17 11:54:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:54:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
参数2:9
 
[INFO][2017-08-17 11:54:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:54:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
参数2:9
 
[INFO][2017-08-17 11:54:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:54:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
参数2:9
 
[INFO][2017-08-17 11:54:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-08-17 11:54:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
参数2:9
 
[INFO][2017-08-17 11:54:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:54:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:9
 
[INFO][2017-08-17 11:54:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:54:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:9
 
[INFO][2017-08-17 11:54:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:54:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:10
 
[INFO][2017-08-17 11:54:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:54:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:10
 
[INFO][2017-08-17 11:54:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:54:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:9
 
[INFO][2017-08-17 11:54:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:54:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:9
 
[INFO][2017-08-17 11:54:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:54:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
参数2:9
 
[INFO][2017-08-17 11:54:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:54:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
参数2:9
 
[INFO][2017-08-17 11:54:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:54:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
参数2:29
 
[INFO][2017-08-17 11:54:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-08-17 11:54:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
参数2:29
 
[INFO][2017-08-17 11:54:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:54:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
参数2:9
 
[INFO][2017-08-17 11:54:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-08-17 11:54:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
参数2:9
 
[INFO][2017-08-17 11:54:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:54:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:9
 
[INFO][2017-08-17 11:54:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:54:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:9
 
[INFO][2017-08-17 11:54:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:54:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:10
 
[INFO][2017-08-17 11:54:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:54:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:10
 
[INFO][2017-08-17 11:54:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:54:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:13
 
[INFO][2017-08-17 11:54:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:54:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:13
 
[INFO][2017-08-17 11:54:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:54:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:9
 
[INFO][2017-08-17 11:54:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:54:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:9
 
[INFO][2017-08-17 11:54:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:54:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:9
参数2:32
 
[INFO][2017-08-17 11:54:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 11:54:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:9
参数2:32
 
[INFO][2017-08-17 11:54:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:54:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
参数2:9
 
[INFO][2017-08-17 11:54:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:54:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
参数2:9
 
[INFO][2017-08-17 11:57:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 11:57:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 11:57:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 11:57:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1032
 
[INFO][2017-08-17 11:57:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 11:57:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 11:57:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-17 11:57:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:47
 
[INFO][2017-08-17 11:57:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 11:57:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 11:57:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-08-17 11:57:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
参数2:9
 
[INFO][2017-08-17 11:57:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 11:57:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 11:57:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-17 11:57:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:47
 
[INFO][2017-08-17 11:57:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStandardList: 
select * from cds_standard_list
         
         WHERE sgl_id = ? 
[INFO][2017-08-17 11:57:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:47
 
[INFO][2017-08-17 11:57:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-08-17 11:57:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:25
 
[INFO][2017-08-17 11:59:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:59:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:10
 
[INFO][2017-08-17 11:59:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:59:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:10
 
[INFO][2017-08-17 11:59:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:59:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:11
 
[INFO][2017-08-17 11:59:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 6 
[INFO][2017-08-17 11:59:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:11
 
[INFO][2017-08-17 11:59:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:59:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:12
 
[INFO][2017-08-17 11:59:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:59:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:12
 
[INFO][2017-08-17 11:59:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:59:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
 
[INFO][2017-08-17 11:59:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:59:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
 
[INFO][2017-08-17 11:59:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:59:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:9
 
[INFO][2017-08-17 11:59:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:59:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:9
 
[INFO][2017-08-17 11:59:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:59:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:10
 
[INFO][2017-08-17 11:59:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:59:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:10
 
[INFO][2017-08-17 11:59:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:59:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:11
 
[INFO][2017-08-17 11:59:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 6 
[INFO][2017-08-17 11:59:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:11
 
[INFO][2017-08-17 11:59:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:59:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:12
 
[INFO][2017-08-17 11:59:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 11:59:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:12
 
[INFO][2017-08-17 11:59:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 11:59:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:9
 
[INFO][2017-08-17 11:59:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 11:59:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:9
 
[INFO][2017-08-17 12:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 12:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 12:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 12:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 12:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 12:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1032
 
[INFO][2017-08-17 12:07:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 12:07:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 12:07:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 12:07:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1032
 
[INFO][2017-08-17 12:07:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 12:07:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 12:12:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 12:12:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 12:12:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 12:12:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1032
 
[INFO][2017-08-17 12:12:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 12:12:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 12:17:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 12:17:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 12:17:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 12:17:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-17 12:17:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 12:17:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 12:22:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 12:22:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-17 12:22:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 12:22:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 12:22:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 12:22:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 12:27:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 12:27:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 12:27:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 12:27:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 12:27:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 12:27:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1032
 
[INFO][2017-08-17 12:32:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 12:32:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 12:32:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 12:32:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 12:32:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 12:32:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1032
 
[INFO][2017-08-17 12:37:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 12:37:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1032
 
[INFO][2017-08-17 12:37:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 12:37:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 12:37:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 12:37:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 12:42:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 12:42:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 12:42:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 12:42:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 12:42:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 12:42:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1032
 
[INFO][2017-08-17 12:47:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 12:47:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 12:47:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 12:47:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 12:47:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 12:47:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-17 12:52:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 12:52:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 12:52:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 12:52:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 12:52:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1032
 
[INFO][2017-08-17 12:52:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 12:57:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 12:57:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 12:57:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 12:57:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 12:57:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 12:57:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1032
 
[INFO][2017-08-17 13:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 13:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 13:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 13:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-17 13:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 13:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 13:07:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 13:07:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 13:07:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 13:07:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 13:07:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 13:07:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1032
 
[INFO][2017-08-17 13:12:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 13:12:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 13:12:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 13:12:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 13:12:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 13:12:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1032
 
[INFO][2017-08-17 13:17:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 13:17:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 13:17:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 13:17:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 13:17:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 13:17:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1032
 
[INFO][2017-08-17 13:22:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 13:22:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 13:22:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 13:22:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 13:22:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 13:22:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1032
 
[INFO][2017-08-17 13:27:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 13:27:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1032
 
[INFO][2017-08-17 13:27:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 13:27:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 13:27:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 13:27:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 13:32:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 13:32:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 13:32:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 13:32:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1032
 
[INFO][2017-08-17 13:32:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 13:32:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 13:37:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 13:37:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 13:37:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 13:37:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 13:37:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 13:37:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1032
 
[INFO][2017-08-17 13:39:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 13:39:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 13:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 13:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 13:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 13:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 13:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 13:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 13:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 13:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 13:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 13:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 13:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 13:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 13:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 13:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 13:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 13:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 13:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 13:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 13:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-17 13:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-17 13:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-17 13:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-17 13:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 13:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 13:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-17 13:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-17 13:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-17 13:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:39:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-17 13:39:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:39:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
 
[INFO][2017-08-17 13:39:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 13:39:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
 
[INFO][2017-08-17 13:39:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:39:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:10
 
[INFO][2017-08-17 13:39:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 13:39:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:10
 
[INFO][2017-08-17 13:39:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:39:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:11
 
[INFO][2017-08-17 13:39:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 6 
[INFO][2017-08-17 13:39:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:11
 
[INFO][2017-08-17 13:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:13
 
[INFO][2017-08-17 13:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 13:39:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:13
 
[INFO][2017-08-17 13:39:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:39:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:15
 
[INFO][2017-08-17 13:39:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 13:39:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:15
 
[INFO][2017-08-17 13:39:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:39:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:9
 
[INFO][2017-08-17 13:39:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 13:39:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:9
 
[INFO][2017-08-17 13:39:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:39:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:10
 
[INFO][2017-08-17 13:39:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 13:39:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:10
 
[INFO][2017-08-17 13:39:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:39:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:10
 
[INFO][2017-08-17 13:39:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 13:39:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:10
 
[INFO][2017-08-17 13:39:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:39:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:10
 
[INFO][2017-08-17 13:39:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 13:39:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:10
 
[INFO][2017-08-17 13:39:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:39:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
参数2:10
 
[INFO][2017-08-17 13:39:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ) 
[INFO][2017-08-17 13:39:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
参数2:10
 
[INFO][2017-08-17 13:39:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:39:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:9
 
[INFO][2017-08-17 13:39:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 13:39:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:9
 
[INFO][2017-08-17 13:39:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:39:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
参数2:9
 
[INFO][2017-08-17 13:39:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-08-17 13:39:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
参数2:9
 
[INFO][2017-08-17 13:39:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:39:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
参数2:9
 
[INFO][2017-08-17 13:39:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 13:39:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
参数2:9
 
[INFO][2017-08-17 13:39:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:39:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:9
参数2:29
 
[INFO][2017-08-17 13:39:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-08-17 13:39:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:9
参数2:29
 
[INFO][2017-08-17 13:39:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:39:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
 
[INFO][2017-08-17 13:39:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 13:39:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
 
[INFO][2017-08-17 13:41:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:41:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:12
 
[INFO][2017-08-17 13:41:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 13:41:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:12
 
[INFO][2017-08-17 13:41:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:41:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:9
 
[INFO][2017-08-17 13:41:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 13:41:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:9
 
[INFO][2017-08-17 13:41:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:41:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
参数2:9
 
[INFO][2017-08-17 13:41:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-08-17 13:41:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
参数2:9
 
[INFO][2017-08-17 13:41:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:41:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:9
 
[INFO][2017-08-17 13:41:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 13:41:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:9
 
[INFO][2017-08-17 13:41:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:41:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:9
 
[INFO][2017-08-17 13:41:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 13:41:53] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:9
 
[INFO][2017-08-17 13:41:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:41:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:21
 
[INFO][2017-08-17 13:41:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-17 13:41:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:21
 
[INFO][2017-08-17 13:41:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:41:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:9
 
[INFO][2017-08-17 13:41:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 13:41:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:9
 
[INFO][2017-08-17 13:41:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:41:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:10
 
[INFO][2017-08-17 13:41:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 13:41:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:10
 
[INFO][2017-08-17 13:42:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:42:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:10
 
[INFO][2017-08-17 13:42:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 13:42:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:10
 
[INFO][2017-08-17 13:42:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:42:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
 
[INFO][2017-08-17 13:42:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 13:42:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
 
[INFO][2017-08-17 13:42:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:42:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:10
 
[INFO][2017-08-17 13:42:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 13:42:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:10
 
[INFO][2017-08-17 13:42:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:42:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:11
 
[INFO][2017-08-17 13:42:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 6 
[INFO][2017-08-17 13:42:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:11
 
[INFO][2017-08-17 13:42:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:42:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:9
 
[INFO][2017-08-17 13:42:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 13:42:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:9
 
[INFO][2017-08-17 13:42:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 13:42:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 13:42:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 30 
[INFO][2017-08-17 13:42:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 13:42:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 13:42:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 13:42:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 30 
[INFO][2017-08-17 13:42:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 13:42:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 13:42:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 13:42:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 13:42:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 13:42:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 13:42:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1032
 
[INFO][2017-08-17 13:42:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 13:42:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 13:42:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 13:42:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 13:42:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 13:42:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 13:42:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 13:42:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 13:42:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 13:42:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 13:42:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 13:42:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 13:42:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-17 13:42:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 13:42:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by listorder desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 13:42:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 13:42:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:42:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-17 13:42:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:42:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-17 13:42:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:42:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-17 13:42:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:42:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-17 13:42:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:42:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-17 13:42:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 13:42:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 13:42:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:42:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-17 13:42:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:42:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-17 13:42:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:42:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-17 13:42:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:42:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-17 13:42:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:42:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-17 13:42:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:42:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-17 13:42:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:42:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-17 13:42:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-17 13:42:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 13:42:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 30 
[INFO][2017-08-17 13:42:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 13:42:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select count(0) from (select b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id)  tmp_count 
[INFO][2017-08-17 13:42:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 13:42:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsClassList: 
select tmp.* from (select (row_number() Over(order by stores_class_id desc)) as rownumber, b.stores_brand_id as sb_id,b.stores_name,b.elem_restaurant_id,b.stores_id,b.brand_id as bd_id,a.* from cds_stores_class a left join cds_stores_brand b on a.stores_brand_id = b.stores_brand_id) tmp where tmp.rownumber between 1 and 30 
[INFO][2017-08-17 13:42:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 13:42:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:42:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:10
 
[INFO][2017-08-17 13:42:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 13:42:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:10
 
[INFO][2017-08-17 13:43:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:43:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:9
 
[INFO][2017-08-17 13:43:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 13:43:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:9
 
[INFO][2017-08-17 13:44:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 13:44:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 13:44:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 30 
[INFO][2017-08-17 13:44:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 13:44:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 13:44:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 13:44:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 30 
[INFO][2017-08-17 13:44:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 13:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-08-17 13:45:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:9
 
[INFO][2017-08-17 13:45:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-08-17 13:45:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:9
 
[INFO][2017-08-17 13:45:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 13:45:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 13:45:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 13:45:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 13:45:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 13:45:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 13:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 13:45:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 13:45:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 13:45:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 13:45:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_gift.getPageRecord: 
select count(0) from (select
            DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
            DATEDIFF(minute,o.create_date,getdate()) as pack_wait_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),o.task_user_time) as takemea_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),getdate()) as takemea_wait_time,
            DATEDIFF(minute,isnull(o.task_order_time,o.create_date),o.task_time) as use_send_time,
            DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),getdate()) as use_send_wait_time,
            s.name stores_name,
            b.brand_name,
            o.*
--             isnull(g.send_type,99) as send_type
            from cds_order_info o
            left join cds_stores s on o.stores_id = s.stores_id
            left join cds_brand b on o.brand_id = b.brand_id
--             left join cds_gift_register_list g on g.phone = o.receiver_phone
         
         WHERE o.create_date >= ? 
            
            
                 AND o.create_date <= ? + ' 23:59:59')  tmp_count 
[INFO][2017-08-17 13:45:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2017-08-17
参数2:2017-08-17
 
[INFO][2017-08-17 13:45:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_gift.getPageRecord: 
select
            DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
            DATEDIFF(minute,o.create_date,getdate()) as pack_wait_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),o.task_user_time) as takemea_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),getdate()) as takemea_wait_time,
            DATEDIFF(minute,isnull(o.task_order_time,o.create_date),o.task_time) as use_send_time,
            DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),getdate()) as use_send_wait_time,
            s.name stores_name,
            b.brand_name,
            o.*
--             isnull(g.send_type,99) as send_type
            from cds_order_info o
            left join cds_stores s on o.stores_id = s.stores_id
            left join cds_brand b on o.brand_id = b.brand_id
--             left join cds_gift_register_list g on g.phone = o.receiver_phone
         
         WHERE o.create_date >= ? 
            
            
                 AND o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-17 13:45:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2017-08-17
参数2:2017-08-17
 
[INFO][2017-08-17 13:45:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 13:45:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 13:45:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_good.getReportGood: 
select temp.class_good_name,
            SUM(good_count) as good_count,
            sum(good_price) as good_price
            from (
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from cds_ms_goods_list
             
                WHERE  sale_time >= ?
                AND sale_time <= ? + ' 23:59:59' 
             
                and class_good_name is not null
                group by class_good_name
                union all
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from view_cds_ms_goods_list
             
                WHERE  create_date >= ?
                AND create_date <= ? + ' 23:59:59' 
             
            and class_good_name is not null
                group by class_good_name
            ) temp
            group by temp.class_good_name
         
              order by good_count desc 
[INFO][2017-08-17 13:45:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2017-08-17
参数2:2017-08-17
参数3:2017-08-17
参数4:2017-08-17
 
[INFO][2017-08-17 13:45:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_good.getReportGood: 
select temp.class_good_name,
            SUM(good_count) as good_count,
            sum(good_price) as good_price
            from (
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from cds_ms_goods_list
             
                WHERE  sale_time >= ?
                AND sale_time <= ? + ' 23:59:59' 
             
                and class_good_name is not null
                group by class_good_name
                union all
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from view_cds_ms_goods_list
             
                WHERE  create_date >= ?
                AND create_date <= ? + ' 23:59:59' 
             
            and class_good_name is not null
                group by class_good_name
            ) temp
            group by temp.class_good_name
         
              order by good_count desc 
[INFO][2017-08-17 13:45:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2017-08-17
参数2:2017-08-17
参数3:2017-08-17
参数4:2017-08-17
 
[INFO][2017-08-17 13:45:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_good.getReportGood: 
select temp.class_good_name,
            SUM(good_count) as good_count,
            sum(good_price) as good_price
            from (
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from cds_ms_goods_list
             
                WHERE  sale_time >= ?
                AND sale_time <= ? + ' 23:59:59' 
             
                and class_good_name is not null
                group by class_good_name
                union all
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from view_cds_ms_goods_list
             
                WHERE  create_date >= ?
                AND create_date <= ? + ' 23:59:59' 
             
            and class_good_name is not null
                group by class_good_name
            ) temp
            group by temp.class_good_name
         
         
              order by good_price desc 
[INFO][2017-08-17 13:45:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2017-08-17
参数2:2017-08-17
参数3:2017-08-17
参数4:2017-08-17
 
[INFO][2017-08-17 13:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_good.getReportGood: 
select temp.class_good_name,
            SUM(good_count) as good_count,
            sum(good_price) as good_price
            from (
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from cds_ms_goods_list
             
                WHERE  sale_time >= ?
                AND sale_time <= ? + ' 23:59:59' 
             
                and class_good_name is not null
                group by class_good_name
                union all
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from view_cds_ms_goods_list
             
                WHERE  create_date >= ?
                AND create_date <= ? + ' 23:59:59' 
             
            and class_good_name is not null
                group by class_good_name
            ) temp
            group by temp.class_good_name
         
              order by good_count desc 
[INFO][2017-08-17 13:45:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2017-08-17
参数2:2017-08-17
参数3:2017-08-17
参数4:2017-08-17
 
[INFO][2017-08-17 13:45:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_good.getEditReportAnalyse: 
select good_name,
          
            cast(cast(sum(good_count_0) as FLOAT)/? as numeric(8,2))  good_count_0,
          
            cast(cast(sum(good_count_1) as FLOAT)/? as numeric(8,2))  good_count_1,
          
            cast(cast(sum(good_count_2) as FLOAT)/? as numeric(8,2))  good_count_2,
          
            cast(cast(sum(good_count_3) as FLOAT)/? as numeric(8,2))  good_count_3,
          
            cast(cast(sum(good_count_4) as FLOAT)/? as numeric(8,2))  good_count_4,
          
            cast(cast(sum(good_count_5) as FLOAT)/? as numeric(8,2))  good_count_5,
          
            cast(cast(sum(good_count_6) as FLOAT)/? as numeric(8,2))  good_count_6,
          
            cast(cast(sum(good_count_7) as FLOAT)/? as numeric(8,2))  good_count_7,
         
        cast(cast(sum(sum_count) as FLOAT)/? as numeric(8,2)) sum_count
            from (
                select isnull(temp.good_name,'合计') as good_name,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_0,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_1,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_2,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_3,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_4,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_5,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_6,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_7,
                 
                    sum(case when t_minute>=? AND t_minute  <  ? then count else 0 end) as sum_count
                from (
                    select cgl.sale_time,
                           convert(int,datename(Hour , cgl.sale_time))*60 + convert(int,datename(minute, cgl.sale_time)) as t_minute,
                           cgl.class_good_name as good_name,
                           cgl.count
                    from cds_ms_goods_list cgl
                    where cgl.sale_time >=?
                    and cgl.sale_time  <= ?  + ' 23:59:59'
                    and cgl.stores_id = ?
                    and class_good_name is not null
                ) temp group by good_name with rollup

				union all
				 select isnull(temp.good_name,'合计') as good_name,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_0,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_1,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_2,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_3,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_4,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_5,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_6,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_7,
                 
                    sum(case when t_minute>=? AND t_minute  <  ? then count else 0 end) as sum_count
                from (
                    select cgl.sale_time,
                           convert(int,datename(Hour, cgl.sale_time))*60 + convert(int,datename(minute, cgl.sale_time)) as t_minute,
                           cgl.class_good_name as good_name,
                           cgl.count
                    from view_cds_ms_goods_list cgl
                    where cgl.create_date >=?
                    and cgl.create_date  <= ?  + ' 23:59:59'
                    and cgl.stores_id = ?
                    and class_good_name is not null
                ) temp group by good_name with rollup
             ) t
			 group by good_name
			 order by sum_count desc 
[INFO][2017-08-17 13:45:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
参数2:1
参数3:1
参数4:1
参数5:1
参数6:1
参数7:1
参数8:1
参数9:1
参数10:825
参数11:855
参数12:855
参数13:885
参数14:885
参数15:915
参数16:915
参数17:945
参数18:945
参数19:975
参数20:975
参数21:1005
参数22:1005
参数23:1035
参数24:1035
参数25:1065
参数26:825
参数27:1065
参数28:2017-08-16
参数29:2017-08-16
参数30:0
参数31:825
参数32:855
参数33:855
参数34:885
参数35:885
参数36:915
参数37:915
参数38:945
参数39:945
参数40:975
参数41:975
参数42:1005
参数43:1005
参数44:1035
参数45:1035
参数46:1065
参数47:825
参数48:1065
参数49:2017-08-16
参数50:2017-08-16
参数51:0
 
[INFO][2017-08-17 13:45:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_good.getEditReportAnalyse: 
select good_name,
          
            cast(cast(sum(good_count_0) as FLOAT)/? as numeric(8,2))  good_count_0,
          
            cast(cast(sum(good_count_1) as FLOAT)/? as numeric(8,2))  good_count_1,
          
            cast(cast(sum(good_count_2) as FLOAT)/? as numeric(8,2))  good_count_2,
          
            cast(cast(sum(good_count_3) as FLOAT)/? as numeric(8,2))  good_count_3,
          
            cast(cast(sum(good_count_4) as FLOAT)/? as numeric(8,2))  good_count_4,
          
            cast(cast(sum(good_count_5) as FLOAT)/? as numeric(8,2))  good_count_5,
          
            cast(cast(sum(good_count_6) as FLOAT)/? as numeric(8,2))  good_count_6,
          
            cast(cast(sum(good_count_7) as FLOAT)/? as numeric(8,2))  good_count_7,
         
        cast(cast(sum(sum_count) as FLOAT)/? as numeric(8,2)) sum_count
            from (
                select isnull(temp.good_name,'合计') as good_name,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_0,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_1,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_2,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_3,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_4,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_5,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_6,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_7,
                 
                    sum(case when t_minute>=? AND t_minute  <  ? then count else 0 end) as sum_count
                from (
                    select cgl.sale_time,
                           convert(int,datename(Hour , cgl.sale_time))*60 + convert(int,datename(minute, cgl.sale_time)) as t_minute,
                           cgl.class_good_name as good_name,
                           cgl.count
                    from cds_ms_goods_list cgl
                    where cgl.sale_time >=?
                    and cgl.sale_time  <= ?  + ' 23:59:59'
                    and cgl.stores_id = ?
                    and class_good_name is not null
                ) temp group by good_name with rollup

				union all
				 select isnull(temp.good_name,'合计') as good_name,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_0,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_1,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_2,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_3,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_4,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_5,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_6,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_7,
                 
                    sum(case when t_minute>=? AND t_minute  <  ? then count else 0 end) as sum_count
                from (
                    select cgl.sale_time,
                           convert(int,datename(Hour, cgl.sale_time))*60 + convert(int,datename(minute, cgl.sale_time)) as t_minute,
                           cgl.class_good_name as good_name,
                           cgl.count
                    from view_cds_ms_goods_list cgl
                    where cgl.create_date >=?
                    and cgl.create_date  <= ?  + ' 23:59:59'
                    and cgl.stores_id = ?
                    and class_good_name is not null
                ) temp group by good_name with rollup
             ) t
			 group by good_name
			 order by sum_count desc 
[INFO][2017-08-17 13:45:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
参数2:1
参数3:1
参数4:1
参数5:1
参数6:1
参数7:1
参数8:1
参数9:1
参数10:825
参数11:855
参数12:855
参数13:885
参数14:885
参数15:915
参数16:915
参数17:945
参数18:945
参数19:975
参数20:975
参数21:1005
参数22:1005
参数23:1035
参数24:1035
参数25:1065
参数26:825
参数27:1065
参数28:2017-08-16
参数29:2017-08-16
参数30:0
参数31:825
参数32:855
参数33:855
参数34:885
参数35:885
参数36:915
参数37:915
参数38:945
参数39:945
参数40:975
参数41:975
参数42:1005
参数43:1005
参数44:1035
参数45:1035
参数46:1065
参数47:825
参数48:1065
参数49:2017-08-16
参数50:2017-08-16
参数51:0
 
[INFO][2017-08-17 13:46:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_good.getEditReportAnalyse: 
select good_name,
          
            cast(cast(sum(good_count_0) as FLOAT)/? as numeric(8,2))  good_count_0,
          
            cast(cast(sum(good_count_1) as FLOAT)/? as numeric(8,2))  good_count_1,
          
            cast(cast(sum(good_count_2) as FLOAT)/? as numeric(8,2))  good_count_2,
          
            cast(cast(sum(good_count_3) as FLOAT)/? as numeric(8,2))  good_count_3,
          
            cast(cast(sum(good_count_4) as FLOAT)/? as numeric(8,2))  good_count_4,
          
            cast(cast(sum(good_count_5) as FLOAT)/? as numeric(8,2))  good_count_5,
          
            cast(cast(sum(good_count_6) as FLOAT)/? as numeric(8,2))  good_count_6,
          
            cast(cast(sum(good_count_7) as FLOAT)/? as numeric(8,2))  good_count_7,
          
            cast(cast(sum(good_count_8) as FLOAT)/? as numeric(8,2))  good_count_8,
          
            cast(cast(sum(good_count_9) as FLOAT)/? as numeric(8,2))  good_count_9,
          
            cast(cast(sum(good_count_10) as FLOAT)/? as numeric(8,2))  good_count_10,
          
            cast(cast(sum(good_count_11) as FLOAT)/? as numeric(8,2))  good_count_11,
          
            cast(cast(sum(good_count_12) as FLOAT)/? as numeric(8,2))  good_count_12,
          
            cast(cast(sum(good_count_13) as FLOAT)/? as numeric(8,2))  good_count_13,
          
            cast(cast(sum(good_count_14) as FLOAT)/? as numeric(8,2))  good_count_14,
          
            cast(cast(sum(good_count_15) as FLOAT)/? as numeric(8,2))  good_count_15,
          
            cast(cast(sum(good_count_16) as FLOAT)/? as numeric(8,2))  good_count_16,
          
            cast(cast(sum(good_count_17) as FLOAT)/? as numeric(8,2))  good_count_17,
          
            cast(cast(sum(good_count_18) as FLOAT)/? as numeric(8,2))  good_count_18,
          
            cast(cast(sum(good_count_19) as FLOAT)/? as numeric(8,2))  good_count_19,
          
            cast(cast(sum(good_count_20) as FLOAT)/? as numeric(8,2))  good_count_20,
          
            cast(cast(sum(good_count_21) as FLOAT)/? as numeric(8,2))  good_count_21,
          
            cast(cast(sum(good_count_22) as FLOAT)/? as numeric(8,2))  good_count_22,
          
            cast(cast(sum(good_count_23) as FLOAT)/? as numeric(8,2))  good_count_23,
          
            cast(cast(sum(good_count_24) as FLOAT)/? as numeric(8,2))  good_count_24,
          
            cast(cast(sum(good_count_25) as FLOAT)/? as numeric(8,2))  good_count_25,
          
            cast(cast(sum(good_count_26) as FLOAT)/? as numeric(8,2))  good_count_26,
          
            cast(cast(sum(good_count_27) as FLOAT)/? as numeric(8,2))  good_count_27,
          
            cast(cast(sum(good_count_28) as FLOAT)/? as numeric(8,2))  good_count_28,
          
            cast(cast(sum(good_count_29) as FLOAT)/? as numeric(8,2))  good_count_29,
          
            cast(cast(sum(good_count_30) as FLOAT)/? as numeric(8,2))  good_count_30,
          
            cast(cast(sum(good_count_31) as FLOAT)/? as numeric(8,2))  good_count_31,
         
        cast(cast(sum(sum_count) as FLOAT)/? as numeric(8,2)) sum_count
            from (
                select isnull(temp.good_name,'合计') as good_name,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_0,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_1,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_2,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_3,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_4,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_5,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_6,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_7,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_8,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_9,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_10,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_11,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_12,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_13,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_14,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_15,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_16,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_17,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_18,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_19,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_20,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_21,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_22,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_23,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_24,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_25,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_26,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_27,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_28,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_29,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_30,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_31,
                 
                    sum(case when t_minute>=? AND t_minute  <  ? then count else 0 end) as sum_count
                from (
                    select cgl.sale_time,
                           convert(int,datename(Hour , cgl.sale_time))*60 + convert(int,datename(minute, cgl.sale_time)) as t_minute,
                           cgl.class_good_name as good_name,
                           cgl.count
                    from cds_ms_goods_list cgl
                    where cgl.sale_time >=?
                    and cgl.sale_time  <= ?  + ' 23:59:59'
                    and cgl.stores_id = ?
                    and class_good_name is not null
                ) temp group by good_name with rollup

				union all
				 select isnull(temp.good_name,'合计') as good_name,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_0,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_1,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_2,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_3,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_4,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_5,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_6,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_7,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_8,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_9,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_10,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_11,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_12,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_13,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_14,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_15,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_16,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_17,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_18,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_19,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_20,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_21,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_22,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_23,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_24,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_25,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_26,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_27,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_28,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_29,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_30,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_31,
                 
                    sum(case when t_minute>=? AND t_minute  <  ? then count else 0 end) as sum_count
                from (
                    select cgl.sale_time,
                           convert(int,datename(Hour, cgl.sale_time))*60 + convert(int,datename(minute, cgl.sale_time)) as t_minute,
                           cgl.class_good_name as good_name,
                           cgl.count
                    from view_cds_ms_goods_list cgl
                    where cgl.create_date >=?
                    and cgl.create_date  <= ?  + ' 23:59:59'
                    and cgl.stores_id = ?
                    and class_good_name is not null
                ) temp group by good_name with rollup
             ) t
			 group by good_name
			 order by sum_count desc 
[INFO][2017-08-17 13:46:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:7
参数2:7
参数3:7
参数4:7
参数5:7
参数6:7
参数7:7
参数8:7
参数9:7
参数10:7
参数11:7
参数12:7
参数13:7
参数14:7
参数15:7
参数16:7
参数17:7
参数18:7
参数19:7
参数20:7
参数21:7
参数22:7
参数23:7
参数24:7
参数25:7
参数26:7
参数27:7
参数28:7
参数29:7
参数30:7
参数31:7
参数32:7
参数33:7
参数34:105
参数35:135
参数36:135
参数37:165
参数38:165
参数39:195
参数40:195
参数41:225
参数42:225
参数43:255
参数44:255
参数45:285
参数46:285
参数47:315
参数48:315
参数49:345
参数50:345
参数51:375
参数52:375
参数53:405
参数54:405
参数55:435
参数56:435
参数57:465
参数58:465
参数59:495
参数60:495
参数61:525
参数62:525
参数63:555
参数64:555
参数65:585
参数66:585
参数67:615
参数68:615
参数69:645
参数70:645
参数71:675
参数72:675
参数73:705
参数74:705
参数75:735
参数76:735
参数77:765
参数78:765
参数79:795
参数80:795
参数81:825
参数82:825
参数83:855
参数84:855
参数85:885
参数86:885
参数87:915
参数88:915
参数89:945
参数90:945
参数91:975
参数92:975
参数93:1005
参数94:1005
参数95:1035
参数96:1035
参数97:1065
参数98:105
参数99:1065
参数100:2017-08-10
参数101:2017-08-16
参数102:0
参数103:105
参数104:135
参数105:135
参数106:165
参数107:165
参数108:195
参数109:195
参数110:225
参数111:225
参数112:255
参数113:255
参数114:285
参数115:285
参数116:315
参数117:315
参数118:345
参数119:345
参数120:375
参数121:375
参数122:405
参数123:405
参数124:435
参数125:435
参数126:465
参数127:465
参数128:495
参数129:495
参数130:525
参数131:525
参数132:555
参数133:555
参数134:585
参数135:585
参数136:615
参数137:615
参数138:645
参数139:645
参数140:675
参数141:675
参数142:705
参数143:705
参数144:735
参数145:735
参数146:765
参数147:765
参数148:795
参数149:795
参数150:825
参数151:825
参数152:855
参数153:855
参数154:885
参数155:885
参数156:915
参数157:915
参数158:945
参数159:945
参数160:975
参数161:975
参数162:1005
参数163:1005
参数164:1035
参数165:1035
参数166:1065
参数167:105
参数168:1065
参数169:2017-08-10
参数170:2017-08-16
参数171:0
 
[INFO][2017-08-17 13:46:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_good.getEditReportAnalyse: 
select good_name,
          
            cast(cast(sum(good_count_0) as FLOAT)/? as numeric(8,2))  good_count_0,
          
            cast(cast(sum(good_count_1) as FLOAT)/? as numeric(8,2))  good_count_1,
          
            cast(cast(sum(good_count_2) as FLOAT)/? as numeric(8,2))  good_count_2,
          
            cast(cast(sum(good_count_3) as FLOAT)/? as numeric(8,2))  good_count_3,
          
            cast(cast(sum(good_count_4) as FLOAT)/? as numeric(8,2))  good_count_4,
          
            cast(cast(sum(good_count_5) as FLOAT)/? as numeric(8,2))  good_count_5,
          
            cast(cast(sum(good_count_6) as FLOAT)/? as numeric(8,2))  good_count_6,
          
            cast(cast(sum(good_count_7) as FLOAT)/? as numeric(8,2))  good_count_7,
          
            cast(cast(sum(good_count_8) as FLOAT)/? as numeric(8,2))  good_count_8,
          
            cast(cast(sum(good_count_9) as FLOAT)/? as numeric(8,2))  good_count_9,
          
            cast(cast(sum(good_count_10) as FLOAT)/? as numeric(8,2))  good_count_10,
          
            cast(cast(sum(good_count_11) as FLOAT)/? as numeric(8,2))  good_count_11,
          
            cast(cast(sum(good_count_12) as FLOAT)/? as numeric(8,2))  good_count_12,
          
            cast(cast(sum(good_count_13) as FLOAT)/? as numeric(8,2))  good_count_13,
          
            cast(cast(sum(good_count_14) as FLOAT)/? as numeric(8,2))  good_count_14,
          
            cast(cast(sum(good_count_15) as FLOAT)/? as numeric(8,2))  good_count_15,
          
            cast(cast(sum(good_count_16) as FLOAT)/? as numeric(8,2))  good_count_16,
          
            cast(cast(sum(good_count_17) as FLOAT)/? as numeric(8,2))  good_count_17,
          
            cast(cast(sum(good_count_18) as FLOAT)/? as numeric(8,2))  good_count_18,
          
            cast(cast(sum(good_count_19) as FLOAT)/? as numeric(8,2))  good_count_19,
          
            cast(cast(sum(good_count_20) as FLOAT)/? as numeric(8,2))  good_count_20,
          
            cast(cast(sum(good_count_21) as FLOAT)/? as numeric(8,2))  good_count_21,
          
            cast(cast(sum(good_count_22) as FLOAT)/? as numeric(8,2))  good_count_22,
          
            cast(cast(sum(good_count_23) as FLOAT)/? as numeric(8,2))  good_count_23,
          
            cast(cast(sum(good_count_24) as FLOAT)/? as numeric(8,2))  good_count_24,
          
            cast(cast(sum(good_count_25) as FLOAT)/? as numeric(8,2))  good_count_25,
          
            cast(cast(sum(good_count_26) as FLOAT)/? as numeric(8,2))  good_count_26,
          
            cast(cast(sum(good_count_27) as FLOAT)/? as numeric(8,2))  good_count_27,
          
            cast(cast(sum(good_count_28) as FLOAT)/? as numeric(8,2))  good_count_28,
          
            cast(cast(sum(good_count_29) as FLOAT)/? as numeric(8,2))  good_count_29,
          
            cast(cast(sum(good_count_30) as FLOAT)/? as numeric(8,2))  good_count_30,
          
            cast(cast(sum(good_count_31) as FLOAT)/? as numeric(8,2))  good_count_31,
         
        cast(cast(sum(sum_count) as FLOAT)/? as numeric(8,2)) sum_count
            from (
                select isnull(temp.good_name,'合计') as good_name,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_0,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_1,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_2,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_3,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_4,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_5,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_6,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_7,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_8,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_9,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_10,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_11,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_12,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_13,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_14,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_15,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_16,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_17,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_18,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_19,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_20,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_21,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_22,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_23,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_24,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_25,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_26,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_27,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_28,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_29,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_30,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_31,
                 
                    sum(case when t_minute>=? AND t_minute  <  ? then count else 0 end) as sum_count
                from (
                    select cgl.sale_time,
                           convert(int,datename(Hour , cgl.sale_time))*60 + convert(int,datename(minute, cgl.sale_time)) as t_minute,
                           cgl.class_good_name as good_name,
                           cgl.count
                    from cds_ms_goods_list cgl
                    where cgl.sale_time >=?
                    and cgl.sale_time  <= ?  + ' 23:59:59'
                    and cgl.stores_id = ?
                    and class_good_name is not null
                ) temp group by good_name with rollup

				union all
				 select isnull(temp.good_name,'合计') as good_name,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_0,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_1,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_2,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_3,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_4,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_5,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_6,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_7,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_8,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_9,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_10,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_11,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_12,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_13,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_14,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_15,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_16,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_17,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_18,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_19,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_20,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_21,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_22,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_23,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_24,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_25,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_26,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_27,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_28,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_29,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_30,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_31,
                 
                    sum(case when t_minute>=? AND t_minute  <  ? then count else 0 end) as sum_count
                from (
                    select cgl.sale_time,
                           convert(int,datename(Hour, cgl.sale_time))*60 + convert(int,datename(minute, cgl.sale_time)) as t_minute,
                           cgl.class_good_name as good_name,
                           cgl.count
                    from view_cds_ms_goods_list cgl
                    where cgl.create_date >=?
                    and cgl.create_date  <= ?  + ' 23:59:59'
                    and cgl.stores_id = ?
                    and class_good_name is not null
                ) temp group by good_name with rollup
             ) t
			 group by good_name
			 order by sum_count desc 
[INFO][2017-08-17 13:46:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:7
参数2:7
参数3:7
参数4:7
参数5:7
参数6:7
参数7:7
参数8:7
参数9:7
参数10:7
参数11:7
参数12:7
参数13:7
参数14:7
参数15:7
参数16:7
参数17:7
参数18:7
参数19:7
参数20:7
参数21:7
参数22:7
参数23:7
参数24:7
参数25:7
参数26:7
参数27:7
参数28:7
参数29:7
参数30:7
参数31:7
参数32:7
参数33:7
参数34:105
参数35:135
参数36:135
参数37:165
参数38:165
参数39:195
参数40:195
参数41:225
参数42:225
参数43:255
参数44:255
参数45:285
参数46:285
参数47:315
参数48:315
参数49:345
参数50:345
参数51:375
参数52:375
参数53:405
参数54:405
参数55:435
参数56:435
参数57:465
参数58:465
参数59:495
参数60:495
参数61:525
参数62:525
参数63:555
参数64:555
参数65:585
参数66:585
参数67:615
参数68:615
参数69:645
参数70:645
参数71:675
参数72:675
参数73:705
参数74:705
参数75:735
参数76:735
参数77:765
参数78:765
参数79:795
参数80:795
参数81:825
参数82:825
参数83:855
参数84:855
参数85:885
参数86:885
参数87:915
参数88:915
参数89:945
参数90:945
参数91:975
参数92:975
参数93:1005
参数94:1005
参数95:1035
参数96:1035
参数97:1065
参数98:105
参数99:1065
参数100:2017-08-10
参数101:2017-08-16
参数102:0
参数103:105
参数104:135
参数105:135
参数106:165
参数107:165
参数108:195
参数109:195
参数110:225
参数111:225
参数112:255
参数113:255
参数114:285
参数115:285
参数116:315
参数117:315
参数118:345
参数119:345
参数120:375
参数121:375
参数122:405
参数123:405
参数124:435
参数125:435
参数126:465
参数127:465
参数128:495
参数129:495
参数130:525
参数131:525
参数132:555
参数133:555
参数134:585
参数135:585
参数136:615
参数137:615
参数138:645
参数139:645
参数140:675
参数141:675
参数142:705
参数143:705
参数144:735
参数145:735
参数146:765
参数147:765
参数148:795
参数149:795
参数150:825
参数151:825
参数152:855
参数153:855
参数154:885
参数155:885
参数156:915
参数157:915
参数158:945
参数159:945
参数160:975
参数161:975
参数162:1005
参数163:1005
参数164:1035
参数165:1035
参数166:1065
参数167:105
参数168:1065
参数169:2017-08-10
参数170:2017-08-16
参数171:0
 
[INFO][2017-08-17 13:46:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_good.getEditReportAnalyse: 
select good_name,
          
            cast(cast(sum(good_count_0) as FLOAT)/? as numeric(8,2))  good_count_0,
          
            cast(cast(sum(good_count_1) as FLOAT)/? as numeric(8,2))  good_count_1,
          
            cast(cast(sum(good_count_2) as FLOAT)/? as numeric(8,2))  good_count_2,
          
            cast(cast(sum(good_count_3) as FLOAT)/? as numeric(8,2))  good_count_3,
          
            cast(cast(sum(good_count_4) as FLOAT)/? as numeric(8,2))  good_count_4,
          
            cast(cast(sum(good_count_5) as FLOAT)/? as numeric(8,2))  good_count_5,
          
            cast(cast(sum(good_count_6) as FLOAT)/? as numeric(8,2))  good_count_6,
          
            cast(cast(sum(good_count_7) as FLOAT)/? as numeric(8,2))  good_count_7,
          
            cast(cast(sum(good_count_8) as FLOAT)/? as numeric(8,2))  good_count_8,
          
            cast(cast(sum(good_count_9) as FLOAT)/? as numeric(8,2))  good_count_9,
          
            cast(cast(sum(good_count_10) as FLOAT)/? as numeric(8,2))  good_count_10,
          
            cast(cast(sum(good_count_11) as FLOAT)/? as numeric(8,2))  good_count_11,
          
            cast(cast(sum(good_count_12) as FLOAT)/? as numeric(8,2))  good_count_12,
          
            cast(cast(sum(good_count_13) as FLOAT)/? as numeric(8,2))  good_count_13,
          
            cast(cast(sum(good_count_14) as FLOAT)/? as numeric(8,2))  good_count_14,
          
            cast(cast(sum(good_count_15) as FLOAT)/? as numeric(8,2))  good_count_15,
          
            cast(cast(sum(good_count_16) as FLOAT)/? as numeric(8,2))  good_count_16,
          
            cast(cast(sum(good_count_17) as FLOAT)/? as numeric(8,2))  good_count_17,
          
            cast(cast(sum(good_count_18) as FLOAT)/? as numeric(8,2))  good_count_18,
          
            cast(cast(sum(good_count_19) as FLOAT)/? as numeric(8,2))  good_count_19,
          
            cast(cast(sum(good_count_20) as FLOAT)/? as numeric(8,2))  good_count_20,
          
            cast(cast(sum(good_count_21) as FLOAT)/? as numeric(8,2))  good_count_21,
          
            cast(cast(sum(good_count_22) as FLOAT)/? as numeric(8,2))  good_count_22,
          
            cast(cast(sum(good_count_23) as FLOAT)/? as numeric(8,2))  good_count_23,
          
            cast(cast(sum(good_count_24) as FLOAT)/? as numeric(8,2))  good_count_24,
          
            cast(cast(sum(good_count_25) as FLOAT)/? as numeric(8,2))  good_count_25,
          
            cast(cast(sum(good_count_26) as FLOAT)/? as numeric(8,2))  good_count_26,
          
            cast(cast(sum(good_count_27) as FLOAT)/? as numeric(8,2))  good_count_27,
          
            cast(cast(sum(good_count_28) as FLOAT)/? as numeric(8,2))  good_count_28,
          
            cast(cast(sum(good_count_29) as FLOAT)/? as numeric(8,2))  good_count_29,
          
            cast(cast(sum(good_count_30) as FLOAT)/? as numeric(8,2))  good_count_30,
          
            cast(cast(sum(good_count_31) as FLOAT)/? as numeric(8,2))  good_count_31,
         
        cast(cast(sum(sum_count) as FLOAT)/? as numeric(8,2)) sum_count
            from (
                select isnull(temp.good_name,'合计') as good_name,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_0,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_1,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_2,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_3,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_4,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_5,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_6,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_7,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_8,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_9,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_10,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_11,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_12,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_13,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_14,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_15,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_16,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_17,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_18,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_19,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_20,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_21,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_22,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_23,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_24,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_25,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_26,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_27,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_28,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_29,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_30,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_31,
                 
                    sum(case when t_minute>=? AND t_minute  <  ? then count else 0 end) as sum_count
                from (
                    select cgl.sale_time,
                           convert(int,datename(Hour , cgl.sale_time))*60 + convert(int,datename(minute, cgl.sale_time)) as t_minute,
                           cgl.class_good_name as good_name,
                           cgl.count
                    from cds_ms_goods_list cgl
                    where cgl.sale_time >=?
                    and cgl.sale_time  <= ?  + ' 23:59:59'
                    and cgl.stores_id = ?
                    and class_good_name is not null
                ) temp group by good_name with rollup

				union all
				 select isnull(temp.good_name,'合计') as good_name,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_0,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_1,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_2,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_3,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_4,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_5,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_6,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_7,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_8,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_9,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_10,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_11,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_12,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_13,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_14,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_15,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_16,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_17,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_18,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_19,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_20,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_21,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_22,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_23,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_24,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_25,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_26,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_27,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_28,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_29,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_30,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_31,
                 
                    sum(case when t_minute>=? AND t_minute  <  ? then count else 0 end) as sum_count
                from (
                    select cgl.sale_time,
                           convert(int,datename(Hour, cgl.sale_time))*60 + convert(int,datename(minute, cgl.sale_time)) as t_minute,
                           cgl.class_good_name as good_name,
                           cgl.count
                    from view_cds_ms_goods_list cgl
                    where cgl.create_date >=?
                    and cgl.create_date  <= ?  + ' 23:59:59'
                    and cgl.stores_id = ?
                    and class_good_name is not null
                ) temp group by good_name with rollup
             ) t
			 group by good_name
			 order by sum_count desc 
[INFO][2017-08-17 13:46:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:7
参数2:7
参数3:7
参数4:7
参数5:7
参数6:7
参数7:7
参数8:7
参数9:7
参数10:7
参数11:7
参数12:7
参数13:7
参数14:7
参数15:7
参数16:7
参数17:7
参数18:7
参数19:7
参数20:7
参数21:7
参数22:7
参数23:7
参数24:7
参数25:7
参数26:7
参数27:7
参数28:7
参数29:7
参数30:7
参数31:7
参数32:7
参数33:7
参数34:105
参数35:135
参数36:135
参数37:165
参数38:165
参数39:195
参数40:195
参数41:225
参数42:225
参数43:255
参数44:255
参数45:285
参数46:285
参数47:315
参数48:315
参数49:345
参数50:345
参数51:375
参数52:375
参数53:405
参数54:405
参数55:435
参数56:435
参数57:465
参数58:465
参数59:495
参数60:495
参数61:525
参数62:525
参数63:555
参数64:555
参数65:585
参数66:585
参数67:615
参数68:615
参数69:645
参数70:645
参数71:675
参数72:675
参数73:705
参数74:705
参数75:735
参数76:735
参数77:765
参数78:765
参数79:795
参数80:795
参数81:825
参数82:825
参数83:855
参数84:855
参数85:885
参数86:885
参数87:915
参数88:915
参数89:945
参数90:945
参数91:975
参数92:975
参数93:1005
参数94:1005
参数95:1035
参数96:1035
参数97:1065
参数98:105
参数99:1065
参数100:2017-08-10
参数101:2017-08-16
参数102:0
参数103:105
参数104:135
参数105:135
参数106:165
参数107:165
参数108:195
参数109:195
参数110:225
参数111:225
参数112:255
参数113:255
参数114:285
参数115:285
参数116:315
参数117:315
参数118:345
参数119:345
参数120:375
参数121:375
参数122:405
参数123:405
参数124:435
参数125:435
参数126:465
参数127:465
参数128:495
参数129:495
参数130:525
参数131:525
参数132:555
参数133:555
参数134:585
参数135:585
参数136:615
参数137:615
参数138:645
参数139:645
参数140:675
参数141:675
参数142:705
参数143:705
参数144:735
参数145:735
参数146:765
参数147:765
参数148:795
参数149:795
参数150:825
参数151:825
参数152:855
参数153:855
参数154:885
参数155:885
参数156:915
参数157:915
参数158:945
参数159:945
参数160:975
参数161:975
参数162:1005
参数163:1005
参数164:1035
参数165:1035
参数166:1065
参数167:105
参数168:1065
参数169:2017-08-10
参数170:2017-08-16
参数171:0
 
[INFO][2017-08-17 13:46:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_good.getEditReportAnalyse: 
select good_name,
          
            cast(cast(sum(good_count_0) as FLOAT)/? as numeric(8,2))  good_count_0,
          
            cast(cast(sum(good_count_1) as FLOAT)/? as numeric(8,2))  good_count_1,
          
            cast(cast(sum(good_count_2) as FLOAT)/? as numeric(8,2))  good_count_2,
          
            cast(cast(sum(good_count_3) as FLOAT)/? as numeric(8,2))  good_count_3,
          
            cast(cast(sum(good_count_4) as FLOAT)/? as numeric(8,2))  good_count_4,
          
            cast(cast(sum(good_count_5) as FLOAT)/? as numeric(8,2))  good_count_5,
          
            cast(cast(sum(good_count_6) as FLOAT)/? as numeric(8,2))  good_count_6,
          
            cast(cast(sum(good_count_7) as FLOAT)/? as numeric(8,2))  good_count_7,
          
            cast(cast(sum(good_count_8) as FLOAT)/? as numeric(8,2))  good_count_8,
          
            cast(cast(sum(good_count_9) as FLOAT)/? as numeric(8,2))  good_count_9,
          
            cast(cast(sum(good_count_10) as FLOAT)/? as numeric(8,2))  good_count_10,
          
            cast(cast(sum(good_count_11) as FLOAT)/? as numeric(8,2))  good_count_11,
          
            cast(cast(sum(good_count_12) as FLOAT)/? as numeric(8,2))  good_count_12,
          
            cast(cast(sum(good_count_13) as FLOAT)/? as numeric(8,2))  good_count_13,
          
            cast(cast(sum(good_count_14) as FLOAT)/? as numeric(8,2))  good_count_14,
          
            cast(cast(sum(good_count_15) as FLOAT)/? as numeric(8,2))  good_count_15,
          
            cast(cast(sum(good_count_16) as FLOAT)/? as numeric(8,2))  good_count_16,
          
            cast(cast(sum(good_count_17) as FLOAT)/? as numeric(8,2))  good_count_17,
          
            cast(cast(sum(good_count_18) as FLOAT)/? as numeric(8,2))  good_count_18,
          
            cast(cast(sum(good_count_19) as FLOAT)/? as numeric(8,2))  good_count_19,
          
            cast(cast(sum(good_count_20) as FLOAT)/? as numeric(8,2))  good_count_20,
          
            cast(cast(sum(good_count_21) as FLOAT)/? as numeric(8,2))  good_count_21,
          
            cast(cast(sum(good_count_22) as FLOAT)/? as numeric(8,2))  good_count_22,
          
            cast(cast(sum(good_count_23) as FLOAT)/? as numeric(8,2))  good_count_23,
          
            cast(cast(sum(good_count_24) as FLOAT)/? as numeric(8,2))  good_count_24,
          
            cast(cast(sum(good_count_25) as FLOAT)/? as numeric(8,2))  good_count_25,
          
            cast(cast(sum(good_count_26) as FLOAT)/? as numeric(8,2))  good_count_26,
          
            cast(cast(sum(good_count_27) as FLOAT)/? as numeric(8,2))  good_count_27,
          
            cast(cast(sum(good_count_28) as FLOAT)/? as numeric(8,2))  good_count_28,
          
            cast(cast(sum(good_count_29) as FLOAT)/? as numeric(8,2))  good_count_29,
          
            cast(cast(sum(good_count_30) as FLOAT)/? as numeric(8,2))  good_count_30,
          
            cast(cast(sum(good_count_31) as FLOAT)/? as numeric(8,2))  good_count_31,
          
            cast(cast(sum(good_count_32) as FLOAT)/? as numeric(8,2))  good_count_32,
          
            cast(cast(sum(good_count_33) as FLOAT)/? as numeric(8,2))  good_count_33,
          
            cast(cast(sum(good_count_34) as FLOAT)/? as numeric(8,2))  good_count_34,
          
            cast(cast(sum(good_count_35) as FLOAT)/? as numeric(8,2))  good_count_35,
         
        cast(cast(sum(sum_count) as FLOAT)/? as numeric(8,2)) sum_count
            from (
                select isnull(temp.good_name,'合计') as good_name,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_0,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_1,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_2,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_3,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_4,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_5,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_6,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_7,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_8,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_9,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_10,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_11,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_12,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_13,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_14,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_15,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_16,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_17,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_18,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_19,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_20,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_21,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_22,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_23,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_24,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_25,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_26,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_27,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_28,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_29,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_30,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_31,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_32,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_33,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_34,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_35,
                 
                    sum(case when t_minute>=? AND t_minute  <  ? then count else 0 end) as sum_count
                from (
                    select cgl.sale_time,
                           convert(int,datename(Hour , cgl.sale_time))*60 + convert(int,datename(minute, cgl.sale_time)) as t_minute,
                           cgl.class_good_name as good_name,
                           cgl.count
                    from cds_ms_goods_list cgl
                    where cgl.sale_time >=?
                    and cgl.sale_time  <= ?  + ' 23:59:59'
                    and cgl.stores_id = ?
                    and class_good_name is not null
                ) temp group by good_name with rollup

				union all
				 select isnull(temp.good_name,'合计') as good_name,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_0,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_1,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_2,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_3,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_4,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_5,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_6,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_7,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_8,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_9,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_10,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_11,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_12,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_13,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_14,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_15,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_16,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_17,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_18,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_19,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_20,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_21,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_22,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_23,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_24,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_25,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_26,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_27,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_28,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_29,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_30,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_31,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_32,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_33,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_34,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_35,
                 
                    sum(case when t_minute>=? AND t_minute  <  ? then count else 0 end) as sum_count
                from (
                    select cgl.sale_time,
                           convert(int,datename(Hour, cgl.sale_time))*60 + convert(int,datename(minute, cgl.sale_time)) as t_minute,
                           cgl.class_good_name as good_name,
                           cgl.count
                    from view_cds_ms_goods_list cgl
                    where cgl.create_date >=?
                    and cgl.create_date  <= ?  + ' 23:59:59'
                    and cgl.stores_id = ?
                    and class_good_name is not null
                ) temp group by good_name with rollup
             ) t
			 group by good_name
			 order by sum_count desc 
[INFO][2017-08-17 13:46:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:7
参数2:7
参数3:7
参数4:7
参数5:7
参数6:7
参数7:7
参数8:7
参数9:7
参数10:7
参数11:7
参数12:7
参数13:7
参数14:7
参数15:7
参数16:7
参数17:7
参数18:7
参数19:7
参数20:7
参数21:7
参数22:7
参数23:7
参数24:7
参数25:7
参数26:7
参数27:7
参数28:7
参数29:7
参数30:7
参数31:7
参数32:7
参数33:7
参数34:7
参数35:7
参数36:7
参数37:7
参数38:0
参数39:30
参数40:30
参数41:60
参数42:60
参数43:90
参数44:90
参数45:120
参数46:120
参数47:150
参数48:150
参数49:180
参数50:180
参数51:210
参数52:210
参数53:240
参数54:240
参数55:270
参数56:270
参数57:300
参数58:300
参数59:330
参数60:330
参数61:360
参数62:360
参数63:390
参数64:390
参数65:420
参数66:420
参数67:450
参数68:450
参数69:480
参数70:480
参数71:510
参数72:510
参数73:540
参数74:540
参数75:570
参数76:570
参数77:600
参数78:600
参数79:630
参数80:630
参数81:660
参数82:660
参数83:690
参数84:690
参数85:720
参数86:720
参数87:750
参数88:750
参数89:780
参数90:780
参数91:810
参数92:810
参数93:840
参数94:840
参数95:870
参数96:870
参数97:900
参数98:900
参数99:930
参数100:930
参数101:960
参数102:960
参数103:990
参数104:990
参数105:1020
参数106:1020
参数107:1050
参数108:1050
参数109:1065
参数110:0
参数111:1065
参数112:2017-08-10
参数113:2017-08-16
参数114:0
参数115:0
参数116:30
参数117:30
参数118:60
参数119:60
参数120:90
参数121:90
参数122:120
参数123:120
参数124:150
参数125:150
参数126:180
参数127:180
参数128:210
参数129:210
参数130:240
参数131:240
参数132:270
参数133:270
参数134:300
参数135:300
参数136:330
参数137:330
参数138:360
参数139:360
参数140:390
参数141:390
参数142:420
参数143:420
参数144:450
参数145:450
参数146:480
参数147:480
参数148:510
参数149:510
参数150:540
参数151:540
参数152:570
参数153:570
参数154:600
参数155:600
参数156:630
参数157:630
参数158:660
参数159:660
参数160:690
参数161:690
参数162:720
参数163:720
参数164:750
参数165:750
参数166:780
参数167:780
参数168:810
参数169:810
参数170:840
参数171:840
参数172:870
参数173:870
参数174:900
参数175:900
参数176:930
参数177:930
参数178:960
参数179:960
参数180:990
参数181:990
参数182:1020
参数183:1020
参数184:1050
参数185:1050
参数186:1065
参数187:0
参数188:1065
参数189:2017-08-10
参数190:2017-08-16
参数191:0
 
[INFO][2017-08-17 13:46:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_good.getEditReportAnalyse: 
select good_name,
          
            cast(cast(sum(good_count_0) as FLOAT)/? as numeric(8,2))  good_count_0,
          
            cast(cast(sum(good_count_1) as FLOAT)/? as numeric(8,2))  good_count_1,
          
            cast(cast(sum(good_count_2) as FLOAT)/? as numeric(8,2))  good_count_2,
          
            cast(cast(sum(good_count_3) as FLOAT)/? as numeric(8,2))  good_count_3,
          
            cast(cast(sum(good_count_4) as FLOAT)/? as numeric(8,2))  good_count_4,
          
            cast(cast(sum(good_count_5) as FLOAT)/? as numeric(8,2))  good_count_5,
          
            cast(cast(sum(good_count_6) as FLOAT)/? as numeric(8,2))  good_count_6,
          
            cast(cast(sum(good_count_7) as FLOAT)/? as numeric(8,2))  good_count_7,
          
            cast(cast(sum(good_count_8) as FLOAT)/? as numeric(8,2))  good_count_8,
          
            cast(cast(sum(good_count_9) as FLOAT)/? as numeric(8,2))  good_count_9,
          
            cast(cast(sum(good_count_10) as FLOAT)/? as numeric(8,2))  good_count_10,
          
            cast(cast(sum(good_count_11) as FLOAT)/? as numeric(8,2))  good_count_11,
          
            cast(cast(sum(good_count_12) as FLOAT)/? as numeric(8,2))  good_count_12,
          
            cast(cast(sum(good_count_13) as FLOAT)/? as numeric(8,2))  good_count_13,
          
            cast(cast(sum(good_count_14) as FLOAT)/? as numeric(8,2))  good_count_14,
          
            cast(cast(sum(good_count_15) as FLOAT)/? as numeric(8,2))  good_count_15,
          
            cast(cast(sum(good_count_16) as FLOAT)/? as numeric(8,2))  good_count_16,
          
            cast(cast(sum(good_count_17) as FLOAT)/? as numeric(8,2))  good_count_17,
          
            cast(cast(sum(good_count_18) as FLOAT)/? as numeric(8,2))  good_count_18,
          
            cast(cast(sum(good_count_19) as FLOAT)/? as numeric(8,2))  good_count_19,
          
            cast(cast(sum(good_count_20) as FLOAT)/? as numeric(8,2))  good_count_20,
          
            cast(cast(sum(good_count_21) as FLOAT)/? as numeric(8,2))  good_count_21,
          
            cast(cast(sum(good_count_22) as FLOAT)/? as numeric(8,2))  good_count_22,
          
            cast(cast(sum(good_count_23) as FLOAT)/? as numeric(8,2))  good_count_23,
          
            cast(cast(sum(good_count_24) as FLOAT)/? as numeric(8,2))  good_count_24,
          
            cast(cast(sum(good_count_25) as FLOAT)/? as numeric(8,2))  good_count_25,
          
            cast(cast(sum(good_count_26) as FLOAT)/? as numeric(8,2))  good_count_26,
          
            cast(cast(sum(good_count_27) as FLOAT)/? as numeric(8,2))  good_count_27,
          
            cast(cast(sum(good_count_28) as FLOAT)/? as numeric(8,2))  good_count_28,
          
            cast(cast(sum(good_count_29) as FLOAT)/? as numeric(8,2))  good_count_29,
          
            cast(cast(sum(good_count_30) as FLOAT)/? as numeric(8,2))  good_count_30,
          
            cast(cast(sum(good_count_31) as FLOAT)/? as numeric(8,2))  good_count_31,
          
            cast(cast(sum(good_count_32) as FLOAT)/? as numeric(8,2))  good_count_32,
          
            cast(cast(sum(good_count_33) as FLOAT)/? as numeric(8,2))  good_count_33,
          
            cast(cast(sum(good_count_34) as FLOAT)/? as numeric(8,2))  good_count_34,
          
            cast(cast(sum(good_count_35) as FLOAT)/? as numeric(8,2))  good_count_35,
          
            cast(cast(sum(good_count_36) as FLOAT)/? as numeric(8,2))  good_count_36,
          
            cast(cast(sum(good_count_37) as FLOAT)/? as numeric(8,2))  good_count_37,
          
            cast(cast(sum(good_count_38) as FLOAT)/? as numeric(8,2))  good_count_38,
          
            cast(cast(sum(good_count_39) as FLOAT)/? as numeric(8,2))  good_count_39,
          
            cast(cast(sum(good_count_40) as FLOAT)/? as numeric(8,2))  good_count_40,
          
            cast(cast(sum(good_count_41) as FLOAT)/? as numeric(8,2))  good_count_41,
          
            cast(cast(sum(good_count_42) as FLOAT)/? as numeric(8,2))  good_count_42,
          
            cast(cast(sum(good_count_43) as FLOAT)/? as numeric(8,2))  good_count_43,
          
            cast(cast(sum(good_count_44) as FLOAT)/? as numeric(8,2))  good_count_44,
          
            cast(cast(sum(good_count_45) as FLOAT)/? as numeric(8,2))  good_count_45,
          
            cast(cast(sum(good_count_46) as FLOAT)/? as numeric(8,2))  good_count_46,
          
            cast(cast(sum(good_count_47) as FLOAT)/? as numeric(8,2))  good_count_47,
         
        cast(cast(sum(sum_count) as FLOAT)/? as numeric(8,2)) sum_count
            from (
                select isnull(temp.good_name,'合计') as good_name,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_0,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_1,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_2,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_3,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_4,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_5,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_6,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_7,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_8,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_9,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_10,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_11,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_12,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_13,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_14,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_15,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_16,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_17,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_18,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_19,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_20,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_21,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_22,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_23,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_24,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_25,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_26,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_27,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_28,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_29,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_30,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_31,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_32,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_33,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_34,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_35,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_36,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_37,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_38,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_39,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_40,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_41,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_42,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_43,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_44,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_45,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_46,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_47,
                 
                    sum(case when t_minute>=? AND t_minute  <  ? then count else 0 end) as sum_count
                from (
                    select cgl.sale_time,
                           convert(int,datename(Hour , cgl.sale_time))*60 + convert(int,datename(minute, cgl.sale_time)) as t_minute,
                           cgl.class_good_name as good_name,
                           cgl.count
                    from cds_ms_goods_list cgl
                    where cgl.sale_time >=?
                    and cgl.sale_time  <= ?  + ' 23:59:59'
                    and cgl.stores_id = ?
                    and class_good_name is not null
                ) temp group by good_name with rollup

				union all
				 select isnull(temp.good_name,'合计') as good_name,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_0,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_1,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_2,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_3,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_4,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_5,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_6,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_7,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_8,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_9,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_10,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_11,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_12,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_13,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_14,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_15,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_16,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_17,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_18,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_19,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_20,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_21,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_22,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_23,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_24,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_25,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_26,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_27,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_28,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_29,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_30,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_31,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_32,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_33,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_34,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_35,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_36,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_37,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_38,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_39,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_40,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_41,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_42,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_43,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_44,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_45,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_46,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_47,
                 
                    sum(case when t_minute>=? AND t_minute  <  ? then count else 0 end) as sum_count
                from (
                    select cgl.sale_time,
                           convert(int,datename(Hour, cgl.sale_time))*60 + convert(int,datename(minute, cgl.sale_time)) as t_minute,
                           cgl.class_good_name as good_name,
                           cgl.count
                    from view_cds_ms_goods_list cgl
                    where cgl.create_date >=?
                    and cgl.create_date  <= ?  + ' 23:59:59'
                    and cgl.stores_id = ?
                    and class_good_name is not null
                ) temp group by good_name with rollup
             ) t
			 group by good_name
			 order by sum_count desc 
[INFO][2017-08-17 13:46:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:7
参数2:7
参数3:7
参数4:7
参数5:7
参数6:7
参数7:7
参数8:7
参数9:7
参数10:7
参数11:7
参数12:7
参数13:7
参数14:7
参数15:7
参数16:7
参数17:7
参数18:7
参数19:7
参数20:7
参数21:7
参数22:7
参数23:7
参数24:7
参数25:7
参数26:7
参数27:7
参数28:7
参数29:7
参数30:7
参数31:7
参数32:7
参数33:7
参数34:7
参数35:7
参数36:7
参数37:7
参数38:7
参数39:7
参数40:7
参数41:7
参数42:7
参数43:7
参数44:7
参数45:7
参数46:7
参数47:7
参数48:7
参数49:7
参数50:0
参数51:30
参数52:30
参数53:60
参数54:60
参数55:90
参数56:90
参数57:120
参数58:120
参数59:150
参数60:150
参数61:180
参数62:180
参数63:210
参数64:210
参数65:240
参数66:240
参数67:270
参数68:270
参数69:300
参数70:300
参数71:330
参数72:330
参数73:360
参数74:360
参数75:390
参数76:390
参数77:420
参数78:420
参数79:450
参数80:450
参数81:480
参数82:480
参数83:510
参数84:510
参数85:540
参数86:540
参数87:570
参数88:570
参数89:600
参数90:600
参数91:630
参数92:630
参数93:660
参数94:660
参数95:690
参数96:690
参数97:720
参数98:720
参数99:750
参数100:750
参数101:780
参数102:780
参数103:810
参数104:810
参数105:840
参数106:840
参数107:870
参数108:870
参数109:900
参数110:900
参数111:930
参数112:930
参数113:960
参数114:960
参数115:990
参数116:990
参数117:1020
参数118:1020
参数119:1050
参数120:1050
参数121:1080
参数122:1080
参数123:1110
参数124:1110
参数125:1140
参数126:1140
参数127:1170
参数128:1170
参数129:1200
参数130:1200
参数131:1230
参数132:1230
参数133:1260
参数134:1260
参数135:1290
参数136:1290
参数137:1320
参数138:1320
参数139:1350
参数140:1350
参数141:1380
参数142:1380
参数143:1410
参数144:1410
参数145:1425
参数146:0
参数147:1425
参数148:2017-08-10
参数149:2017-08-16
参数150:0
参数151:0
参数152:30
参数153:30
参数154:60
参数155:60
参数156:90
参数157:90
参数158:120
参数159:120
参数160:150
参数161:150
参数162:180
参数163:180
参数164:210
参数165:210
参数166:240
参数167:240
参数168:270
参数169:270
参数170:300
参数171:300
参数172:330
参数173:330
参数174:360
参数175:360
参数176:390
参数177:390
参数178:420
参数179:420
参数180:450
参数181:450
参数182:480
参数183:480
参数184:510
参数185:510
参数186:540
参数187:540
参数188:570
参数189:570
参数190:600
参数191:600
参数192:630
参数193:630
参数194:660
参数195:660
参数196:690
参数197:690
参数198:720
参数199:720
参数200:750
参数201:750
参数202:780
参数203:780
参数204:810
参数205:810
参数206:840
参数207:840
参数208:870
参数209:870
参数210:900
参数211:900
参数212:930
参数213:930
参数214:960
参数215:960
参数216:990
参数217:990
参数218:1020
参数219:1020
参数220:1050
参数221:1050
参数222:1080
参数223:1080
参数224:1110
参数225:1110
参数226:1140
参数227:1140
参数228:1170
参数229:1170
参数230:1200
参数231:1200
参数232:1230
参数233:1230
参数234:1260
参数235:1260
参数236:1290
参数237:1290
参数238:1320
参数239:1320
参数240:1350
参数241:1350
参数242:1380
参数243:1380
参数244:1410
参数245:1410
参数246:1425
参数247:0
参数248:1425
参数249:2017-08-10
参数250:2017-08-16
参数251:0
 
[INFO][2017-08-17 13:46:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_good.getEditReportAnalyse: 
select good_name,
          
            cast(cast(sum(good_count_0) as FLOAT)/? as numeric(8,2))  good_count_0,
          
            cast(cast(sum(good_count_1) as FLOAT)/? as numeric(8,2))  good_count_1,
          
            cast(cast(sum(good_count_2) as FLOAT)/? as numeric(8,2))  good_count_2,
          
            cast(cast(sum(good_count_3) as FLOAT)/? as numeric(8,2))  good_count_3,
          
            cast(cast(sum(good_count_4) as FLOAT)/? as numeric(8,2))  good_count_4,
          
            cast(cast(sum(good_count_5) as FLOAT)/? as numeric(8,2))  good_count_5,
          
            cast(cast(sum(good_count_6) as FLOAT)/? as numeric(8,2))  good_count_6,
          
            cast(cast(sum(good_count_7) as FLOAT)/? as numeric(8,2))  good_count_7,
          
            cast(cast(sum(good_count_8) as FLOAT)/? as numeric(8,2))  good_count_8,
          
            cast(cast(sum(good_count_9) as FLOAT)/? as numeric(8,2))  good_count_9,
          
            cast(cast(sum(good_count_10) as FLOAT)/? as numeric(8,2))  good_count_10,
          
            cast(cast(sum(good_count_11) as FLOAT)/? as numeric(8,2))  good_count_11,
          
            cast(cast(sum(good_count_12) as FLOAT)/? as numeric(8,2))  good_count_12,
          
            cast(cast(sum(good_count_13) as FLOAT)/? as numeric(8,2))  good_count_13,
          
            cast(cast(sum(good_count_14) as FLOAT)/? as numeric(8,2))  good_count_14,
          
            cast(cast(sum(good_count_15) as FLOAT)/? as numeric(8,2))  good_count_15,
          
            cast(cast(sum(good_count_16) as FLOAT)/? as numeric(8,2))  good_count_16,
          
            cast(cast(sum(good_count_17) as FLOAT)/? as numeric(8,2))  good_count_17,
          
            cast(cast(sum(good_count_18) as FLOAT)/? as numeric(8,2))  good_count_18,
          
            cast(cast(sum(good_count_19) as FLOAT)/? as numeric(8,2))  good_count_19,
          
            cast(cast(sum(good_count_20) as FLOAT)/? as numeric(8,2))  good_count_20,
          
            cast(cast(sum(good_count_21) as FLOAT)/? as numeric(8,2))  good_count_21,
          
            cast(cast(sum(good_count_22) as FLOAT)/? as numeric(8,2))  good_count_22,
          
            cast(cast(sum(good_count_23) as FLOAT)/? as numeric(8,2))  good_count_23,
          
            cast(cast(sum(good_count_24) as FLOAT)/? as numeric(8,2))  good_count_24,
          
            cast(cast(sum(good_count_25) as FLOAT)/? as numeric(8,2))  good_count_25,
          
            cast(cast(sum(good_count_26) as FLOAT)/? as numeric(8,2))  good_count_26,
          
            cast(cast(sum(good_count_27) as FLOAT)/? as numeric(8,2))  good_count_27,
          
            cast(cast(sum(good_count_28) as FLOAT)/? as numeric(8,2))  good_count_28,
          
            cast(cast(sum(good_count_29) as FLOAT)/? as numeric(8,2))  good_count_29,
          
            cast(cast(sum(good_count_30) as FLOAT)/? as numeric(8,2))  good_count_30,
          
            cast(cast(sum(good_count_31) as FLOAT)/? as numeric(8,2))  good_count_31,
          
            cast(cast(sum(good_count_32) as FLOAT)/? as numeric(8,2))  good_count_32,
          
            cast(cast(sum(good_count_33) as FLOAT)/? as numeric(8,2))  good_count_33,
          
            cast(cast(sum(good_count_34) as FLOAT)/? as numeric(8,2))  good_count_34,
          
            cast(cast(sum(good_count_35) as FLOAT)/? as numeric(8,2))  good_count_35,
          
            cast(cast(sum(good_count_36) as FLOAT)/? as numeric(8,2))  good_count_36,
          
            cast(cast(sum(good_count_37) as FLOAT)/? as numeric(8,2))  good_count_37,
          
            cast(cast(sum(good_count_38) as FLOAT)/? as numeric(8,2))  good_count_38,
          
            cast(cast(sum(good_count_39) as FLOAT)/? as numeric(8,2))  good_count_39,
          
            cast(cast(sum(good_count_40) as FLOAT)/? as numeric(8,2))  good_count_40,
          
            cast(cast(sum(good_count_41) as FLOAT)/? as numeric(8,2))  good_count_41,
          
            cast(cast(sum(good_count_42) as FLOAT)/? as numeric(8,2))  good_count_42,
          
            cast(cast(sum(good_count_43) as FLOAT)/? as numeric(8,2))  good_count_43,
          
            cast(cast(sum(good_count_44) as FLOAT)/? as numeric(8,2))  good_count_44,
          
            cast(cast(sum(good_count_45) as FLOAT)/? as numeric(8,2))  good_count_45,
          
            cast(cast(sum(good_count_46) as FLOAT)/? as numeric(8,2))  good_count_46,
          
            cast(cast(sum(good_count_47) as FLOAT)/? as numeric(8,2))  good_count_47,
         
        cast(cast(sum(sum_count) as FLOAT)/? as numeric(8,2)) sum_count
            from (
                select isnull(temp.good_name,'合计') as good_name,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_0,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_1,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_2,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_3,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_4,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_5,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_6,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_7,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_8,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_9,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_10,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_11,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_12,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_13,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_14,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_15,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_16,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_17,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_18,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_19,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_20,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_21,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_22,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_23,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_24,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_25,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_26,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_27,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_28,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_29,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_30,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_31,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_32,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_33,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_34,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_35,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_36,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_37,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_38,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_39,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_40,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_41,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_42,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_43,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_44,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_45,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_46,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_47,
                 
                    sum(case when t_minute>=? AND t_minute  <  ? then count else 0 end) as sum_count
                from (
                    select cgl.sale_time,
                           convert(int,datename(Hour , cgl.sale_time))*60 + convert(int,datename(minute, cgl.sale_time)) as t_minute,
                           cgl.class_good_name as good_name,
                           cgl.count
                    from cds_ms_goods_list cgl
                    where cgl.sale_time >=?
                    and cgl.sale_time  <= ?  + ' 23:59:59'
                    and cgl.stores_id = ?
                    and class_good_name is not null
                ) temp group by good_name with rollup

				union all
				 select isnull(temp.good_name,'合计') as good_name,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_0,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_1,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_2,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_3,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_4,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_5,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_6,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_7,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_8,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_9,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_10,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_11,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_12,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_13,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_14,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_15,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_16,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_17,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_18,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_19,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_20,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_21,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_22,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_23,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_24,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_25,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_26,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_27,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_28,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_29,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_30,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_31,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_32,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_33,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_34,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_35,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_36,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_37,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_38,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_39,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_40,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_41,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_42,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_43,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_44,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_45,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_46,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_47,
                 
                    sum(case when t_minute>=? AND t_minute  <  ? then count else 0 end) as sum_count
                from (
                    select cgl.sale_time,
                           convert(int,datename(Hour, cgl.sale_time))*60 + convert(int,datename(minute, cgl.sale_time)) as t_minute,
                           cgl.class_good_name as good_name,
                           cgl.count
                    from view_cds_ms_goods_list cgl
                    where cgl.create_date >=?
                    and cgl.create_date  <= ?  + ' 23:59:59'
                    and cgl.stores_id = ?
                    and class_good_name is not null
                ) temp group by good_name with rollup
             ) t
			 group by good_name
			 order by sum_count desc 
[INFO][2017-08-17 13:46:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:7
参数2:7
参数3:7
参数4:7
参数5:7
参数6:7
参数7:7
参数8:7
参数9:7
参数10:7
参数11:7
参数12:7
参数13:7
参数14:7
参数15:7
参数16:7
参数17:7
参数18:7
参数19:7
参数20:7
参数21:7
参数22:7
参数23:7
参数24:7
参数25:7
参数26:7
参数27:7
参数28:7
参数29:7
参数30:7
参数31:7
参数32:7
参数33:7
参数34:7
参数35:7
参数36:7
参数37:7
参数38:7
参数39:7
参数40:7
参数41:7
参数42:7
参数43:7
参数44:7
参数45:7
参数46:7
参数47:7
参数48:7
参数49:7
参数50:0
参数51:30
参数52:30
参数53:60
参数54:60
参数55:90
参数56:90
参数57:120
参数58:120
参数59:150
参数60:150
参数61:180
参数62:180
参数63:210
参数64:210
参数65:240
参数66:240
参数67:270
参数68:270
参数69:300
参数70:300
参数71:330
参数72:330
参数73:360
参数74:360
参数75:390
参数76:390
参数77:420
参数78:420
参数79:450
参数80:450
参数81:480
参数82:480
参数83:510
参数84:510
参数85:540
参数86:540
参数87:570
参数88:570
参数89:600
参数90:600
参数91:630
参数92:630
参数93:660
参数94:660
参数95:690
参数96:690
参数97:720
参数98:720
参数99:750
参数100:750
参数101:780
参数102:780
参数103:810
参数104:810
参数105:840
参数106:840
参数107:870
参数108:870
参数109:900
参数110:900
参数111:930
参数112:930
参数113:960
参数114:960
参数115:990
参数116:990
参数117:1020
参数118:1020
参数119:1050
参数120:1050
参数121:1080
参数122:1080
参数123:1110
参数124:1110
参数125:1140
参数126:1140
参数127:1170
参数128:1170
参数129:1200
参数130:1200
参数131:1230
参数132:1230
参数133:1260
参数134:1260
参数135:1290
参数136:1290
参数137:1320
参数138:1320
参数139:1350
参数140:1350
参数141:1380
参数142:1380
参数143:1410
参数144:1410
参数145:1425
参数146:0
参数147:1425
参数148:2017-08-10
参数149:2017-08-16
参数150:0
参数151:0
参数152:30
参数153:30
参数154:60
参数155:60
参数156:90
参数157:90
参数158:120
参数159:120
参数160:150
参数161:150
参数162:180
参数163:180
参数164:210
参数165:210
参数166:240
参数167:240
参数168:270
参数169:270
参数170:300
参数171:300
参数172:330
参数173:330
参数174:360
参数175:360
参数176:390
参数177:390
参数178:420
参数179:420
参数180:450
参数181:450
参数182:480
参数183:480
参数184:510
参数185:510
参数186:540
参数187:540
参数188:570
参数189:570
参数190:600
参数191:600
参数192:630
参数193:630
参数194:660
参数195:660
参数196:690
参数197:690
参数198:720
参数199:720
参数200:750
参数201:750
参数202:780
参数203:780
参数204:810
参数205:810
参数206:840
参数207:840
参数208:870
参数209:870
参数210:900
参数211:900
参数212:930
参数213:930
参数214:960
参数215:960
参数216:990
参数217:990
参数218:1020
参数219:1020
参数220:1050
参数221:1050
参数222:1080
参数223:1080
参数224:1110
参数225:1110
参数226:1140
参数227:1140
参数228:1170
参数229:1170
参数230:1200
参数231:1200
参数232:1230
参数233:1230
参数234:1260
参数235:1260
参数236:1290
参数237:1290
参数238:1320
参数239:1320
参数240:1350
参数241:1350
参数242:1380
参数243:1380
参数244:1410
参数245:1410
参数246:1425
参数247:0
参数248:1425
参数249:2017-08-10
参数250:2017-08-16
参数251:0
 
[INFO][2017-08-17 13:46:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_good.getEditReportAnalyse: 
select good_name,
          
            cast(cast(sum(good_count_0) as FLOAT)/? as numeric(8,2))  good_count_0,
          
            cast(cast(sum(good_count_1) as FLOAT)/? as numeric(8,2))  good_count_1,
          
            cast(cast(sum(good_count_2) as FLOAT)/? as numeric(8,2))  good_count_2,
          
            cast(cast(sum(good_count_3) as FLOAT)/? as numeric(8,2))  good_count_3,
          
            cast(cast(sum(good_count_4) as FLOAT)/? as numeric(8,2))  good_count_4,
          
            cast(cast(sum(good_count_5) as FLOAT)/? as numeric(8,2))  good_count_5,
          
            cast(cast(sum(good_count_6) as FLOAT)/? as numeric(8,2))  good_count_6,
          
            cast(cast(sum(good_count_7) as FLOAT)/? as numeric(8,2))  good_count_7,
          
            cast(cast(sum(good_count_8) as FLOAT)/? as numeric(8,2))  good_count_8,
          
            cast(cast(sum(good_count_9) as FLOAT)/? as numeric(8,2))  good_count_9,
          
            cast(cast(sum(good_count_10) as FLOAT)/? as numeric(8,2))  good_count_10,
          
            cast(cast(sum(good_count_11) as FLOAT)/? as numeric(8,2))  good_count_11,
          
            cast(cast(sum(good_count_12) as FLOAT)/? as numeric(8,2))  good_count_12,
          
            cast(cast(sum(good_count_13) as FLOAT)/? as numeric(8,2))  good_count_13,
          
            cast(cast(sum(good_count_14) as FLOAT)/? as numeric(8,2))  good_count_14,
          
            cast(cast(sum(good_count_15) as FLOAT)/? as numeric(8,2))  good_count_15,
          
            cast(cast(sum(good_count_16) as FLOAT)/? as numeric(8,2))  good_count_16,
          
            cast(cast(sum(good_count_17) as FLOAT)/? as numeric(8,2))  good_count_17,
          
            cast(cast(sum(good_count_18) as FLOAT)/? as numeric(8,2))  good_count_18,
          
            cast(cast(sum(good_count_19) as FLOAT)/? as numeric(8,2))  good_count_19,
          
            cast(cast(sum(good_count_20) as FLOAT)/? as numeric(8,2))  good_count_20,
          
            cast(cast(sum(good_count_21) as FLOAT)/? as numeric(8,2))  good_count_21,
          
            cast(cast(sum(good_count_22) as FLOAT)/? as numeric(8,2))  good_count_22,
          
            cast(cast(sum(good_count_23) as FLOAT)/? as numeric(8,2))  good_count_23,
          
            cast(cast(sum(good_count_24) as FLOAT)/? as numeric(8,2))  good_count_24,
          
            cast(cast(sum(good_count_25) as FLOAT)/? as numeric(8,2))  good_count_25,
          
            cast(cast(sum(good_count_26) as FLOAT)/? as numeric(8,2))  good_count_26,
          
            cast(cast(sum(good_count_27) as FLOAT)/? as numeric(8,2))  good_count_27,
          
            cast(cast(sum(good_count_28) as FLOAT)/? as numeric(8,2))  good_count_28,
          
            cast(cast(sum(good_count_29) as FLOAT)/? as numeric(8,2))  good_count_29,
          
            cast(cast(sum(good_count_30) as FLOAT)/? as numeric(8,2))  good_count_30,
          
            cast(cast(sum(good_count_31) as FLOAT)/? as numeric(8,2))  good_count_31,
          
            cast(cast(sum(good_count_32) as FLOAT)/? as numeric(8,2))  good_count_32,
          
            cast(cast(sum(good_count_33) as FLOAT)/? as numeric(8,2))  good_count_33,
          
            cast(cast(sum(good_count_34) as FLOAT)/? as numeric(8,2))  good_count_34,
          
            cast(cast(sum(good_count_35) as FLOAT)/? as numeric(8,2))  good_count_35,
          
            cast(cast(sum(good_count_36) as FLOAT)/? as numeric(8,2))  good_count_36,
          
            cast(cast(sum(good_count_37) as FLOAT)/? as numeric(8,2))  good_count_37,
          
            cast(cast(sum(good_count_38) as FLOAT)/? as numeric(8,2))  good_count_38,
          
            cast(cast(sum(good_count_39) as FLOAT)/? as numeric(8,2))  good_count_39,
          
            cast(cast(sum(good_count_40) as FLOAT)/? as numeric(8,2))  good_count_40,
          
            cast(cast(sum(good_count_41) as FLOAT)/? as numeric(8,2))  good_count_41,
          
            cast(cast(sum(good_count_42) as FLOAT)/? as numeric(8,2))  good_count_42,
          
            cast(cast(sum(good_count_43) as FLOAT)/? as numeric(8,2))  good_count_43,
          
            cast(cast(sum(good_count_44) as FLOAT)/? as numeric(8,2))  good_count_44,
          
            cast(cast(sum(good_count_45) as FLOAT)/? as numeric(8,2))  good_count_45,
          
            cast(cast(sum(good_count_46) as FLOAT)/? as numeric(8,2))  good_count_46,
          
            cast(cast(sum(good_count_47) as FLOAT)/? as numeric(8,2))  good_count_47,
         
        cast(cast(sum(sum_count) as FLOAT)/? as numeric(8,2)) sum_count
            from (
                select isnull(temp.good_name,'合计') as good_name,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_0,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_1,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_2,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_3,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_4,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_5,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_6,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_7,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_8,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_9,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_10,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_11,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_12,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_13,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_14,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_15,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_16,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_17,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_18,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_19,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_20,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_21,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_22,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_23,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_24,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_25,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_26,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_27,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_28,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_29,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_30,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_31,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_32,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_33,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_34,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_35,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_36,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_37,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_38,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_39,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_40,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_41,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_42,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_43,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_44,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_45,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_46,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_47,
                 
                    sum(case when t_minute>=? AND t_minute  <  ? then count else 0 end) as sum_count
                from (
                    select cgl.sale_time,
                           convert(int,datename(Hour , cgl.sale_time))*60 + convert(int,datename(minute, cgl.sale_time)) as t_minute,
                           cgl.class_good_name as good_name,
                           cgl.count
                    from cds_ms_goods_list cgl
                    where cgl.sale_time >=?
                    and cgl.sale_time  <= ?  + ' 23:59:59'
                    and cgl.stores_id = ?
                    and class_good_name is not null
                ) temp group by good_name with rollup

				union all
				 select isnull(temp.good_name,'合计') as good_name,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_0,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_1,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_2,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_3,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_4,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_5,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_6,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_7,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_8,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_9,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_10,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_11,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_12,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_13,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_14,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_15,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_16,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_17,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_18,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_19,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_20,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_21,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_22,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_23,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_24,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_25,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_26,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_27,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_28,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_29,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_30,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_31,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_32,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_33,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_34,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_35,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_36,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_37,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_38,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_39,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_40,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_41,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_42,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_43,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_44,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_45,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_46,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_47,
                 
                    sum(case when t_minute>=? AND t_minute  <  ? then count else 0 end) as sum_count
                from (
                    select cgl.sale_time,
                           convert(int,datename(Hour, cgl.sale_time))*60 + convert(int,datename(minute, cgl.sale_time)) as t_minute,
                           cgl.class_good_name as good_name,
                           cgl.count
                    from view_cds_ms_goods_list cgl
                    where cgl.create_date >=?
                    and cgl.create_date  <= ?  + ' 23:59:59'
                    and cgl.stores_id = ?
                    and class_good_name is not null
                ) temp group by good_name with rollup
             ) t
			 group by good_name
			 order by sum_count desc 
[INFO][2017-08-17 13:46:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:7
参数2:7
参数3:7
参数4:7
参数5:7
参数6:7
参数7:7
参数8:7
参数9:7
参数10:7
参数11:7
参数12:7
参数13:7
参数14:7
参数15:7
参数16:7
参数17:7
参数18:7
参数19:7
参数20:7
参数21:7
参数22:7
参数23:7
参数24:7
参数25:7
参数26:7
参数27:7
参数28:7
参数29:7
参数30:7
参数31:7
参数32:7
参数33:7
参数34:7
参数35:7
参数36:7
参数37:7
参数38:7
参数39:7
参数40:7
参数41:7
参数42:7
参数43:7
参数44:7
参数45:7
参数46:7
参数47:7
参数48:7
参数49:7
参数50:0
参数51:30
参数52:30
参数53:60
参数54:60
参数55:90
参数56:90
参数57:120
参数58:120
参数59:150
参数60:150
参数61:180
参数62:180
参数63:210
参数64:210
参数65:240
参数66:240
参数67:270
参数68:270
参数69:300
参数70:300
参数71:330
参数72:330
参数73:360
参数74:360
参数75:390
参数76:390
参数77:420
参数78:420
参数79:450
参数80:450
参数81:480
参数82:480
参数83:510
参数84:510
参数85:540
参数86:540
参数87:570
参数88:570
参数89:600
参数90:600
参数91:630
参数92:630
参数93:660
参数94:660
参数95:690
参数96:690
参数97:720
参数98:720
参数99:750
参数100:750
参数101:780
参数102:780
参数103:810
参数104:810
参数105:840
参数106:840
参数107:870
参数108:870
参数109:900
参数110:900
参数111:930
参数112:930
参数113:960
参数114:960
参数115:990
参数116:990
参数117:1020
参数118:1020
参数119:1050
参数120:1050
参数121:1080
参数122:1080
参数123:1110
参数124:1110
参数125:1140
参数126:1140
参数127:1170
参数128:1170
参数129:1200
参数130:1200
参数131:1230
参数132:1230
参数133:1260
参数134:1260
参数135:1290
参数136:1290
参数137:1320
参数138:1320
参数139:1350
参数140:1350
参数141:1380
参数142:1380
参数143:1410
参数144:1410
参数145:1425
参数146:0
参数147:1425
参数148:2017-08-10
参数149:2017-08-16
参数150:0
参数151:0
参数152:30
参数153:30
参数154:60
参数155:60
参数156:90
参数157:90
参数158:120
参数159:120
参数160:150
参数161:150
参数162:180
参数163:180
参数164:210
参数165:210
参数166:240
参数167:240
参数168:270
参数169:270
参数170:300
参数171:300
参数172:330
参数173:330
参数174:360
参数175:360
参数176:390
参数177:390
参数178:420
参数179:420
参数180:450
参数181:450
参数182:480
参数183:480
参数184:510
参数185:510
参数186:540
参数187:540
参数188:570
参数189:570
参数190:600
参数191:600
参数192:630
参数193:630
参数194:660
参数195:660
参数196:690
参数197:690
参数198:720
参数199:720
参数200:750
参数201:750
参数202:780
参数203:780
参数204:810
参数205:810
参数206:840
参数207:840
参数208:870
参数209:870
参数210:900
参数211:900
参数212:930
参数213:930
参数214:960
参数215:960
参数216:990
参数217:990
参数218:1020
参数219:1020
参数220:1050
参数221:1050
参数222:1080
参数223:1080
参数224:1110
参数225:1110
参数226:1140
参数227:1140
参数228:1170
参数229:1170
参数230:1200
参数231:1200
参数232:1230
参数233:1230
参数234:1260
参数235:1260
参数236:1290
参数237:1290
参数238:1320
参数239:1320
参数240:1350
参数241:1350
参数242:1380
参数243:1380
参数244:1410
参数245:1410
参数246:1425
参数247:0
参数248:1425
参数249:2017-08-10
参数250:2017-08-16
参数251:0
 
[INFO][2017-08-17 13:46:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_good.getEditReportAnalyse: 
select good_name,
          
            cast(cast(sum(good_count_0) as FLOAT)/? as numeric(8,2))  good_count_0,
          
            cast(cast(sum(good_count_1) as FLOAT)/? as numeric(8,2))  good_count_1,
          
            cast(cast(sum(good_count_2) as FLOAT)/? as numeric(8,2))  good_count_2,
          
            cast(cast(sum(good_count_3) as FLOAT)/? as numeric(8,2))  good_count_3,
          
            cast(cast(sum(good_count_4) as FLOAT)/? as numeric(8,2))  good_count_4,
          
            cast(cast(sum(good_count_5) as FLOAT)/? as numeric(8,2))  good_count_5,
          
            cast(cast(sum(good_count_6) as FLOAT)/? as numeric(8,2))  good_count_6,
          
            cast(cast(sum(good_count_7) as FLOAT)/? as numeric(8,2))  good_count_7,
          
            cast(cast(sum(good_count_8) as FLOAT)/? as numeric(8,2))  good_count_8,
          
            cast(cast(sum(good_count_9) as FLOAT)/? as numeric(8,2))  good_count_9,
          
            cast(cast(sum(good_count_10) as FLOAT)/? as numeric(8,2))  good_count_10,
          
            cast(cast(sum(good_count_11) as FLOAT)/? as numeric(8,2))  good_count_11,
          
            cast(cast(sum(good_count_12) as FLOAT)/? as numeric(8,2))  good_count_12,
          
            cast(cast(sum(good_count_13) as FLOAT)/? as numeric(8,2))  good_count_13,
          
            cast(cast(sum(good_count_14) as FLOAT)/? as numeric(8,2))  good_count_14,
          
            cast(cast(sum(good_count_15) as FLOAT)/? as numeric(8,2))  good_count_15,
          
            cast(cast(sum(good_count_16) as FLOAT)/? as numeric(8,2))  good_count_16,
          
            cast(cast(sum(good_count_17) as FLOAT)/? as numeric(8,2))  good_count_17,
          
            cast(cast(sum(good_count_18) as FLOAT)/? as numeric(8,2))  good_count_18,
          
            cast(cast(sum(good_count_19) as FLOAT)/? as numeric(8,2))  good_count_19,
          
            cast(cast(sum(good_count_20) as FLOAT)/? as numeric(8,2))  good_count_20,
          
            cast(cast(sum(good_count_21) as FLOAT)/? as numeric(8,2))  good_count_21,
          
            cast(cast(sum(good_count_22) as FLOAT)/? as numeric(8,2))  good_count_22,
          
            cast(cast(sum(good_count_23) as FLOAT)/? as numeric(8,2))  good_count_23,
          
            cast(cast(sum(good_count_24) as FLOAT)/? as numeric(8,2))  good_count_24,
          
            cast(cast(sum(good_count_25) as FLOAT)/? as numeric(8,2))  good_count_25,
          
            cast(cast(sum(good_count_26) as FLOAT)/? as numeric(8,2))  good_count_26,
          
            cast(cast(sum(good_count_27) as FLOAT)/? as numeric(8,2))  good_count_27,
          
            cast(cast(sum(good_count_28) as FLOAT)/? as numeric(8,2))  good_count_28,
          
            cast(cast(sum(good_count_29) as FLOAT)/? as numeric(8,2))  good_count_29,
          
            cast(cast(sum(good_count_30) as FLOAT)/? as numeric(8,2))  good_count_30,
          
            cast(cast(sum(good_count_31) as FLOAT)/? as numeric(8,2))  good_count_31,
          
            cast(cast(sum(good_count_32) as FLOAT)/? as numeric(8,2))  good_count_32,
          
            cast(cast(sum(good_count_33) as FLOAT)/? as numeric(8,2))  good_count_33,
          
            cast(cast(sum(good_count_34) as FLOAT)/? as numeric(8,2))  good_count_34,
          
            cast(cast(sum(good_count_35) as FLOAT)/? as numeric(8,2))  good_count_35,
          
            cast(cast(sum(good_count_36) as FLOAT)/? as numeric(8,2))  good_count_36,
          
            cast(cast(sum(good_count_37) as FLOAT)/? as numeric(8,2))  good_count_37,
          
            cast(cast(sum(good_count_38) as FLOAT)/? as numeric(8,2))  good_count_38,
          
            cast(cast(sum(good_count_39) as FLOAT)/? as numeric(8,2))  good_count_39,
          
            cast(cast(sum(good_count_40) as FLOAT)/? as numeric(8,2))  good_count_40,
          
            cast(cast(sum(good_count_41) as FLOAT)/? as numeric(8,2))  good_count_41,
          
            cast(cast(sum(good_count_42) as FLOAT)/? as numeric(8,2))  good_count_42,
          
            cast(cast(sum(good_count_43) as FLOAT)/? as numeric(8,2))  good_count_43,
          
            cast(cast(sum(good_count_44) as FLOAT)/? as numeric(8,2))  good_count_44,
          
            cast(cast(sum(good_count_45) as FLOAT)/? as numeric(8,2))  good_count_45,
          
            cast(cast(sum(good_count_46) as FLOAT)/? as numeric(8,2))  good_count_46,
          
            cast(cast(sum(good_count_47) as FLOAT)/? as numeric(8,2))  good_count_47,
         
        cast(cast(sum(sum_count) as FLOAT)/? as numeric(8,2)) sum_count
            from (
                select isnull(temp.good_name,'合计') as good_name,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_0,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_1,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_2,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_3,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_4,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_5,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_6,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_7,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_8,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_9,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_10,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_11,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_12,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_13,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_14,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_15,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_16,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_17,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_18,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_19,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_20,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_21,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_22,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_23,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_24,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_25,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_26,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_27,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_28,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_29,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_30,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_31,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_32,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_33,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_34,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_35,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_36,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_37,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_38,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_39,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_40,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_41,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_42,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_43,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_44,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_45,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_46,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_47,
                 
                    sum(case when t_minute>=? AND t_minute  <  ? then count else 0 end) as sum_count
                from (
                    select cgl.sale_time,
                           convert(int,datename(Hour , cgl.sale_time))*60 + convert(int,datename(minute, cgl.sale_time)) as t_minute,
                           cgl.class_good_name as good_name,
                           cgl.count
                    from cds_ms_goods_list cgl
                    where cgl.sale_time >=?
                    and cgl.sale_time  <= ?  + ' 23:59:59'
                    and cgl.stores_id = ?
                    and class_good_name is not null
                ) temp group by good_name with rollup

				union all
				 select isnull(temp.good_name,'合计') as good_name,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_0,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_1,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_2,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_3,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_4,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_5,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_6,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_7,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_8,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_9,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_10,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_11,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_12,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_13,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_14,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_15,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_16,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_17,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_18,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_19,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_20,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_21,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_22,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_23,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_24,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_25,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_26,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_27,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_28,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_29,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_30,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_31,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_32,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_33,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_34,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_35,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_36,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_37,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_38,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_39,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_40,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_41,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_42,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_43,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_44,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_45,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_46,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_47,
                 
                    sum(case when t_minute>=? AND t_minute  <  ? then count else 0 end) as sum_count
                from (
                    select cgl.sale_time,
                           convert(int,datename(Hour, cgl.sale_time))*60 + convert(int,datename(minute, cgl.sale_time)) as t_minute,
                           cgl.class_good_name as good_name,
                           cgl.count
                    from view_cds_ms_goods_list cgl
                    where cgl.create_date >=?
                    and cgl.create_date  <= ?  + ' 23:59:59'
                    and cgl.stores_id = ?
                    and class_good_name is not null
                ) temp group by good_name with rollup
             ) t
			 group by good_name
			 order by sum_count desc 
[INFO][2017-08-17 13:46:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:7
参数2:7
参数3:7
参数4:7
参数5:7
参数6:7
参数7:7
参数8:7
参数9:7
参数10:7
参数11:7
参数12:7
参数13:7
参数14:7
参数15:7
参数16:7
参数17:7
参数18:7
参数19:7
参数20:7
参数21:7
参数22:7
参数23:7
参数24:7
参数25:7
参数26:7
参数27:7
参数28:7
参数29:7
参数30:7
参数31:7
参数32:7
参数33:7
参数34:7
参数35:7
参数36:7
参数37:7
参数38:7
参数39:7
参数40:7
参数41:7
参数42:7
参数43:7
参数44:7
参数45:7
参数46:7
参数47:7
参数48:7
参数49:7
参数50:0
参数51:30
参数52:30
参数53:60
参数54:60
参数55:90
参数56:90
参数57:120
参数58:120
参数59:150
参数60:150
参数61:180
参数62:180
参数63:210
参数64:210
参数65:240
参数66:240
参数67:270
参数68:270
参数69:300
参数70:300
参数71:330
参数72:330
参数73:360
参数74:360
参数75:390
参数76:390
参数77:420
参数78:420
参数79:450
参数80:450
参数81:480
参数82:480
参数83:510
参数84:510
参数85:540
参数86:540
参数87:570
参数88:570
参数89:600
参数90:600
参数91:630
参数92:630
参数93:660
参数94:660
参数95:690
参数96:690
参数97:720
参数98:720
参数99:750
参数100:750
参数101:780
参数102:780
参数103:810
参数104:810
参数105:840
参数106:840
参数107:870
参数108:870
参数109:900
参数110:900
参数111:930
参数112:930
参数113:960
参数114:960
参数115:990
参数116:990
参数117:1020
参数118:1020
参数119:1050
参数120:1050
参数121:1080
参数122:1080
参数123:1110
参数124:1110
参数125:1140
参数126:1140
参数127:1170
参数128:1170
参数129:1200
参数130:1200
参数131:1230
参数132:1230
参数133:1260
参数134:1260
参数135:1290
参数136:1290
参数137:1320
参数138:1320
参数139:1350
参数140:1350
参数141:1380
参数142:1380
参数143:1410
参数144:1410
参数145:1425
参数146:0
参数147:1425
参数148:2017-08-10
参数149:2017-08-16
参数150:0
参数151:0
参数152:30
参数153:30
参数154:60
参数155:60
参数156:90
参数157:90
参数158:120
参数159:120
参数160:150
参数161:150
参数162:180
参数163:180
参数164:210
参数165:210
参数166:240
参数167:240
参数168:270
参数169:270
参数170:300
参数171:300
参数172:330
参数173:330
参数174:360
参数175:360
参数176:390
参数177:390
参数178:420
参数179:420
参数180:450
参数181:450
参数182:480
参数183:480
参数184:510
参数185:510
参数186:540
参数187:540
参数188:570
参数189:570
参数190:600
参数191:600
参数192:630
参数193:630
参数194:660
参数195:660
参数196:690
参数197:690
参数198:720
参数199:720
参数200:750
参数201:750
参数202:780
参数203:780
参数204:810
参数205:810
参数206:840
参数207:840
参数208:870
参数209:870
参数210:900
参数211:900
参数212:930
参数213:930
参数214:960
参数215:960
参数216:990
参数217:990
参数218:1020
参数219:1020
参数220:1050
参数221:1050
参数222:1080
参数223:1080
参数224:1110
参数225:1110
参数226:1140
参数227:1140
参数228:1170
参数229:1170
参数230:1200
参数231:1200
参数232:1230
参数233:1230
参数234:1260
参数235:1260
参数236:1290
参数237:1290
参数238:1320
参数239:1320
参数240:1350
参数241:1350
参数242:1380
参数243:1380
参数244:1410
参数245:1410
参数246:1425
参数247:0
参数248:1425
参数249:2017-08-10
参数250:2017-08-16
参数251:0
 
[INFO][2017-08-17 13:46:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_good.getEditReportAnalyse: 
select good_name,
          
            cast(cast(sum(good_count_0) as FLOAT)/? as numeric(8,2))  good_count_0,
          
            cast(cast(sum(good_count_1) as FLOAT)/? as numeric(8,2))  good_count_1,
          
            cast(cast(sum(good_count_2) as FLOAT)/? as numeric(8,2))  good_count_2,
          
            cast(cast(sum(good_count_3) as FLOAT)/? as numeric(8,2))  good_count_3,
          
            cast(cast(sum(good_count_4) as FLOAT)/? as numeric(8,2))  good_count_4,
          
            cast(cast(sum(good_count_5) as FLOAT)/? as numeric(8,2))  good_count_5,
          
            cast(cast(sum(good_count_6) as FLOAT)/? as numeric(8,2))  good_count_6,
          
            cast(cast(sum(good_count_7) as FLOAT)/? as numeric(8,2))  good_count_7,
          
            cast(cast(sum(good_count_8) as FLOAT)/? as numeric(8,2))  good_count_8,
          
            cast(cast(sum(good_count_9) as FLOAT)/? as numeric(8,2))  good_count_9,
          
            cast(cast(sum(good_count_10) as FLOAT)/? as numeric(8,2))  good_count_10,
          
            cast(cast(sum(good_count_11) as FLOAT)/? as numeric(8,2))  good_count_11,
          
            cast(cast(sum(good_count_12) as FLOAT)/? as numeric(8,2))  good_count_12,
          
            cast(cast(sum(good_count_13) as FLOAT)/? as numeric(8,2))  good_count_13,
          
            cast(cast(sum(good_count_14) as FLOAT)/? as numeric(8,2))  good_count_14,
          
            cast(cast(sum(good_count_15) as FLOAT)/? as numeric(8,2))  good_count_15,
          
            cast(cast(sum(good_count_16) as FLOAT)/? as numeric(8,2))  good_count_16,
          
            cast(cast(sum(good_count_17) as FLOAT)/? as numeric(8,2))  good_count_17,
          
            cast(cast(sum(good_count_18) as FLOAT)/? as numeric(8,2))  good_count_18,
          
            cast(cast(sum(good_count_19) as FLOAT)/? as numeric(8,2))  good_count_19,
          
            cast(cast(sum(good_count_20) as FLOAT)/? as numeric(8,2))  good_count_20,
          
            cast(cast(sum(good_count_21) as FLOAT)/? as numeric(8,2))  good_count_21,
          
            cast(cast(sum(good_count_22) as FLOAT)/? as numeric(8,2))  good_count_22,
          
            cast(cast(sum(good_count_23) as FLOAT)/? as numeric(8,2))  good_count_23,
          
            cast(cast(sum(good_count_24) as FLOAT)/? as numeric(8,2))  good_count_24,
          
            cast(cast(sum(good_count_25) as FLOAT)/? as numeric(8,2))  good_count_25,
          
            cast(cast(sum(good_count_26) as FLOAT)/? as numeric(8,2))  good_count_26,
          
            cast(cast(sum(good_count_27) as FLOAT)/? as numeric(8,2))  good_count_27,
          
            cast(cast(sum(good_count_28) as FLOAT)/? as numeric(8,2))  good_count_28,
          
            cast(cast(sum(good_count_29) as FLOAT)/? as numeric(8,2))  good_count_29,
          
            cast(cast(sum(good_count_30) as FLOAT)/? as numeric(8,2))  good_count_30,
          
            cast(cast(sum(good_count_31) as FLOAT)/? as numeric(8,2))  good_count_31,
          
            cast(cast(sum(good_count_32) as FLOAT)/? as numeric(8,2))  good_count_32,
          
            cast(cast(sum(good_count_33) as FLOAT)/? as numeric(8,2))  good_count_33,
          
            cast(cast(sum(good_count_34) as FLOAT)/? as numeric(8,2))  good_count_34,
          
            cast(cast(sum(good_count_35) as FLOAT)/? as numeric(8,2))  good_count_35,
          
            cast(cast(sum(good_count_36) as FLOAT)/? as numeric(8,2))  good_count_36,
          
            cast(cast(sum(good_count_37) as FLOAT)/? as numeric(8,2))  good_count_37,
          
            cast(cast(sum(good_count_38) as FLOAT)/? as numeric(8,2))  good_count_38,
          
            cast(cast(sum(good_count_39) as FLOAT)/? as numeric(8,2))  good_count_39,
          
            cast(cast(sum(good_count_40) as FLOAT)/? as numeric(8,2))  good_count_40,
          
            cast(cast(sum(good_count_41) as FLOAT)/? as numeric(8,2))  good_count_41,
          
            cast(cast(sum(good_count_42) as FLOAT)/? as numeric(8,2))  good_count_42,
          
            cast(cast(sum(good_count_43) as FLOAT)/? as numeric(8,2))  good_count_43,
          
            cast(cast(sum(good_count_44) as FLOAT)/? as numeric(8,2))  good_count_44,
          
            cast(cast(sum(good_count_45) as FLOAT)/? as numeric(8,2))  good_count_45,
          
            cast(cast(sum(good_count_46) as FLOAT)/? as numeric(8,2))  good_count_46,
          
            cast(cast(sum(good_count_47) as FLOAT)/? as numeric(8,2))  good_count_47,
         
        cast(cast(sum(sum_count) as FLOAT)/? as numeric(8,2)) sum_count
            from (
                select isnull(temp.good_name,'合计') as good_name,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_0,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_1,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_2,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_3,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_4,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_5,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_6,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_7,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_8,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_9,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_10,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_11,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_12,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_13,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_14,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_15,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_16,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_17,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_18,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_19,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_20,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_21,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_22,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_23,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_24,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_25,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_26,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_27,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_28,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_29,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_30,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_31,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_32,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_33,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_34,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_35,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_36,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_37,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_38,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_39,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_40,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_41,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_42,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_43,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_44,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_45,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_46,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_47,
                 
                    sum(case when t_minute>=? AND t_minute  <  ? then count else 0 end) as sum_count
                from (
                    select cgl.sale_time,
                           convert(int,datename(Hour , cgl.sale_time))*60 + convert(int,datename(minute, cgl.sale_time)) as t_minute,
                           cgl.class_good_name as good_name,
                           cgl.count
                    from cds_ms_goods_list cgl
                    where cgl.sale_time >=?
                    and cgl.sale_time  <= ?  + ' 23:59:59'
                    and cgl.stores_id = ?
                    and class_good_name is not null
                ) temp group by good_name with rollup

				union all
				 select isnull(temp.good_name,'合计') as good_name,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_0,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_1,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_2,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_3,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_4,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_5,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_6,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_7,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_8,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_9,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_10,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_11,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_12,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_13,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_14,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_15,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_16,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_17,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_18,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_19,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_20,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_21,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_22,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_23,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_24,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_25,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_26,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_27,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_28,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_29,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_30,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_31,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_32,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_33,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_34,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_35,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_36,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_37,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_38,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_39,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_40,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_41,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_42,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_43,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_44,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_45,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_46,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_47,
                 
                    sum(case when t_minute>=? AND t_minute  <  ? then count else 0 end) as sum_count
                from (
                    select cgl.sale_time,
                           convert(int,datename(Hour, cgl.sale_time))*60 + convert(int,datename(minute, cgl.sale_time)) as t_minute,
                           cgl.class_good_name as good_name,
                           cgl.count
                    from view_cds_ms_goods_list cgl
                    where cgl.create_date >=?
                    and cgl.create_date  <= ?  + ' 23:59:59'
                    and cgl.stores_id = ?
                    and class_good_name is not null
                ) temp group by good_name with rollup
             ) t
			 group by good_name
			 order by sum_count desc 
[INFO][2017-08-17 13:46:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:7
参数2:7
参数3:7
参数4:7
参数5:7
参数6:7
参数7:7
参数8:7
参数9:7
参数10:7
参数11:7
参数12:7
参数13:7
参数14:7
参数15:7
参数16:7
参数17:7
参数18:7
参数19:7
参数20:7
参数21:7
参数22:7
参数23:7
参数24:7
参数25:7
参数26:7
参数27:7
参数28:7
参数29:7
参数30:7
参数31:7
参数32:7
参数33:7
参数34:7
参数35:7
参数36:7
参数37:7
参数38:7
参数39:7
参数40:7
参数41:7
参数42:7
参数43:7
参数44:7
参数45:7
参数46:7
参数47:7
参数48:7
参数49:7
参数50:0
参数51:30
参数52:30
参数53:60
参数54:60
参数55:90
参数56:90
参数57:120
参数58:120
参数59:150
参数60:150
参数61:180
参数62:180
参数63:210
参数64:210
参数65:240
参数66:240
参数67:270
参数68:270
参数69:300
参数70:300
参数71:330
参数72:330
参数73:360
参数74:360
参数75:390
参数76:390
参数77:420
参数78:420
参数79:450
参数80:450
参数81:480
参数82:480
参数83:510
参数84:510
参数85:540
参数86:540
参数87:570
参数88:570
参数89:600
参数90:600
参数91:630
参数92:630
参数93:660
参数94:660
参数95:690
参数96:690
参数97:720
参数98:720
参数99:750
参数100:750
参数101:780
参数102:780
参数103:810
参数104:810
参数105:840
参数106:840
参数107:870
参数108:870
参数109:900
参数110:900
参数111:930
参数112:930
参数113:960
参数114:960
参数115:990
参数116:990
参数117:1020
参数118:1020
参数119:1050
参数120:1050
参数121:1080
参数122:1080
参数123:1110
参数124:1110
参数125:1140
参数126:1140
参数127:1170
参数128:1170
参数129:1200
参数130:1200
参数131:1230
参数132:1230
参数133:1260
参数134:1260
参数135:1290
参数136:1290
参数137:1320
参数138:1320
参数139:1350
参数140:1350
参数141:1380
参数142:1380
参数143:1410
参数144:1410
参数145:1425
参数146:0
参数147:1425
参数148:2017-08-10
参数149:2017-08-16
参数150:0
参数151:0
参数152:30
参数153:30
参数154:60
参数155:60
参数156:90
参数157:90
参数158:120
参数159:120
参数160:150
参数161:150
参数162:180
参数163:180
参数164:210
参数165:210
参数166:240
参数167:240
参数168:270
参数169:270
参数170:300
参数171:300
参数172:330
参数173:330
参数174:360
参数175:360
参数176:390
参数177:390
参数178:420
参数179:420
参数180:450
参数181:450
参数182:480
参数183:480
参数184:510
参数185:510
参数186:540
参数187:540
参数188:570
参数189:570
参数190:600
参数191:600
参数192:630
参数193:630
参数194:660
参数195:660
参数196:690
参数197:690
参数198:720
参数199:720
参数200:750
参数201:750
参数202:780
参数203:780
参数204:810
参数205:810
参数206:840
参数207:840
参数208:870
参数209:870
参数210:900
参数211:900
参数212:930
参数213:930
参数214:960
参数215:960
参数216:990
参数217:990
参数218:1020
参数219:1020
参数220:1050
参数221:1050
参数222:1080
参数223:1080
参数224:1110
参数225:1110
参数226:1140
参数227:1140
参数228:1170
参数229:1170
参数230:1200
参数231:1200
参数232:1230
参数233:1230
参数234:1260
参数235:1260
参数236:1290
参数237:1290
参数238:1320
参数239:1320
参数240:1350
参数241:1350
参数242:1380
参数243:1380
参数244:1410
参数245:1410
参数246:1425
参数247:0
参数248:1425
参数249:2017-08-10
参数250:2017-08-16
参数251:0
 
[INFO][2017-08-17 13:46:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_good.getEditReportAnalyse: 
select good_name,
          
            cast(cast(sum(good_count_0) as FLOAT)/? as numeric(8,2))  good_count_0,
          
            cast(cast(sum(good_count_1) as FLOAT)/? as numeric(8,2))  good_count_1,
          
            cast(cast(sum(good_count_2) as FLOAT)/? as numeric(8,2))  good_count_2,
          
            cast(cast(sum(good_count_3) as FLOAT)/? as numeric(8,2))  good_count_3,
          
            cast(cast(sum(good_count_4) as FLOAT)/? as numeric(8,2))  good_count_4,
          
            cast(cast(sum(good_count_5) as FLOAT)/? as numeric(8,2))  good_count_5,
          
            cast(cast(sum(good_count_6) as FLOAT)/? as numeric(8,2))  good_count_6,
          
            cast(cast(sum(good_count_7) as FLOAT)/? as numeric(8,2))  good_count_7,
          
            cast(cast(sum(good_count_8) as FLOAT)/? as numeric(8,2))  good_count_8,
          
            cast(cast(sum(good_count_9) as FLOAT)/? as numeric(8,2))  good_count_9,
          
            cast(cast(sum(good_count_10) as FLOAT)/? as numeric(8,2))  good_count_10,
          
            cast(cast(sum(good_count_11) as FLOAT)/? as numeric(8,2))  good_count_11,
          
            cast(cast(sum(good_count_12) as FLOAT)/? as numeric(8,2))  good_count_12,
          
            cast(cast(sum(good_count_13) as FLOAT)/? as numeric(8,2))  good_count_13,
          
            cast(cast(sum(good_count_14) as FLOAT)/? as numeric(8,2))  good_count_14,
          
            cast(cast(sum(good_count_15) as FLOAT)/? as numeric(8,2))  good_count_15,
          
            cast(cast(sum(good_count_16) as FLOAT)/? as numeric(8,2))  good_count_16,
          
            cast(cast(sum(good_count_17) as FLOAT)/? as numeric(8,2))  good_count_17,
          
            cast(cast(sum(good_count_18) as FLOAT)/? as numeric(8,2))  good_count_18,
          
            cast(cast(sum(good_count_19) as FLOAT)/? as numeric(8,2))  good_count_19,
          
            cast(cast(sum(good_count_20) as FLOAT)/? as numeric(8,2))  good_count_20,
          
            cast(cast(sum(good_count_21) as FLOAT)/? as numeric(8,2))  good_count_21,
          
            cast(cast(sum(good_count_22) as FLOAT)/? as numeric(8,2))  good_count_22,
          
            cast(cast(sum(good_count_23) as FLOAT)/? as numeric(8,2))  good_count_23,
          
            cast(cast(sum(good_count_24) as FLOAT)/? as numeric(8,2))  good_count_24,
          
            cast(cast(sum(good_count_25) as FLOAT)/? as numeric(8,2))  good_count_25,
          
            cast(cast(sum(good_count_26) as FLOAT)/? as numeric(8,2))  good_count_26,
          
            cast(cast(sum(good_count_27) as FLOAT)/? as numeric(8,2))  good_count_27,
          
            cast(cast(sum(good_count_28) as FLOAT)/? as numeric(8,2))  good_count_28,
          
            cast(cast(sum(good_count_29) as FLOAT)/? as numeric(8,2))  good_count_29,
          
            cast(cast(sum(good_count_30) as FLOAT)/? as numeric(8,2))  good_count_30,
          
            cast(cast(sum(good_count_31) as FLOAT)/? as numeric(8,2))  good_count_31,
          
            cast(cast(sum(good_count_32) as FLOAT)/? as numeric(8,2))  good_count_32,
          
            cast(cast(sum(good_count_33) as FLOAT)/? as numeric(8,2))  good_count_33,
          
            cast(cast(sum(good_count_34) as FLOAT)/? as numeric(8,2))  good_count_34,
          
            cast(cast(sum(good_count_35) as FLOAT)/? as numeric(8,2))  good_count_35,
          
            cast(cast(sum(good_count_36) as FLOAT)/? as numeric(8,2))  good_count_36,
          
            cast(cast(sum(good_count_37) as FLOAT)/? as numeric(8,2))  good_count_37,
          
            cast(cast(sum(good_count_38) as FLOAT)/? as numeric(8,2))  good_count_38,
          
            cast(cast(sum(good_count_39) as FLOAT)/? as numeric(8,2))  good_count_39,
          
            cast(cast(sum(good_count_40) as FLOAT)/? as numeric(8,2))  good_count_40,
          
            cast(cast(sum(good_count_41) as FLOAT)/? as numeric(8,2))  good_count_41,
          
            cast(cast(sum(good_count_42) as FLOAT)/? as numeric(8,2))  good_count_42,
          
            cast(cast(sum(good_count_43) as FLOAT)/? as numeric(8,2))  good_count_43,
          
            cast(cast(sum(good_count_44) as FLOAT)/? as numeric(8,2))  good_count_44,
          
            cast(cast(sum(good_count_45) as FLOAT)/? as numeric(8,2))  good_count_45,
          
            cast(cast(sum(good_count_46) as FLOAT)/? as numeric(8,2))  good_count_46,
          
            cast(cast(sum(good_count_47) as FLOAT)/? as numeric(8,2))  good_count_47,
         
        cast(cast(sum(sum_count) as FLOAT)/? as numeric(8,2)) sum_count
            from (
                select isnull(temp.good_name,'合计') as good_name,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_0,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_1,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_2,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_3,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_4,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_5,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_6,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_7,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_8,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_9,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_10,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_11,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_12,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_13,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_14,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_15,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_16,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_17,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_18,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_19,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_20,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_21,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_22,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_23,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_24,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_25,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_26,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_27,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_28,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_29,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_30,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_31,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_32,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_33,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_34,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_35,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_36,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_37,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_38,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_39,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_40,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_41,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_42,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_43,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_44,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_45,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_46,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_47,
                 
                    sum(case when t_minute>=? AND t_minute  <  ? then count else 0 end) as sum_count
                from (
                    select cgl.sale_time,
                           convert(int,datename(Hour , cgl.sale_time))*60 + convert(int,datename(minute, cgl.sale_time)) as t_minute,
                           cgl.class_good_name as good_name,
                           cgl.count
                    from cds_ms_goods_list cgl
                    where cgl.sale_time >=?
                    and cgl.sale_time  <= ?  + ' 23:59:59'
                    and cgl.stores_id = ?
                    and class_good_name is not null
                ) temp group by good_name with rollup

				union all
				 select isnull(temp.good_name,'合计') as good_name,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_0,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_1,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_2,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_3,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_4,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_5,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_6,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_7,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_8,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_9,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_10,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_11,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_12,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_13,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_14,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_15,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_16,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_17,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_18,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_19,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_20,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_21,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_22,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_23,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_24,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_25,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_26,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_27,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_28,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_29,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_30,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_31,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_32,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_33,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_34,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_35,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_36,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_37,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_38,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_39,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_40,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_41,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_42,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_43,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_44,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_45,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_46,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_47,
                 
                    sum(case when t_minute>=? AND t_minute  <  ? then count else 0 end) as sum_count
                from (
                    select cgl.sale_time,
                           convert(int,datename(Hour, cgl.sale_time))*60 + convert(int,datename(minute, cgl.sale_time)) as t_minute,
                           cgl.class_good_name as good_name,
                           cgl.count
                    from view_cds_ms_goods_list cgl
                    where cgl.create_date >=?
                    and cgl.create_date  <= ?  + ' 23:59:59'
                    and cgl.stores_id = ?
                    and class_good_name is not null
                ) temp group by good_name with rollup
             ) t
			 group by good_name
			 order by sum_count desc 
[INFO][2017-08-17 13:46:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:7
参数2:7
参数3:7
参数4:7
参数5:7
参数6:7
参数7:7
参数8:7
参数9:7
参数10:7
参数11:7
参数12:7
参数13:7
参数14:7
参数15:7
参数16:7
参数17:7
参数18:7
参数19:7
参数20:7
参数21:7
参数22:7
参数23:7
参数24:7
参数25:7
参数26:7
参数27:7
参数28:7
参数29:7
参数30:7
参数31:7
参数32:7
参数33:7
参数34:7
参数35:7
参数36:7
参数37:7
参数38:7
参数39:7
参数40:7
参数41:7
参数42:7
参数43:7
参数44:7
参数45:7
参数46:7
参数47:7
参数48:7
参数49:7
参数50:0
参数51:30
参数52:30
参数53:60
参数54:60
参数55:90
参数56:90
参数57:120
参数58:120
参数59:150
参数60:150
参数61:180
参数62:180
参数63:210
参数64:210
参数65:240
参数66:240
参数67:270
参数68:270
参数69:300
参数70:300
参数71:330
参数72:330
参数73:360
参数74:360
参数75:390
参数76:390
参数77:420
参数78:420
参数79:450
参数80:450
参数81:480
参数82:480
参数83:510
参数84:510
参数85:540
参数86:540
参数87:570
参数88:570
参数89:600
参数90:600
参数91:630
参数92:630
参数93:660
参数94:660
参数95:690
参数96:690
参数97:720
参数98:720
参数99:750
参数100:750
参数101:780
参数102:780
参数103:810
参数104:810
参数105:840
参数106:840
参数107:870
参数108:870
参数109:900
参数110:900
参数111:930
参数112:930
参数113:960
参数114:960
参数115:990
参数116:990
参数117:1020
参数118:1020
参数119:1050
参数120:1050
参数121:1080
参数122:1080
参数123:1110
参数124:1110
参数125:1140
参数126:1140
参数127:1170
参数128:1170
参数129:1200
参数130:1200
参数131:1230
参数132:1230
参数133:1260
参数134:1260
参数135:1290
参数136:1290
参数137:1320
参数138:1320
参数139:1350
参数140:1350
参数141:1380
参数142:1380
参数143:1410
参数144:1410
参数145:1425
参数146:0
参数147:1425
参数148:2017-08-10
参数149:2017-08-16
参数150:0
参数151:0
参数152:30
参数153:30
参数154:60
参数155:60
参数156:90
参数157:90
参数158:120
参数159:120
参数160:150
参数161:150
参数162:180
参数163:180
参数164:210
参数165:210
参数166:240
参数167:240
参数168:270
参数169:270
参数170:300
参数171:300
参数172:330
参数173:330
参数174:360
参数175:360
参数176:390
参数177:390
参数178:420
参数179:420
参数180:450
参数181:450
参数182:480
参数183:480
参数184:510
参数185:510
参数186:540
参数187:540
参数188:570
参数189:570
参数190:600
参数191:600
参数192:630
参数193:630
参数194:660
参数195:660
参数196:690
参数197:690
参数198:720
参数199:720
参数200:750
参数201:750
参数202:780
参数203:780
参数204:810
参数205:810
参数206:840
参数207:840
参数208:870
参数209:870
参数210:900
参数211:900
参数212:930
参数213:930
参数214:960
参数215:960
参数216:990
参数217:990
参数218:1020
参数219:1020
参数220:1050
参数221:1050
参数222:1080
参数223:1080
参数224:1110
参数225:1110
参数226:1140
参数227:1140
参数228:1170
参数229:1170
参数230:1200
参数231:1200
参数232:1230
参数233:1230
参数234:1260
参数235:1260
参数236:1290
参数237:1290
参数238:1320
参数239:1320
参数240:1350
参数241:1350
参数242:1380
参数243:1380
参数244:1410
参数245:1410
参数246:1425
参数247:0
参数248:1425
参数249:2017-08-10
参数250:2017-08-16
参数251:0
 
[INFO][2017-08-17 13:46:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_good.getEditReportAnalyse: 
select good_name,
          
            cast(cast(sum(good_count_0) as FLOAT)/? as numeric(8,2))  good_count_0,
          
            cast(cast(sum(good_count_1) as FLOAT)/? as numeric(8,2))  good_count_1,
          
            cast(cast(sum(good_count_2) as FLOAT)/? as numeric(8,2))  good_count_2,
          
            cast(cast(sum(good_count_3) as FLOAT)/? as numeric(8,2))  good_count_3,
          
            cast(cast(sum(good_count_4) as FLOAT)/? as numeric(8,2))  good_count_4,
          
            cast(cast(sum(good_count_5) as FLOAT)/? as numeric(8,2))  good_count_5,
          
            cast(cast(sum(good_count_6) as FLOAT)/? as numeric(8,2))  good_count_6,
          
            cast(cast(sum(good_count_7) as FLOAT)/? as numeric(8,2))  good_count_7,
         
        cast(cast(sum(sum_count) as FLOAT)/? as numeric(8,2)) sum_count
            from (
                select isnull(temp.good_name,'合计') as good_name,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_0,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_1,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_2,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_3,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_4,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_5,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_6,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_7,
                 
                    sum(case when t_minute>=? AND t_minute  <  ? then count else 0 end) as sum_count
                from (
                    select cgl.sale_time,
                           convert(int,datename(Hour , cgl.sale_time))*60 + convert(int,datename(minute, cgl.sale_time)) as t_minute,
                           cgl.class_good_name as good_name,
                           cgl.count
                    from cds_ms_goods_list cgl
                    where cgl.sale_time >=?
                    and cgl.sale_time  <= ?  + ' 23:59:59'
                    and cgl.stores_id = ?
                    and class_good_name is not null
                ) temp group by good_name with rollup

				union all
				 select isnull(temp.good_name,'合计') as good_name,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_0,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_1,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_2,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_3,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_4,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_5,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_6,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_7,
                 
                    sum(case when t_minute>=? AND t_minute  <  ? then count else 0 end) as sum_count
                from (
                    select cgl.sale_time,
                           convert(int,datename(Hour, cgl.sale_time))*60 + convert(int,datename(minute, cgl.sale_time)) as t_minute,
                           cgl.class_good_name as good_name,
                           cgl.count
                    from view_cds_ms_goods_list cgl
                    where cgl.create_date >=?
                    and cgl.create_date  <= ?  + ' 23:59:59'
                    and cgl.stores_id = ?
                    and class_good_name is not null
                ) temp group by good_name with rollup
             ) t
			 group by good_name
			 order by sum_count desc 
[INFO][2017-08-17 13:46:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:1
参数3:1
参数4:1
参数5:1
参数6:1
参数7:1
参数8:1
参数9:1
参数10:826
参数11:856
参数12:856
参数13:886
参数14:886
参数15:916
参数16:916
参数17:946
参数18:946
参数19:976
参数20:976
参数21:1006
参数22:1006
参数23:1036
参数24:1036
参数25:1066
参数26:826
参数27:1066
参数28:2017-08-16
参数29:2017-08-16
参数30:0
参数31:826
参数32:856
参数33:856
参数34:886
参数35:886
参数36:916
参数37:916
参数38:946
参数39:946
参数40:976
参数41:976
参数42:1006
参数43:1006
参数44:1036
参数45:1036
参数46:1066
参数47:826
参数48:1066
参数49:2017-08-16
参数50:2017-08-16
参数51:0
 
[INFO][2017-08-17 13:46:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.orderOnTimeStores: 
select stores_id storesId,name storesName from cds_stores
         
          
        order by stores_id 
[INFO][2017-08-17 13:46:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 13:46:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_report.report2: 
select * from (
                select (case when SUM(temp.iscount)>0 then
                (SUM(temp.iscount)+0.0)/SUM(1)
                else 0 end) as storescount,
                  
                    (case when SUM(case when stores_id=9 then temp.iscount else 0 end)>0 then
                    (SUM(case when stores_id=9 then temp.iscount else 0 end)+0.0)/SUM(case when stores_id=9 then 1 else 0 end )
                    else 0 end) as cur_storescount0,
                  
                    (case when SUM(case when stores_id=10 then temp.iscount else 0 end)>0 then
                    (SUM(case when stores_id=10 then temp.iscount else 0 end)+0.0)/SUM(case when stores_id=10 then 1 else 0 end )
                    else 0 end) as cur_storescount1,
                  
                    (case when SUM(case when stores_id=11 then temp.iscount else 0 end)>0 then
                    (SUM(case when stores_id=11 then temp.iscount else 0 end)+0.0)/SUM(case when stores_id=11 then 1 else 0 end )
                    else 0 end) as cur_storescount2,
                  
                    (case when SUM(case when stores_id=12 then temp.iscount else 0 end)>0 then
                    (SUM(case when stores_id=12 then temp.iscount else 0 end)+0.0)/SUM(case when stores_id=12 then 1 else 0 end )
                    else 0 end) as cur_storescount3,
                  
                    (case when SUM(case when stores_id=13 then temp.iscount else 0 end)>0 then
                    (SUM(case when stores_id=13 then temp.iscount else 0 end)+0.0)/SUM(case when stores_id=13 then 1 else 0 end )
                    else 0 end) as cur_storescount4,
                  
                    (case when SUM(case when stores_id=14 then temp.iscount else 0 end)>0 then
                    (SUM(case when stores_id=14 then temp.iscount else 0 end)+0.0)/SUM(case when stores_id=14 then 1 else 0 end )
                    else 0 end) as cur_storescount5,
                  
                    (case when SUM(case when stores_id=15 then temp.iscount else 0 end)>0 then
                    (SUM(case when stores_id=15 then temp.iscount else 0 end)+0.0)/SUM(case when stores_id=15 then 1 else 0 end )
                    else 0 end) as cur_storescount6,
                  
                    (case when SUM(case when stores_id=16 then temp.iscount else 0 end)>0 then
                    (SUM(case when stores_id=16 then temp.iscount else 0 end)+0.0)/SUM(case when stores_id=16 then 1 else 0 end )
                    else 0 end) as cur_storescount7,
                  
                    (case when SUM(case when stores_id=17 then temp.iscount else 0 end)>0 then
                    (SUM(case when stores_id=17 then temp.iscount else 0 end)+0.0)/SUM(case when stores_id=17 then 1 else 0 end )
                    else 0 end) as cur_storescount8,
                  
                    (case when SUM(case when stores_id=18 then temp.iscount else 0 end)>0 then
                    (SUM(case when stores_id=18 then temp.iscount else 0 end)+0.0)/SUM(case when stores_id=18 then 1 else 0 end )
                    else 0 end) as cur_storescount9,
                  
                    (case when SUM(case when stores_id=19 then temp.iscount else 0 end)>0 then
                    (SUM(case when stores_id=19 then temp.iscount else 0 end)+0.0)/SUM(case when stores_id=19 then 1 else 0 end )
                    else 0 end) as cur_storescount10,
                  
                    (case when SUM(case when stores_id=20 then temp.iscount else 0 end)>0 then
                    (SUM(case when stores_id=20 then temp.iscount else 0 end)+0.0)/SUM(case when stores_id=20 then 1 else 0 end )
                    else 0 end) as cur_storescount11,
                  
                    (case when SUM(case when stores_id=21 then temp.iscount else 0 end)>0 then
                    (SUM(case when stores_id=21 then temp.iscount else 0 end)+0.0)/SUM(case when stores_id=21 then 1 else 0 end )
                    else 0 end) as cur_storescount12,
                 
                isnull(order_date,'合计') as order_date
                from (
                    select
                    s.stores_id,
                    s.name stores_name,
                    DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
                    CONVERT(varchar(100),o.create_date,23) as order_date,
                    (case when o.pack_user_time is null or DATEDIFF(minute,o.create_date,o.pack_user_time)>20 then 0 else 1 end ) as iscount
                    from cds_order_info o
                    left join cds_stores s on o.stores_id = s.stores_id
                    where o.create_date >= ?+' 00:00:00'
                             AND o.create_date <= ?+' 23:59:59'  
                    and o.service_time is null

                    union all

                   select
                    s.stores_id,
                    s.name stores_name,
                    DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
                    CONVERT(varchar(100),o.create_date,23) as order_date,
                    (case when o.pack_user_time is null or DATEDIFF(minute,o.create_date,o.pack_user_time)>20 then 0 else 1 end ) as iscount
                    from view_cds_order_info o
                    left join cds_stores s on o.stores_id = s.stores_id
                    where o.create_date >= ?+' 00:00:00'
                            AND o.create_date <= ?+' 23:59:59' 
                    and o.service_time is null
                ) temp
                group by temp.order_date
                with cube) t order by t.order_date 
[INFO][2017-08-17 13:46:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2017-08-11
参数2:2017-08-17
参数3:2017-08-11
参数4:2017-08-17
 
[INFO][2017-08-17 13:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_pack.packJob: 
SELECT
        count(1) AS count,
        order_date,
        sc_name
      FROM
        (SELECT
           isnull(o.pack_user_name, '未知') AS sc_name,
           CONVERT(VARCHAR(100), o.create_date, 23) AS order_date
         FROM cds_order_info o

         WHERE    o.create_date >= ? + ' 00:00:00'
               AND o.create_date <= ? + ' 23:59:59'
                        
             
	           AND o.order_status IN (1, 2, 3, 4)
         UNION ALL

         SELECT
           isnull(o.pack_user_name, '未知') AS sc_name,
           CONVERT(VARCHAR(100), o.create_date, 23) AS order_date
         FROM view_cds_order_info o

          WHERE    o.create_date >= ? + ' 00:00:00'
               AND o.create_date <= ? + ' 23:59:59'
                
             
               AND o.order_status IN (1, 2, 3, 4)
               ) temp
      GROUP BY   temp.sc_name, temp.order_date with cube 
[INFO][2017-08-17 13:47:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2017-08-11
参数2:2017-08-17
参数3:2017-08-11
参数4:2017-08-17
 
[INFO][2017-08-17 13:47:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_good.getReportAnalyseDays: 
select good_name,
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count0',
            SUM(case when sale_time = ? then price else 0 end ) as 'price0',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count1',
            SUM(case when sale_time = ? then price else 0 end ) as 'price1',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count2',
            SUM(case when sale_time = ? then price else 0 end ) as 'price2',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count3',
            SUM(case when sale_time = ? then price else 0 end ) as 'price3',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count4',
            SUM(case when sale_time = ? then price else 0 end ) as 'price4',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count5',
            SUM(case when sale_time = ? then price else 0 end ) as 'price5',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count6',
            SUM(case when sale_time = ? then price else 0 end ) as 'price6',
         
        SUM(count) 'count',
        SUM(price) 'price'
        from (
        select Convert(varchar(10),sale_time,120) sale_time,price,good_name,stores_id,count from cds_ms_goods_list goods
        where
         goods.sale_time >= ? and goods.sale_time <= ? + ' 23:59:59'   
        union ALL
        select Convert(varchar(10),sale_time,120) sale_time,price,good_name,stores_id,count from view_cds_ms_goods_list goods
        where
         goods.create_date >= ? and goods.create_date <= ?+ ' 23:59:59'   
        ) goods
         
        group by good_name
        order by count DESC 
[INFO][2017-08-17 13:47:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2017-08-11
参数2:2017-08-11
参数3:2017-08-12
参数4:2017-08-12
参数5:2017-08-13
参数6:2017-08-13
参数7:2017-08-14
参数8:2017-08-14
参数9:2017-08-15
参数10:2017-08-15
参数11:2017-08-16
参数12:2017-08-16
参数13:2017-08-17
参数14:2017-08-17
参数15:2017-08-11
参数16:2017-08-17
参数17:2017-08-11
参数18:2017-08-17
 
[INFO][2017-08-17 13:47:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 13:47:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 13:47:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 13:47:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 13:47:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 13:47:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-17 13:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_good.getReportAnalyseDays: 
select good_name,
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count0',
            SUM(case when sale_time = ? then price else 0 end ) as 'price0',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count1',
            SUM(case when sale_time = ? then price else 0 end ) as 'price1',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count2',
            SUM(case when sale_time = ? then price else 0 end ) as 'price2',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count3',
            SUM(case when sale_time = ? then price else 0 end ) as 'price3',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count4',
            SUM(case when sale_time = ? then price else 0 end ) as 'price4',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count5',
            SUM(case when sale_time = ? then price else 0 end ) as 'price5',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count6',
            SUM(case when sale_time = ? then price else 0 end ) as 'price6',
         
        SUM(count) 'count',
        SUM(price) 'price'
        from (
        select Convert(varchar(10),sale_time,120) sale_time,price,good_name,stores_id,count from cds_ms_goods_list goods
        where
         goods.sale_time >= ? and goods.sale_time <= ? + ' 23:59:59'   
        union ALL
        select Convert(varchar(10),sale_time,120) sale_time,price,good_name,stores_id,count from view_cds_ms_goods_list goods
        where
         goods.create_date >= ? and goods.create_date <= ?+ ' 23:59:59'   
        ) goods
         
        group by good_name
        order by count DESC 
[INFO][2017-08-17 13:47:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2017-08-11
参数2:2017-08-11
参数3:2017-08-12
参数4:2017-08-12
参数5:2017-08-13
参数6:2017-08-13
参数7:2017-08-14
参数8:2017-08-14
参数9:2017-08-15
参数10:2017-08-15
参数11:2017-08-16
参数12:2017-08-16
参数13:2017-08-17
参数14:2017-08-17
参数15:2017-08-11
参数16:2017-08-17
参数17:2017-08-11
参数18:2017-08-17
 
[INFO][2017-08-17 13:47:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_good.getReportAnalyseDays: 
select good_name,
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count0',
            SUM(case when sale_time = ? then price else 0 end ) as 'price0',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count1',
            SUM(case when sale_time = ? then price else 0 end ) as 'price1',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count2',
            SUM(case when sale_time = ? then price else 0 end ) as 'price2',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count3',
            SUM(case when sale_time = ? then price else 0 end ) as 'price3',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count4',
            SUM(case when sale_time = ? then price else 0 end ) as 'price4',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count5',
            SUM(case when sale_time = ? then price else 0 end ) as 'price5',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count6',
            SUM(case when sale_time = ? then price else 0 end ) as 'price6',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count7',
            SUM(case when sale_time = ? then price else 0 end ) as 'price7',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count8',
            SUM(case when sale_time = ? then price else 0 end ) as 'price8',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count9',
            SUM(case when sale_time = ? then price else 0 end ) as 'price9',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count10',
            SUM(case when sale_time = ? then price else 0 end ) as 'price10',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count11',
            SUM(case when sale_time = ? then price else 0 end ) as 'price11',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count12',
            SUM(case when sale_time = ? then price else 0 end ) as 'price12',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count13',
            SUM(case when sale_time = ? then price else 0 end ) as 'price13',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count14',
            SUM(case when sale_time = ? then price else 0 end ) as 'price14',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count15',
            SUM(case when sale_time = ? then price else 0 end ) as 'price15',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count16',
            SUM(case when sale_time = ? then price else 0 end ) as 'price16',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count17',
            SUM(case when sale_time = ? then price else 0 end ) as 'price17',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count18',
            SUM(case when sale_time = ? then price else 0 end ) as 'price18',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count19',
            SUM(case when sale_time = ? then price else 0 end ) as 'price19',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count20',
            SUM(case when sale_time = ? then price else 0 end ) as 'price20',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count21',
            SUM(case when sale_time = ? then price else 0 end ) as 'price21',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count22',
            SUM(case when sale_time = ? then price else 0 end ) as 'price22',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count23',
            SUM(case when sale_time = ? then price else 0 end ) as 'price23',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count24',
            SUM(case when sale_time = ? then price else 0 end ) as 'price24',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count25',
            SUM(case when sale_time = ? then price else 0 end ) as 'price25',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count26',
            SUM(case when sale_time = ? then price else 0 end ) as 'price26',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count27',
            SUM(case when sale_time = ? then price else 0 end ) as 'price27',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count28',
            SUM(case when sale_time = ? then price else 0 end ) as 'price28',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count29',
            SUM(case when sale_time = ? then price else 0 end ) as 'price29',
         
        SUM(count) 'count',
        SUM(price) 'price'
        from (
        select Convert(varchar(10),sale_time,120) sale_time,price,good_name,stores_id,count from cds_ms_goods_list goods
        where
         goods.sale_time >= ? and goods.sale_time <= ? + ' 23:59:59'   
        union ALL
        select Convert(varchar(10),sale_time,120) sale_time,price,good_name,stores_id,count from view_cds_ms_goods_list goods
        where
         goods.create_date >= ? and goods.create_date <= ?+ ' 23:59:59'   
        ) goods
         
        group by good_name
        order by count DESC 
[INFO][2017-08-17 13:47:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2017-07-19
参数2:2017-07-19
参数3:2017-07-20
参数4:2017-07-20
参数5:2017-07-21
参数6:2017-07-21
参数7:2017-07-22
参数8:2017-07-22
参数9:2017-07-23
参数10:2017-07-23
参数11:2017-07-24
参数12:2017-07-24
参数13:2017-07-25
参数14:2017-07-25
参数15:2017-07-26
参数16:2017-07-26
参数17:2017-07-27
参数18:2017-07-27
参数19:2017-07-28
参数20:2017-07-28
参数21:2017-07-29
参数22:2017-07-29
参数23:2017-07-30
参数24:2017-07-30
参数25:2017-07-31
参数26:2017-07-31
参数27:2017-08-01
参数28:2017-08-01
参数29:2017-08-02
参数30:2017-08-02
参数31:2017-08-03
参数32:2017-08-03
参数33:2017-08-04
参数34:2017-08-04
参数35:2017-08-05
参数36:2017-08-05
参数37:2017-08-06
参数38:2017-08-06
参数39:2017-08-07
参数40:2017-08-07
参数41:2017-08-08
参数42:2017-08-08
参数43:2017-08-09
参数44:2017-08-09
参数45:2017-08-10
参数46:2017-08-10
参数47:2017-08-11
参数48:2017-08-11
参数49:2017-08-12
参数50:2017-08-12
参数51:2017-08-13
参数52:2017-08-13
参数53:2017-08-14
参数54:2017-08-14
参数55:2017-08-15
参数56:2017-08-15
参数57:2017-08-16
参数58:2017-08-16
参数59:2017-08-17
参数60:2017-08-17
参数61:2017-07-19
参数62:2017-08-17
参数63:2017-07-19
参数64:2017-08-17
 
[INFO][2017-08-17 13:48:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_good.getReportAnalyseDays: 
select good_name,
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count0',
            SUM(case when sale_time = ? then price else 0 end ) as 'price0',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count1',
            SUM(case when sale_time = ? then price else 0 end ) as 'price1',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count2',
            SUM(case when sale_time = ? then price else 0 end ) as 'price2',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count3',
            SUM(case when sale_time = ? then price else 0 end ) as 'price3',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count4',
            SUM(case when sale_time = ? then price else 0 end ) as 'price4',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count5',
            SUM(case when sale_time = ? then price else 0 end ) as 'price5',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count6',
            SUM(case when sale_time = ? then price else 0 end ) as 'price6',
         
        SUM(count) 'count',
        SUM(price) 'price'
        from (
        select Convert(varchar(10),sale_time,120) sale_time,price,good_name,stores_id,count from cds_ms_goods_list goods
        where
         goods.sale_time >= ? and goods.sale_time <= ? + ' 23:59:59'   
        union ALL
        select Convert(varchar(10),sale_time,120) sale_time,price,good_name,stores_id,count from view_cds_ms_goods_list goods
        where
         goods.create_date >= ? and goods.create_date <= ?+ ' 23:59:59'   
        ) goods
         
        group by good_name
        order by count DESC 
[INFO][2017-08-17 13:48:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2017-08-11
参数2:2017-08-11
参数3:2017-08-12
参数4:2017-08-12
参数5:2017-08-13
参数6:2017-08-13
参数7:2017-08-14
参数8:2017-08-14
参数9:2017-08-15
参数10:2017-08-15
参数11:2017-08-16
参数12:2017-08-16
参数13:2017-08-17
参数14:2017-08-17
参数15:2017-08-11
参数16:2017-08-17
参数17:2017-08-11
参数18:2017-08-17
 
[INFO][2017-08-17 13:48:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_good.getReportAnalyseDays: 
select good_name,
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count0',
            SUM(case when sale_time = ? then price else 0 end ) as 'price0',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count1',
            SUM(case when sale_time = ? then price else 0 end ) as 'price1',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count2',
            SUM(case when sale_time = ? then price else 0 end ) as 'price2',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count3',
            SUM(case when sale_time = ? then price else 0 end ) as 'price3',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count4',
            SUM(case when sale_time = ? then price else 0 end ) as 'price4',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count5',
            SUM(case when sale_time = ? then price else 0 end ) as 'price5',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count6',
            SUM(case when sale_time = ? then price else 0 end ) as 'price6',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count7',
            SUM(case when sale_time = ? then price else 0 end ) as 'price7',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count8',
            SUM(case when sale_time = ? then price else 0 end ) as 'price8',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count9',
            SUM(case when sale_time = ? then price else 0 end ) as 'price9',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count10',
            SUM(case when sale_time = ? then price else 0 end ) as 'price10',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count11',
            SUM(case when sale_time = ? then price else 0 end ) as 'price11',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count12',
            SUM(case when sale_time = ? then price else 0 end ) as 'price12',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count13',
            SUM(case when sale_time = ? then price else 0 end ) as 'price13',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count14',
            SUM(case when sale_time = ? then price else 0 end ) as 'price14',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count15',
            SUM(case when sale_time = ? then price else 0 end ) as 'price15',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count16',
            SUM(case when sale_time = ? then price else 0 end ) as 'price16',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count17',
            SUM(case when sale_time = ? then price else 0 end ) as 'price17',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count18',
            SUM(case when sale_time = ? then price else 0 end ) as 'price18',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count19',
            SUM(case when sale_time = ? then price else 0 end ) as 'price19',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count20',
            SUM(case when sale_time = ? then price else 0 end ) as 'price20',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count21',
            SUM(case when sale_time = ? then price else 0 end ) as 'price21',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count22',
            SUM(case when sale_time = ? then price else 0 end ) as 'price22',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count23',
            SUM(case when sale_time = ? then price else 0 end ) as 'price23',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count24',
            SUM(case when sale_time = ? then price else 0 end ) as 'price24',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count25',
            SUM(case when sale_time = ? then price else 0 end ) as 'price25',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count26',
            SUM(case when sale_time = ? then price else 0 end ) as 'price26',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count27',
            SUM(case when sale_time = ? then price else 0 end ) as 'price27',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count28',
            SUM(case when sale_time = ? then price else 0 end ) as 'price28',
          
            SUM(case when sale_time = ? then count else 0 end ) as 'count29',
            SUM(case when sale_time = ? then price else 0 end ) as 'price29',
         
        SUM(count) 'count',
        SUM(price) 'price'
        from (
        select Convert(varchar(10),sale_time,120) sale_time,price,good_name,stores_id,count from cds_ms_goods_list goods
        where
         goods.sale_time >= ? and goods.sale_time <= ? + ' 23:59:59'   
        union ALL
        select Convert(varchar(10),sale_time,120) sale_time,price,good_name,stores_id,count from view_cds_ms_goods_list goods
        where
         goods.create_date >= ? and goods.create_date <= ?+ ' 23:59:59'   
        ) goods
         
        group by good_name
        order by count DESC 
[INFO][2017-08-17 13:48:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2017-07-19
参数2:2017-07-19
参数3:2017-07-20
参数4:2017-07-20
参数5:2017-07-21
参数6:2017-07-21
参数7:2017-07-22
参数8:2017-07-22
参数9:2017-07-23
参数10:2017-07-23
参数11:2017-07-24
参数12:2017-07-24
参数13:2017-07-25
参数14:2017-07-25
参数15:2017-07-26
参数16:2017-07-26
参数17:2017-07-27
参数18:2017-07-27
参数19:2017-07-28
参数20:2017-07-28
参数21:2017-07-29
参数22:2017-07-29
参数23:2017-07-30
参数24:2017-07-30
参数25:2017-07-31
参数26:2017-07-31
参数27:2017-08-01
参数28:2017-08-01
参数29:2017-08-02
参数30:2017-08-02
参数31:2017-08-03
参数32:2017-08-03
参数33:2017-08-04
参数34:2017-08-04
参数35:2017-08-05
参数36:2017-08-05
参数37:2017-08-06
参数38:2017-08-06
参数39:2017-08-07
参数40:2017-08-07
参数41:2017-08-08
参数42:2017-08-08
参数43:2017-08-09
参数44:2017-08-09
参数45:2017-08-10
参数46:2017-08-10
参数47:2017-08-11
参数48:2017-08-11
参数49:2017-08-12
参数50:2017-08-12
参数51:2017-08-13
参数52:2017-08-13
参数53:2017-08-14
参数54:2017-08-14
参数55:2017-08-15
参数56:2017-08-15
参数57:2017-08-16
参数58:2017-08-16
参数59:2017-08-17
参数60:2017-08-17
参数61:2017-07-19
参数62:2017-08-17
参数63:2017-07-19
参数64:2017-08-17
 
[INFO][2017-08-17 13:52:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.orderOnTimeStores: 
select stores_id storesId,name storesName from cds_stores
         
          
        order by stores_id 
[INFO][2017-08-17 13:52:14] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 13:52:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_order_info.orderOnTimeCount1: 
select
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder0',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder0',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder0',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder0',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder0',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder0',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder1',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder1',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder1',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder1',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder1',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder1',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder2',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder2',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder2',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder2',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder2',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder2',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder3',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder3',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder3',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder3',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder3',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder3',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder4',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder4',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder4',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder4',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder4',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder4',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder5',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder5',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder5',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder5',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder5',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder5',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder6',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder6',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder6',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder6',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder6',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder6',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder7',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder7',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder7',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder7',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder7',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder7',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder8',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder8',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder8',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder8',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder8',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder8',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder9',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder9',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder9',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder9',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder9',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder9',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder10',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder10',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder10',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder10',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder10',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder10',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder11',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder11',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder11',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder11',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder11',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder11',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder12',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder12',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder12',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder12',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder12',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder12',
         
        SUM(case when DATEDIFF(minute,create_date,task_time) <  60  and send_name='点我达' then 1 else 0 end)  dwdNiceOrder,
        SUM(case when DATEDIFF(minute,create_date,task_time) <  60  and send_name='美团' then 1 else 0 end)  mtNiceOrder,
        SUM(case when DATEDIFF(minute,create_date,task_time) <  60 and send_name='饿了么' then 1 else 0 end)  elmNiceOrder,
        count(case when send_name='点我达' then 1 else 0 end) dwdAllOrder,
        count(case when send_name='美团' then 1 else 0 end) mtAllOrder,
        count(case when send_name='饿了么' then 1 else 0 end) elmAllOrder,
        isnull(CONVERT (
        VARCHAR (10),
        create_date,
        120
        ),'合计') create_date
        from
        (
        select create_date,task_time,stores_id,send_name FROM [dbo].[cds_order_info]
        where order_status = 4 and service_time is null
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
        union ALL
        select create_date,task_time,stores_id,send_name FROM [dbo].[view_cds_order_info]
        where order_status = 4 and service_time is null
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
        ) temp
         
                group by CONVERT (
                    VARCHAR (10),
                        create_date,
                        120
                        )
                with rollup
                order by create_date 
[INFO][2017-08-17 13:52:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
参数2:9
参数3:9
参数4:9
参数5:9
参数6:9
参数7:10
参数8:10
参数9:10
参数10:10
参数11:10
参数12:10
参数13:11
参数14:11
参数15:11
参数16:11
参数17:11
参数18:11
参数19:12
参数20:12
参数21:12
参数22:12
参数23:12
参数24:12
参数25:13
参数26:13
参数27:13
参数28:13
参数29:13
参数30:13
参数31:14
参数32:14
参数33:14
参数34:14
参数35:14
参数36:14
参数37:15
参数38:15
参数39:15
参数40:15
参数41:15
参数42:15
参数43:16
参数44:16
参数45:16
参数46:16
参数47:16
参数48:16
参数49:17
参数50:17
参数51:17
参数52:17
参数53:17
参数54:17
参数55:18
参数56:18
参数57:18
参数58:18
参数59:18
参数60:18
参数61:19
参数62:19
参数63:19
参数64:19
参数65:19
参数66:19
参数67:20
参数68:20
参数69:20
参数70:20
参数71:20
参数72:20
参数73:21
参数74:21
参数75:21
参数76:21
参数77:21
参数78:21
参数79:2017-08-11
参数80:2017-08-17
参数81:2017-08-11
参数82:2017-08-17
 
[INFO][2017-08-17 13:52:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.orderOnTimeStores: 
select stores_id storesId,name storesName from cds_stores
         
          
        order by stores_id 
[INFO][2017-08-17 13:52:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 13:52:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_order_info.orderOnTimeCount1: 
select
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder0',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder0',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder0',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder0',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder0',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder0',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder1',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder1',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder1',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder1',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder1',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder1',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder2',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder2',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder2',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder2',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder2',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder2',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder3',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder3',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder3',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder3',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder3',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder3',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder4',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder4',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder4',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder4',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder4',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder4',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder5',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder5',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder5',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder5',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder5',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder5',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder6',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder6',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder6',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder6',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder6',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder6',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder7',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder7',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder7',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder7',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder7',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder7',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder8',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder8',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder8',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder8',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder8',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder8',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder9',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder9',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder9',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder9',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder9',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder9',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder10',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder10',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder10',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder10',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder10',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder10',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder11',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder11',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder11',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder11',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder11',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder11',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder12',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder12',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder12',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder12',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder12',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder12',
         
        SUM(case when DATEDIFF(minute,create_date,task_time) <  60  and send_name='点我达' then 1 else 0 end)  dwdNiceOrder,
        SUM(case when DATEDIFF(minute,create_date,task_time) <  60  and send_name='美团' then 1 else 0 end)  mtNiceOrder,
        SUM(case when DATEDIFF(minute,create_date,task_time) <  60 and send_name='饿了么' then 1 else 0 end)  elmNiceOrder,
        count(case when send_name='点我达' then 1 else 0 end) dwdAllOrder,
        count(case when send_name='美团' then 1 else 0 end) mtAllOrder,
        count(case when send_name='饿了么' then 1 else 0 end) elmAllOrder,
        isnull(CONVERT (
        VARCHAR (10),
        create_date,
        120
        ),'合计') create_date
        from
        (
        select create_date,task_time,stores_id,send_name FROM [dbo].[cds_order_info]
        where order_status = 4 and service_time is null
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
        union ALL
        select create_date,task_time,stores_id,send_name FROM [dbo].[view_cds_order_info]
        where order_status = 4 and service_time is null
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
        ) temp
         
                group by CONVERT (
                    VARCHAR (10),
                        create_date,
                        120
                        )
                with rollup
                order by create_date 
[INFO][2017-08-17 13:52:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:9
参数2:9
参数3:9
参数4:9
参数5:9
参数6:9
参数7:10
参数8:10
参数9:10
参数10:10
参数11:10
参数12:10
参数13:11
参数14:11
参数15:11
参数16:11
参数17:11
参数18:11
参数19:12
参数20:12
参数21:12
参数22:12
参数23:12
参数24:12
参数25:13
参数26:13
参数27:13
参数28:13
参数29:13
参数30:13
参数31:14
参数32:14
参数33:14
参数34:14
参数35:14
参数36:14
参数37:15
参数38:15
参数39:15
参数40:15
参数41:15
参数42:15
参数43:16
参数44:16
参数45:16
参数46:16
参数47:16
参数48:16
参数49:17
参数50:17
参数51:17
参数52:17
参数53:17
参数54:17
参数55:18
参数56:18
参数57:18
参数58:18
参数59:18
参数60:18
参数61:19
参数62:19
参数63:19
参数64:19
参数65:19
参数66:19
参数67:20
参数68:20
参数69:20
参数70:20
参数71:20
参数72:20
参数73:21
参数74:21
参数75:21
参数76:21
参数77:21
参数78:21
参数79:2017-08-11
参数80:2017-08-17
参数81:2017-08-11
参数82:2017-08-17
 
[INFO][2017-08-17 13:52:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 13:52:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 13:52:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 13:52:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1032
 
[INFO][2017-08-17 13:52:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 13:52:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 13:52:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.orderOnTimeStores: 
select stores_id storesId,name storesName from cds_stores
         
          
        order by stores_id 
[INFO][2017-08-17 13:52:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 13:52:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_order_info.orderOnTimeCount1: 
select
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder0',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder0',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder0',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder0',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder0',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder0',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder1',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder1',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder1',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder1',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder1',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder1',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder2',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder2',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder2',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder2',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder2',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder2',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder3',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder3',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder3',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder3',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder3',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder3',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder4',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder4',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder4',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder4',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder4',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder4',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder5',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder5',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder5',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder5',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder5',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder5',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder6',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder6',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder6',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder6',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder6',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder6',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder7',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder7',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder7',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder7',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder7',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder7',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder8',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder8',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder8',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder8',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder8',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder8',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder9',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder9',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder9',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder9',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder9',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder9',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder10',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder10',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder10',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder10',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder10',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder10',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder11',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder11',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder11',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder11',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder11',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder11',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder12',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder12',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder12',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder12',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder12',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder12',
         
        SUM(case when DATEDIFF(minute,create_date,task_time) <  60  and send_name='点我达' then 1 else 0 end)  dwdNiceOrder,
        SUM(case when DATEDIFF(minute,create_date,task_time) <  60  and send_name='美团' then 1 else 0 end)  mtNiceOrder,
        SUM(case when DATEDIFF(minute,create_date,task_time) <  60 and send_name='饿了么' then 1 else 0 end)  elmNiceOrder,
        count(case when send_name='点我达' then 1 else 0 end) dwdAllOrder,
        count(case when send_name='美团' then 1 else 0 end) mtAllOrder,
        count(case when send_name='饿了么' then 1 else 0 end) elmAllOrder,
        isnull(CONVERT (
        VARCHAR (10),
        create_date,
        120
        ),'合计') create_date
        from
        (
        select create_date,task_time,stores_id,send_name FROM [dbo].[cds_order_info]
        where order_status = 4 and service_time is null
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
        union ALL
        select create_date,task_time,stores_id,send_name FROM [dbo].[view_cds_order_info]
        where order_status = 4 and service_time is null
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
        ) temp
         
                group by CONVERT (
                    VARCHAR (10),
                        create_date,
                        120
                        )
                with rollup
                order by create_date 
[INFO][2017-08-17 13:52:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:9
参数2:9
参数3:9
参数4:9
参数5:9
参数6:9
参数7:10
参数8:10
参数9:10
参数10:10
参数11:10
参数12:10
参数13:11
参数14:11
参数15:11
参数16:11
参数17:11
参数18:11
参数19:12
参数20:12
参数21:12
参数22:12
参数23:12
参数24:12
参数25:13
参数26:13
参数27:13
参数28:13
参数29:13
参数30:13
参数31:14
参数32:14
参数33:14
参数34:14
参数35:14
参数36:14
参数37:15
参数38:15
参数39:15
参数40:15
参数41:15
参数42:15
参数43:16
参数44:16
参数45:16
参数46:16
参数47:16
参数48:16
参数49:17
参数50:17
参数51:17
参数52:17
参数53:17
参数54:17
参数55:18
参数56:18
参数57:18
参数58:18
参数59:18
参数60:18
参数61:19
参数62:19
参数63:19
参数64:19
参数65:19
参数66:19
参数67:20
参数68:20
参数69:20
参数70:20
参数71:20
参数72:20
参数73:21
参数74:21
参数75:21
参数76:21
参数77:21
参数78:21
参数79:2017-08-17
参数80:2017-08-17
参数81:2017-08-17
参数82:2017-08-17
 
[INFO][2017-08-17 13:52:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.orderOnTimeStores: 
select stores_id storesId,name storesName from cds_stores
         
          
        order by stores_id 
[INFO][2017-08-17 13:52:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 13:52:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_order_info.orderOnTimeCount1: 
select
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder0',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder0',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder0',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder0',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder0',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder0',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder1',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder1',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder1',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder1',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder1',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder1',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder2',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder2',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder2',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder2',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder2',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder2',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder3',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder3',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder3',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder3',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder3',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder3',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder4',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder4',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder4',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder4',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder4',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder4',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder5',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder5',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder5',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder5',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder5',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder5',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder6',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder6',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder6',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder6',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder6',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder6',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder7',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder7',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder7',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder7',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder7',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder7',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder8',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder8',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder8',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder8',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder8',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder8',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder9',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder9',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder9',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder9',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder9',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder9',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder10',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder10',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder10',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder10',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder10',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder10',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder11',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder11',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder11',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder11',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder11',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder11',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder12',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder12',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder12',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder12',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder12',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder12',
         
        SUM(case when DATEDIFF(minute,create_date,task_time) <  60  and send_name='点我达' then 1 else 0 end)  dwdNiceOrder,
        SUM(case when DATEDIFF(minute,create_date,task_time) <  60  and send_name='美团' then 1 else 0 end)  mtNiceOrder,
        SUM(case when DATEDIFF(minute,create_date,task_time) <  60 and send_name='饿了么' then 1 else 0 end)  elmNiceOrder,
        count(case when send_name='点我达' then 1 else 0 end) dwdAllOrder,
        count(case when send_name='美团' then 1 else 0 end) mtAllOrder,
        count(case when send_name='饿了么' then 1 else 0 end) elmAllOrder,
        isnull(CONVERT (
        VARCHAR (10),
        create_date,
        120
        ),'合计') create_date
        from
        (
        select create_date,task_time,stores_id,send_name FROM [dbo].[cds_order_info]
        where order_status = 4 and service_time is null
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
        union ALL
        select create_date,task_time,stores_id,send_name FROM [dbo].[view_cds_order_info]
        where order_status = 4 and service_time is null
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
        ) temp
         
                group by CONVERT (
                    VARCHAR (10),
                        create_date,
                        120
                        )
                with rollup
                order by create_date 
[INFO][2017-08-17 13:52:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:9
参数2:9
参数3:9
参数4:9
参数5:9
参数6:9
参数7:10
参数8:10
参数9:10
参数10:10
参数11:10
参数12:10
参数13:11
参数14:11
参数15:11
参数16:11
参数17:11
参数18:11
参数19:12
参数20:12
参数21:12
参数22:12
参数23:12
参数24:12
参数25:13
参数26:13
参数27:13
参数28:13
参数29:13
参数30:13
参数31:14
参数32:14
参数33:14
参数34:14
参数35:14
参数36:14
参数37:15
参数38:15
参数39:15
参数40:15
参数41:15
参数42:15
参数43:16
参数44:16
参数45:16
参数46:16
参数47:16
参数48:16
参数49:17
参数50:17
参数51:17
参数52:17
参数53:17
参数54:17
参数55:18
参数56:18
参数57:18
参数58:18
参数59:18
参数60:18
参数61:19
参数62:19
参数63:19
参数64:19
参数65:19
参数66:19
参数67:20
参数68:20
参数69:20
参数70:20
参数71:20
参数72:20
参数73:21
参数74:21
参数75:21
参数76:21
参数77:21
参数78:21
参数79:2017-08-16
参数80:2017-08-17
参数81:2017-08-16
参数82:2017-08-17
 
[INFO][2017-08-17 13:52:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.orderOnTimeStores: 
select stores_id storesId,name storesName from cds_stores
         
          
        order by stores_id 
[INFO][2017-08-17 13:52:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 13:52:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_order_info.orderOnTimeCount1: 
select
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder0',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder0',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder0',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder0',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder0',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder0',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder1',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder1',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder1',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder1',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder1',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder1',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder2',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder2',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder2',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder2',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder2',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder2',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder3',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder3',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder3',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder3',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder3',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder3',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder4',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder4',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder4',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder4',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder4',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder4',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder5',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder5',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder5',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder5',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder5',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder5',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder6',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder6',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder6',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder6',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder6',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder6',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder7',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder7',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder7',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder7',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder7',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder7',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder8',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder8',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder8',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder8',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder8',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder8',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder9',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder9',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder9',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder9',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder9',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder9',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder10',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder10',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder10',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder10',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder10',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder10',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder11',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder11',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder11',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder11',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder11',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder11',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder12',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder12',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder12',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder12',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder12',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder12',
         
        SUM(case when DATEDIFF(minute,create_date,task_time) <  60  and send_name='点我达' then 1 else 0 end)  dwdNiceOrder,
        SUM(case when DATEDIFF(minute,create_date,task_time) <  60  and send_name='美团' then 1 else 0 end)  mtNiceOrder,
        SUM(case when DATEDIFF(minute,create_date,task_time) <  60 and send_name='饿了么' then 1 else 0 end)  elmNiceOrder,
        count(case when send_name='点我达' then 1 else 0 end) dwdAllOrder,
        count(case when send_name='美团' then 1 else 0 end) mtAllOrder,
        count(case when send_name='饿了么' then 1 else 0 end) elmAllOrder,
        isnull(CONVERT (
        VARCHAR (10),
        create_date,
        120
        ),'合计') create_date
        from
        (
        select create_date,task_time,stores_id,send_name FROM [dbo].[cds_order_info]
        where order_status = 4 and service_time is null
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
        union ALL
        select create_date,task_time,stores_id,send_name FROM [dbo].[view_cds_order_info]
        where order_status = 4 and service_time is null
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
        ) temp
         
                group by CONVERT (
                    VARCHAR (10),
                        create_date,
                        120
                        )
                with rollup
                order by create_date 
[INFO][2017-08-17 13:52:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
参数2:9
参数3:9
参数4:9
参数5:9
参数6:9
参数7:10
参数8:10
参数9:10
参数10:10
参数11:10
参数12:10
参数13:11
参数14:11
参数15:11
参数16:11
参数17:11
参数18:11
参数19:12
参数20:12
参数21:12
参数22:12
参数23:12
参数24:12
参数25:13
参数26:13
参数27:13
参数28:13
参数29:13
参数30:13
参数31:14
参数32:14
参数33:14
参数34:14
参数35:14
参数36:14
参数37:15
参数38:15
参数39:15
参数40:15
参数41:15
参数42:15
参数43:16
参数44:16
参数45:16
参数46:16
参数47:16
参数48:16
参数49:17
参数50:17
参数51:17
参数52:17
参数53:17
参数54:17
参数55:18
参数56:18
参数57:18
参数58:18
参数59:18
参数60:18
参数61:19
参数62:19
参数63:19
参数64:19
参数65:19
参数66:19
参数67:20
参数68:20
参数69:20
参数70:20
参数71:20
参数72:20
参数73:21
参数74:21
参数75:21
参数76:21
参数77:21
参数78:21
参数79:2017-08-17
参数80:2017-08-17
参数81:2017-08-17
参数82:2017-08-17
 
[INFO][2017-08-17 13:52:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.orderOnTimeStores: 
select stores_id storesId,name storesName from cds_stores
         
          
        order by stores_id 
[INFO][2017-08-17 13:52:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 13:52:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_order_info.orderOnTimeCount2: 
select
          
            SUM(case when DATEDIFF(minute,service_time,task_time)>=-10 and DATEDIFF(minute,service_time,task_time) <= 10 and stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder0',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder0',
            SUM(case when DATEDIFF(minute,service_time,task_time)>=-10 and DATEDIFF(minute,service_time,task_time) <= 10 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder0',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder0',
            SUM(case when DATEDIFF(minute,service_time,task_time)>=-10 and DATEDIFF(minute,service_time,task_time) <= 10 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder0',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder0',
          
            SUM(case when DATEDIFF(minute,service_time,task_time)>=-10 and DATEDIFF(minute,service_time,task_time) <= 10 and stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder1',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder1',
            SUM(case when DATEDIFF(minute,service_time,task_time)>=-10 and DATEDIFF(minute,service_time,task_time) <= 10 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder1',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder1',
            SUM(case when DATEDIFF(minute,service_time,task_time)>=-10 and DATEDIFF(minute,service_time,task_time) <= 10 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder1',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder1',
          
            SUM(case when DATEDIFF(minute,service_time,task_time)>=-10 and DATEDIFF(minute,service_time,task_time) <= 10 and stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder2',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder2',
            SUM(case when DATEDIFF(minute,service_time,task_time)>=-10 and DATEDIFF(minute,service_time,task_time) <= 10 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder2',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder2',
            SUM(case when DATEDIFF(minute,service_time,task_time)>=-10 and DATEDIFF(minute,service_time,task_time) <= 10 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder2',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder2',
          
            SUM(case when DATEDIFF(minute,service_time,task_time)>=-10 and DATEDIFF(minute,service_time,task_time) <= 10 and stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder3',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder3',
            SUM(case when DATEDIFF(minute,service_time,task_time)>=-10 and DATEDIFF(minute,service_time,task_time) <= 10 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder3',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder3',
            SUM(case when DATEDIFF(minute,service_time,task_time)>=-10 and DATEDIFF(minute,service_time,task_time) <= 10 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder3',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder3',
          
            SUM(case when DATEDIFF(minute,service_time,task_time)>=-10 and DATEDIFF(minute,service_time,task_time) <= 10 and stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder4',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder4',
            SUM(case when DATEDIFF(minute,service_time,task_time)>=-10 and DATEDIFF(minute,service_time,task_time) <= 10 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder4',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder4',
            SUM(case when DATEDIFF(minute,service_time,task_time)>=-10 and DATEDIFF(minute,service_time,task_time) <= 10 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder4',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder4',
          
            SUM(case when DATEDIFF(minute,service_time,task_time)>=-10 and DATEDIFF(minute,service_time,task_time) <= 10 and stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder5',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder5',
            SUM(case when DATEDIFF(minute,service_time,task_time)>=-10 and DATEDIFF(minute,service_time,task_time) <= 10 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder5',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder5',
            SUM(case when DATEDIFF(minute,service_time,task_time)>=-10 and DATEDIFF(minute,service_time,task_time) <= 10 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder5',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder5',
          
            SUM(case when DATEDIFF(minute,service_time,task_time)>=-10 and DATEDIFF(minute,service_time,task_time) <= 10 and stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder6',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder6',
            SUM(case when DATEDIFF(minute,service_time,task_time)>=-10 and DATEDIFF(minute,service_time,task_time) <= 10 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder6',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder6',
            SUM(case when DATEDIFF(minute,service_time,task_time)>=-10 and DATEDIFF(minute,service_time,task_time) <= 10 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder6',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder6',
          
            SUM(case when DATEDIFF(minute,service_time,task_time)>=-10 and DATEDIFF(minute,service_time,task_time) <= 10 and stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder7',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder7',
            SUM(case when DATEDIFF(minute,service_time,task_time)>=-10 and DATEDIFF(minute,service_time,task_time) <= 10 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder7',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder7',
            SUM(case when DATEDIFF(minute,service_time,task_time)>=-10 and DATEDIFF(minute,service_time,task_time) <= 10 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder7',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder7',
          
            SUM(case when DATEDIFF(minute,service_time,task_time)>=-10 and DATEDIFF(minute,service_time,task_time) <= 10 and stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder8',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder8',
            SUM(case when DATEDIFF(minute,service_time,task_time)>=-10 and DATEDIFF(minute,service_time,task_time) <= 10 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder8',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder8',
            SUM(case when DATEDIFF(minute,service_time,task_time)>=-10 and DATEDIFF(minute,service_time,task_time) <= 10 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder8',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder8',
          
            SUM(case when DATEDIFF(minute,service_time,task_time)>=-10 and DATEDIFF(minute,service_time,task_time) <= 10 and stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder9',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder9',
            SUM(case when DATEDIFF(minute,service_time,task_time)>=-10 and DATEDIFF(minute,service_time,task_time) <= 10 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder9',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder9',
            SUM(case when DATEDIFF(minute,service_time,task_time)>=-10 and DATEDIFF(minute,service_time,task_time) <= 10 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder9',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder9',
          
            SUM(case when DATEDIFF(minute,service_time,task_time)>=-10 and DATEDIFF(minute,service_time,task_time) <= 10 and stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder10',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder10',
            SUM(case when DATEDIFF(minute,service_time,task_time)>=-10 and DATEDIFF(minute,service_time,task_time) <= 10 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder10',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder10',
            SUM(case when DATEDIFF(minute,service_time,task_time)>=-10 and DATEDIFF(minute,service_time,task_time) <= 10 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder10',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder10',
          
            SUM(case when DATEDIFF(minute,service_time,task_time)>=-10 and DATEDIFF(minute,service_time,task_time) <= 10 and stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder11',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder11',
            SUM(case when DATEDIFF(minute,service_time,task_time)>=-10 and DATEDIFF(minute,service_time,task_time) <= 10 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder11',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder11',
            SUM(case when DATEDIFF(minute,service_time,task_time)>=-10 and DATEDIFF(minute,service_time,task_time) <= 10 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder11',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder11',
          
            SUM(case when DATEDIFF(minute,service_time,task_time)>=-10 and DATEDIFF(minute,service_time,task_time) <= 10 and stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder12',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder12',
            SUM(case when DATEDIFF(minute,service_time,task_time)>=-10 and DATEDIFF(minute,service_time,task_time) <= 10 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder12',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder12',
            SUM(case when DATEDIFF(minute,service_time,task_time)>=-10 and DATEDIFF(minute,service_time,task_time) <= 10 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder12',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder12',
         
        SUM(case when DATEDIFF(minute,service_time,task_time)>=-10 and DATEDIFF(minute,service_time,task_time) <= 10 and send_name='点我达' then 1 else 0 end)  dwdNiceOrder,
        SUM(case when DATEDIFF(minute,service_time,task_time)>=-10 and DATEDIFF(minute,service_time,task_time) <= 10 and send_name='美团' then 1 else 0 end)  mtNiceOrder,
        SUM(case when DATEDIFF(minute,service_time,task_time)>=-10 and DATEDIFF(minute,service_time,task_time) <= 10 and send_name='饿了么' then 1 else 0 end)  elmNiceOrder,
        count(case when send_name='点我达' then 1 else 0 end) dwdAllOrder,
        count(case when send_name='美团' then 1 else 0 end) mtAllOrder,
        count(case when send_name='饿了么' then 1 else 0 end) elmAllOrder,
        isnull(CONVERT (
        VARCHAR (10),
        create_date,
        120
        ),'合计') create_date
        from
        (
        select create_date,task_time,stores_id,send_name,service_time FROM [dbo].[cds_order_info]
        where order_status = 4 and service_time is not null
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
        union ALL
        select create_date,task_time,stores_id,send_name,service_time FROM [dbo].[view_cds_order_info]
        where order_status = 4 and service_time is not null
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
        ) temp
         
                group by CONVERT (
                    VARCHAR (10),
                        create_date,
                        120
                        )
                with rollup
                order by create_date 
[INFO][2017-08-17 13:52:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
参数2:9
参数3:9
参数4:9
参数5:9
参数6:9
参数7:10
参数8:10
参数9:10
参数10:10
参数11:10
参数12:10
参数13:11
参数14:11
参数15:11
参数16:11
参数17:11
参数18:11
参数19:12
参数20:12
参数21:12
参数22:12
参数23:12
参数24:12
参数25:13
参数26:13
参数27:13
参数28:13
参数29:13
参数30:13
参数31:14
参数32:14
参数33:14
参数34:14
参数35:14
参数36:14
参数37:15
参数38:15
参数39:15
参数40:15
参数41:15
参数42:15
参数43:16
参数44:16
参数45:16
参数46:16
参数47:16
参数48:16
参数49:17
参数50:17
参数51:17
参数52:17
参数53:17
参数54:17
参数55:18
参数56:18
参数57:18
参数58:18
参数59:18
参数60:18
参数61:19
参数62:19
参数63:19
参数64:19
参数65:19
参数66:19
参数67:20
参数68:20
参数69:20
参数70:20
参数71:20
参数72:20
参数73:21
参数74:21
参数75:21
参数76:21
参数77:21
参数78:21
参数79:2017-08-17
参数80:2017-08-17
参数81:2017-08-17
参数82:2017-08-17
 
[INFO][2017-08-17 13:52:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.orderOnTimeStores: 
select stores_id storesId,name storesName from cds_stores
         
          
        order by stores_id 
[INFO][2017-08-17 13:52:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 13:52:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_order_info.orderOnTimeCount1: 
select
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder0',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder0',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder0',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder0',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder0',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder0',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder1',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder1',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder1',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder1',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder1',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder1',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder2',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder2',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder2',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder2',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder2',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder2',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder3',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder3',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder3',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder3',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder3',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder3',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder4',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder4',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder4',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder4',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder4',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder4',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder5',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder5',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder5',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder5',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder5',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder5',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder6',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder6',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder6',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder6',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder6',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder6',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder7',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder7',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder7',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder7',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder7',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder7',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder8',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder8',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder8',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder8',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder8',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder8',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder9',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder9',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder9',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder9',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder9',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder9',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder10',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder10',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder10',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder10',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder10',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder10',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder11',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder11',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder11',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder11',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder11',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder11',
          
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='点我达' then 1 else 0 end) 'dwdNiceOrder12',
            SUM(case when stores_id=?  and send_name='点我达'  then 1 else 0 end) 'dwdAllOrder12',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='美团' then 1 else 0 end) 'mtNiceOrder12',
            SUM(case when stores_id=? and send_name='美团' then 1 else 0 end) 'mtAllOrder12',
            SUM(case when DATEDIFF(minute,create_date,task_time) <  60 AND stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmNiceOrder12',
            SUM(case when stores_id=? and send_name='饿了么'  then 1 else 0 end) 'elmAllOrder12',
         
        SUM(case when DATEDIFF(minute,create_date,task_time) <  60  and send_name='点我达' then 1 else 0 end)  dwdNiceOrder,
        SUM(case when DATEDIFF(minute,create_date,task_time) <  60  and send_name='美团' then 1 else 0 end)  mtNiceOrder,
        SUM(case when DATEDIFF(minute,create_date,task_time) <  60 and send_name='饿了么' then 1 else 0 end)  elmNiceOrder,
        count(case when send_name='点我达' then 1 else 0 end) dwdAllOrder,
        count(case when send_name='美团' then 1 else 0 end) mtAllOrder,
        count(case when send_name='饿了么' then 1 else 0 end) elmAllOrder,
        isnull(CONVERT (
        VARCHAR (10),
        create_date,
        120
        ),'合计') create_date
        from
        (
        select create_date,task_time,stores_id,send_name FROM [dbo].[cds_order_info]
        where order_status = 4 and service_time is null
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
        union ALL
        select create_date,task_time,stores_id,send_name FROM [dbo].[view_cds_order_info]
        where order_status = 4 and service_time is null
         
              AND create_date >= ?  
         
         
              AND create_date <= ? + ' 23:59:59'   
         
        ) temp
         
                group by CONVERT (
                    VARCHAR (10),
                        create_date,
                        120
                        )
                with rollup
                order by create_date 
[INFO][2017-08-17 13:52:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:9
参数2:9
参数3:9
参数4:9
参数5:9
参数6:9
参数7:10
参数8:10
参数9:10
参数10:10
参数11:10
参数12:10
参数13:11
参数14:11
参数15:11
参数16:11
参数17:11
参数18:11
参数19:12
参数20:12
参数21:12
参数22:12
参数23:12
参数24:12
参数25:13
参数26:13
参数27:13
参数28:13
参数29:13
参数30:13
参数31:14
参数32:14
参数33:14
参数34:14
参数35:14
参数36:14
参数37:15
参数38:15
参数39:15
参数40:15
参数41:15
参数42:15
参数43:16
参数44:16
参数45:16
参数46:16
参数47:16
参数48:16
参数49:17
参数50:17
参数51:17
参数52:17
参数53:17
参数54:17
参数55:18
参数56:18
参数57:18
参数58:18
参数59:18
参数60:18
参数61:19
参数62:19
参数63:19
参数64:19
参数65:19
参数66:19
参数67:20
参数68:20
参数69:20
参数70:20
参数71:20
参数72:20
参数73:21
参数74:21
参数75:21
参数76:21
参数77:21
参数78:21
参数79:2017-08-17
参数80:2017-08-17
参数81:2017-08-17
参数82:2017-08-17
 
[INFO][2017-08-17 13:52:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 13:52:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 13:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 13:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 13:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 13:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 13:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 13:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 13:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 13:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 13:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 13:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 13:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 13:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 13:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 13:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 13:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-17 13:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-17 13:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 13:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 13:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 13:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 13:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-17 13:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-17 13:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-17 13:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-17 13:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-17 13:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 13:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 13:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:52:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-17 13:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-08-17 13:52:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 13:52:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 13:52:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 13:52:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 13:52:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 13:52:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-08-17 13:52:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 13:52:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-08-17 13:52:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 13:52:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 13:52:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[WARN][2017-08-17 13:52:41] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-1 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-08-17 13:52:41] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-5 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-08-17 13:52:41] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-9 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-08-17 13:52:41] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-3 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-08-17 13:52:43] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-6 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[WARN][2017-08-17 13:52:43] org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:189) http-nio-80-exec-8 Resolved exception caused by Handler execution: java.lang.NullPointerException 
[INFO][2017-08-17 13:53:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 13:53:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 13:53:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 13:53:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 13:53:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 13:53:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 13:53:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 13:53:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 13:53:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 13:53:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 13:53:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-08-17 13:53:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:
 
[INFO][2017-08-17 13:53:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-08-17 13:53:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-17 13:53:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-08-17 13:53:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-17 13:53:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 13:53:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-17 13:53:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-17 13:53:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-17 13:53:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 13:53:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 13:53:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 13:53:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 13:53:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-08-17 13:53:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:67
 
[INFO][2017-08-17 13:53:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-08-17 13:53:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:73
 
[INFO][2017-08-17 13:53:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 13:53:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 13:53:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 13:53:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 13:53:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 13:53:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 13:53:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 13:53:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 13:53:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 13:53:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 13:53:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 13:53:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 13:53:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 13:53:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 13:53:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 13:53:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 13:53:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:53:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-17 13:53:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:53:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-17 13:53:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 13:53:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 13:53:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 13:53:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 13:53:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:53:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-17 13:53:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:53:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-17 13:53:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:53:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-17 13:53:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:53:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-17 13:53:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:53:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-17 13:53:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 13:53:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 13:53:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:53:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-17 13:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
 
[INFO][2017-08-17 13:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 13:53:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
 
[INFO][2017-08-17 13:54:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:54:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:10
 
[INFO][2017-08-17 13:54:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 13:54:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:10
 
[INFO][2017-08-17 13:54:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:54:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:10
 
[INFO][2017-08-17 13:54:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 13:54:54] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:10
 
[INFO][2017-08-17 13:54:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:54:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:10
 
[INFO][2017-08-17 13:54:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 13:54:55] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:10
 
[INFO][2017-08-17 13:54:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:54:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:10
 
[INFO][2017-08-17 13:54:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 13:54:56] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:10
 
[INFO][2017-08-17 13:54:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:54:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:11
 
[INFO][2017-08-17 13:54:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 6 
[INFO][2017-08-17 13:54:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:11
 
[INFO][2017-08-17 13:55:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:55:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:12
 
[INFO][2017-08-17 13:55:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 13:55:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:12
 
[INFO][2017-08-17 13:55:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:55:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:13
 
[INFO][2017-08-17 13:55:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 13:55:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:13
 
[INFO][2017-08-17 13:55:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:55:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:14
 
[INFO][2017-08-17 13:55:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 13:55:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:14
 
[INFO][2017-08-17 13:55:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:55:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:15
 
[INFO][2017-08-17 13:55:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 13:55:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:15
 
[INFO][2017-08-17 13:55:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:55:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:16
 
[INFO][2017-08-17 13:55:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 13:55:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:16
 
[INFO][2017-08-17 13:55:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:55:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:17
 
[INFO][2017-08-17 13:55:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 13:55:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:17
 
[INFO][2017-08-17 13:55:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:55:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:18
 
[INFO][2017-08-17 13:55:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 4 
[INFO][2017-08-17 13:55:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:18
 
[INFO][2017-08-17 13:55:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:55:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:19
 
[INFO][2017-08-17 13:55:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 13:55:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:19
 
[INFO][2017-08-17 13:55:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:55:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:20
 
[INFO][2017-08-17 13:55:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 13 
[INFO][2017-08-17 13:55:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:20
 
[INFO][2017-08-17 13:55:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:55:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:9
 
[INFO][2017-08-17 13:55:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 13:55:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:9
 
[INFO][2017-08-17 13:55:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:55:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
参数2:9
 
[INFO][2017-08-17 13:55:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE c.brand_id = ?

                
            
            
                
                    AND (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 13:55:35] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
参数2:9
 
[INFO][2017-08-17 13:55:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:55:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:9
 
[INFO][2017-08-17 13:55:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 13:55:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:9
 
[INFO][2017-08-17 13:55:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:55:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:10
 
[INFO][2017-08-17 13:55:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 13:55:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:10
 
[INFO][2017-08-17 13:55:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-17 13:55:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:46
 
[INFO][2017-08-17 13:55:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 13:55:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 13:55:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-08-17 13:55:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
参数2:10
 
[INFO][2017-08-17 13:55:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 13:55:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 13:55:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-17 13:55:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:46
 
[INFO][2017-08-17 13:55:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 13:55:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:46
 
[INFO][2017-08-17 13:55:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-08-17 13:55:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:10
 
[INFO][2017-08-17 13:56:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-17 13:56:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:46
 
[INFO][2017-08-17 13:56:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 13:56:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 13:56:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 13:56:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 13:56:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-08-17 13:56:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
参数2:10
 
[INFO][2017-08-17 13:56:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-17 13:56:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:46
 
[INFO][2017-08-17 13:56:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 13:56:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:46
 
[INFO][2017-08-17 13:56:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-08-17 13:56:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:10
 
[INFO][2017-08-17 13:56:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-17 13:56:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:15
 
[INFO][2017-08-17 13:56:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 13:56:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:15
 
[INFO][2017-08-17 13:56:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:56:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:21
 
[INFO][2017-08-17 13:56:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 3 
[INFO][2017-08-17 13:56:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:21
 
[INFO][2017-08-17 13:56:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:56:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:9
 
[INFO][2017-08-17 13:56:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 13:56:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:9
 
[INFO][2017-08-17 13:56:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:56:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:9
参数2:29
 
[INFO][2017-08-17 13:56:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-08-17 13:56:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:9
参数2:29
 
[INFO][2017-08-17 13:56:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:56:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:9
参数2:32
 
[INFO][2017-08-17 13:56:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 13:56:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:9
参数2:32
 
[INFO][2017-08-17 13:56:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:56:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
参数2:31
 
[INFO][2017-08-17 13:56:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 13:56:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
参数2:31
 
[INFO][2017-08-17 13:56:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:56:30] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:9
参数2:30
 
[INFO][2017-08-17 13:56:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 13:56:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:9
参数2:30
 
[INFO][2017-08-17 13:56:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:56:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:9
参数2:29
 
[INFO][2017-08-17 13:56:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      )) tmp where tmp.rownumber between 1 and 7 
[INFO][2017-08-17 13:56:32] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:9
参数2:29
 
[INFO][2017-08-17 13:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:9
 
[INFO][2017-08-17 13:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 13:56:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:9
 
[INFO][2017-08-17 13:56:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:56:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
参数2:42
 
[INFO][2017-08-17 13:56:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getGoodsList: 
select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ) 
[INFO][2017-08-17 13:56:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:9
参数2:42
 
[INFO][2017-08-17 13:56:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:56:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:9
参数2:45
 
[INFO][2017-08-17 13:56:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )
                
            
            
            
                
                    AND (
                         b.stores_class_id = ?
                      )) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 13:56:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:9
参数2:45
 
[INFO][2017-08-17 13:56:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:56:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
 
[INFO][2017-08-17 13:56:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 13:56:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
 
[INFO][2017-08-17 13:56:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:56:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:10
 
[INFO][2017-08-17 13:56:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 13:56:47] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:10
 
[INFO][2017-08-17 13:56:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:56:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:11
 
[INFO][2017-08-17 13:56:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 6 
[INFO][2017-08-17 13:56:48] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:11
 
[INFO][2017-08-17 13:56:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:56:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:9
 
[INFO][2017-08-17 13:56:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 13:56:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:9
 
[INFO][2017-08-17 13:56:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 13:56:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 13:56:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 30 
[INFO][2017-08-17 13:56:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 13:57:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 13:57:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 13:57:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 30 
[INFO][2017-08-17 13:57:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 13:57:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 13:57:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 13:57:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 30 
[INFO][2017-08-17 13:57:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 13:57:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 13:57:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 13:57:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 13:57:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1032
 
[INFO][2017-08-17 13:57:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 13:57:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 13:58:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:58:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:10
 
[INFO][2017-08-17 13:58:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 13:58:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:10
 
[INFO][2017-08-17 13:58:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 13:58:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
 
[INFO][2017-08-17 13:58:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 13:58:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
 
[INFO][2017-08-17 13:58:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 13:58:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 13:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 13:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 13:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 13:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 13:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 13:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 13:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 13:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 13:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 13:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 13:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 13:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 13:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 13:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 13:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-17 13:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-17 13:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 13:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 13:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-17 13:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 13:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 13:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-17 13:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-17 13:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-17 13:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-17 13:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 13:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 13:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 13:58:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-17 13:59:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-17 13:59:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:55
 
[INFO][2017-08-17 13:59:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 13:59:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 13:59:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 13:59:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 13:59:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-08-17 13:59:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
参数2:18
 
[INFO][2017-08-17 13:59:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-17 13:59:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:55
 
[INFO][2017-08-17 13:59:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 13:59:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:55
 
[INFO][2017-08-17 13:59:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-08-17 13:59:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:18
 
[INFO][2017-08-17 13:59:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-08-17 13:59:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
参数2:18
 
[INFO][2017-08-17 13:59:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-08-17 13:59:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
参数2:18
 
[INFO][2017-08-17 13:59:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-08-17 13:59:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:18
 
[INFO][2017-08-17 13:59:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select count(0) from (select b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?)  tmp_count 
[INFO][2017-08-17 13:59:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:18
 
[INFO][2017-08-17 13:59:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStandardGoods: 
select tmp.* from (select (row_number() Over(order by a.good_id asc)) as rownumber, b.class_id,b.good_name,a.* from cds_standard_good_list a left join cds_ms_goods b on a.good_id= b.good_id
         
         WHERE a.standard_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 13:59:16] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:18
 
[INFO][2017-08-17 13:59:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods)  tmp_count 
[INFO][2017-08-17 13:59:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 13:59:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-17 13:59:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 13:59:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 13:59:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 13:59:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-08-17 13:59:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-17 13:59:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 13:59:29] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-17 14:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 14:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 14:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 14:00:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 14:00:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:00:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 14:00:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:00:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 14:00:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:00:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 14:00:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-08-17 14:00:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:
 
[INFO][2017-08-17 14:00:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.GetGoodsInfoLists: 
select count(0) from (select a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?)  tmp_count 
[INFO][2017-08-17 14:00:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-17 14:00:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select count(0) from (select * from  cds_ms_goods
         
         WHERE status = ?)  tmp_count 
[INFO][2017-08-17 14:00:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-17 14:00:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_stores.GetGoodsInfoLists: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, a.* ,c.brand_id,
                (select count(1) from cds_erp_good_list b where b.good_id=a.good_id) as good_count
                from cds_goods_info a
                left join cds_class c on c.class_id=a.class_id
         
         WHERE a.status = ?) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 14:00:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-17 14:00:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.getMsGoodsPageRecord: 
select tmp.* from (select (row_number() Over(order by good_id asc)) as rownumber, * from  cds_ms_goods
         
         WHERE status = ?) tmp where tmp.rownumber between 1 and 10 
[INFO][2017-08-17 14:00:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-17 14:00:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 14:00:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 14:00:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 14:00:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 14:00:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-08-17 14:00:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:67
 
[INFO][2017-08-17 14:00:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-08-17 14:00:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:73
 
[INFO][2017-08-17 14:00:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-08-17 14:00:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:79
 
[INFO][2017-08-17 14:00:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-08-17 14:00:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:82
 
[INFO][2017-08-17 14:00:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-08-17 14:00:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:86
 
[INFO][2017-08-17 14:00:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-08-17 14:00:24] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:98
 
[INFO][2017-08-17 14:00:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-08-17 14:00:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:142
 
[INFO][2017-08-17 14:00:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-08-17 14:00:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:126
 
[INFO][2017-08-17 14:00:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_stores.GetGoodsInfoErp: 
select
                a.erp_good_id,
                m.good_id,
                c.class_nick_name,
                t.class_id,
                m.good_name,
                a.good_count
                from cds_erp_good_list a
                left join cds_ms_goods m on a.ms_good_id=m.good_id
                left join cds_goods_info g on a.good_id = g.good_id
                left join cds_class c on c.class_id = g.class_id
                left join cds_class_type t on m.class_id = t.class_id
                where a.good_id=? 
[INFO][2017-08-17 14:00:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:85
 
[INFO][2017-08-17 14:00:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_area
             


          
         
            ORDER BY id 
[INFO][2017-08-17 14:00:44] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 14:00:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 14:00:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 14:00:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:00:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 14:00:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_stores.getCity: 
select * from cds_area
              where id in (select distinct city from cds_stores ) 
[INFO][2017-08-17 14:00:45] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 14:00:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getStoresBrand: 
select count(0) from (select * from cds_stores_brand)  tmp_count 
[INFO][2017-08-17 14:00:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 14:00:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_stores.getStoresBrand: 
select tmp.* from (select (row_number() Over(order by stores_brand_id asc)) as rownumber, * from cds_stores_brand) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 14:00:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 14:00:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 14:00:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 14:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 14:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 14:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 14:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 14:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 14:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 14:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 14:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 14:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 14:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 14:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 14:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-17 14:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-17 14:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 14:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-17 14:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-17 14:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-17 14:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1
 
[INFO][2017-08-17 14:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-17 14:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 14:00:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 14:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:00:51] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2
 
[INFO][2017-08-17 14:00:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 14:00:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
 
[INFO][2017-08-17 14:00:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 14:00:52] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:9
 
[INFO][2017-08-17 14:00:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-08-17 14:00:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
参数2:9
 
[INFO][2017-08-17 14:00:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-08-17 14:00:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:9
 
[INFO][2017-08-17 14:01:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-17 14:01:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:47
 
[INFO][2017-08-17 14:01:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 14:01:26] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 14:01:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:01:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 14:01:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-08-17 14:01:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
参数2:9
 
[INFO][2017-08-17 14:01:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-17 14:01:27] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:47
 
[INFO][2017-08-17 14:01:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select * from cds_standard_list
         
         WHERE sgl_id = ? 
[INFO][2017-08-17 14:01:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:47
 
[INFO][2017-08-17 14:01:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-08-17 14:01:28] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:25
 
[INFO][2017-08-17 14:01:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-17 14:01:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:7
 
[INFO][2017-08-17 14:01:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 14:01:33] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 14:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 14:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-08-17 14:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
参数2:9
 
[INFO][2017-08-17 14:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-17 14:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:7
 
[INFO][2017-08-17 14:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStandardList: 
select tmp.* from (select (row_number() Over(order by standard_id asc)) as rownumber, * from cds_standard_list
         
         WHERE sgl_id = ?) tmp where tmp.rownumber between 1 and 1 
[INFO][2017-08-17 14:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:7
 
[INFO][2017-08-17 14:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-08-17 14:01:34] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:9
 
[INFO][2017-08-17 14:01:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_goods_list
             


         WHERE sgl_id = ? 
[INFO][2017-08-17 14:01:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:5
 
[INFO][2017-08-17 14:01:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 14:01:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 14:01:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:01:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 14:01:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_brand
             


         WHERE brand_id = ?
            and
                stores_id = ? 
[INFO][2017-08-17 14:01:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
参数2:9
 
[INFO][2017-08-17 14:01:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select count(0) from (select * from cds_standard_list
         
         WHERE sgl_id = ?)  tmp_count 
[INFO][2017-08-17 14:01:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:5
 
[INFO][2017-08-17 14:01:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStandardList: 
select * from cds_standard_list
         
         WHERE sgl_id = ? 
[INFO][2017-08-17 14:01:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:5
 
[INFO][2017-08-17 14:01:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores_class
             


         WHERE stores_brand_id = ? 
         
            ORDER BY stores_class_id 
[INFO][2017-08-17 14:01:39] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:9
 
[INFO][2017-08-17 14:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 14:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 14:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 14:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1032
 
[INFO][2017-08-17 14:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 14:02:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 14:07:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 14:07:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 14:07:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 14:07:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 14:07:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 14:07:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1032
 
[INFO][2017-08-17 14:12:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 14:12:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 14:12:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 14:12:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 14:12:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 14:12:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1032
 
[INFO][2017-08-17 14:17:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 14:17:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 14:17:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 14:17:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 14:17:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 14:17:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1032
 
[INFO][2017-08-17 14:22:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 14:22:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 14:22:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 14:22:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 14:22:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 14:22:23] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1032
 
[INFO][2017-08-17 14:24:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 14:24:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 14:24:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:24:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 14:24:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:24:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:24:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 14:24:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 14:24:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:24:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:24:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 14:24:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 14:24:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 14:24:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 14:24:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 14:24:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 14:24:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 14:24:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 14:24:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:24:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-17 14:24:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:24:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-17 14:24:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:24:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1
 
[INFO][2017-08-17 14:24:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:24:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 14:24:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:24:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-17 14:24:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:24:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-17 14:24:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 14:24:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 14:24:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:24:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:24:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:2
 
[INFO][2017-08-17 14:24:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-17 14:24:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:24:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-17 14:25:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 14:25:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 14:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 14:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 14:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 14:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 14:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 14:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 14:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 14:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 14:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 14:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 14:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 14:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-17 14:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 14:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-17 14:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-17 14:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-17 14:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 14:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 14:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-17 14:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-17 14:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-17 14:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:25:40] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-17 14:25:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 14:25:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 14:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 14:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 14:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 14:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 14:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 14:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 14:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 14:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 14:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 14:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-17 14:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 14:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 14:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 14:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-17 14:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-17 14:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-17 14:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-17 14:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-17 14:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 14:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 14:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-17 14:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:26:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-17 14:26:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 14:26:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 14:26:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:26:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 14:26:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:26:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 14:26:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:26:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 14:26:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:26:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 14:26:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:26:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 14:26:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 14:26:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 14:26:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 14:26:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 14:26:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 14:26:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 14:26:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:26:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-17 14:26:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:26:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 14:26:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:26:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:1
 
[INFO][2017-08-17 14:26:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:26:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-17 14:26:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:26:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-17 14:26:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 14:26:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 14:26:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:26:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-17 14:26:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:26:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2
 
[INFO][2017-08-17 14:26:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:26:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-17 14:26:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:26:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-17 14:27:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 14:27:13] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 14:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-17 14:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:0
参数2:2017-08-17
参数3:2017-08-17
参数4:0
参数5:2017-08-17
参数6:2017-08-17
参数7:0
参数8:2017-08-17
参数9:2017-08-17
参数10:0
参数11:2017-08-17
参数12:2017-08-17
参数13:0
参数14:2017-08-17
参数15:2017-08-17
参数16:0
参数17:2017-08-17
参数18:2017-08-17
参数19:0
参数20:2017-08-17
参数21:2017-08-17
参数22:0
参数23:2017-08-17
参数24:2017-08-17
参数25:0
参数26:2017-08-17
参数27:2017-08-17
 
[INFO][2017-08-17 14:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-17 14:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2017-08-17
参数2:2017-08-17
 
[INFO][2017-08-17 14:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 14:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 14:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-17 14:27:15] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5 参数1:2017-08-17
参数2:2017-08-17
参数3:0
参数4:2017-08-17
参数5:2017-08-17
参数6:0
参数7:2017-08-16
参数8:2017-08-16
参数9:0
参数10:2017-08-16
参数11:2017-08-16
参数12:0
参数13:2017-08-10
参数14:2017-08-10
参数15:0
 
[INFO][2017-08-17 14:27:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 14:27:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 14:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 14:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 14:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 14:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 14:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 14:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 14:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 14:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 14:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 14:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-17 14:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 14:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 14:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:1
 
[INFO][2017-08-17 14:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 14:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-17 14:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-17 14:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2
 
[INFO][2017-08-17 14:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-17 14:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-17 14:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 14:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 14:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:27:20] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-17 14:29:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 14:29:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 14:29:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-17 14:29:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:0
参数2:2017-08-17
参数3:2017-08-17
参数4:0
参数5:2017-08-17
参数6:2017-08-17
参数7:0
参数8:2017-08-17
参数9:2017-08-17
参数10:0
参数11:2017-08-17
参数12:2017-08-17
参数13:0
参数14:2017-08-17
参数15:2017-08-17
参数16:0
参数17:2017-08-17
参数18:2017-08-17
参数19:0
参数20:2017-08-17
参数21:2017-08-17
参数22:0
参数23:2017-08-17
参数24:2017-08-17
参数25:0
参数26:2017-08-17
参数27:2017-08-17
 
[INFO][2017-08-17 14:29:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-17 14:29:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2017-08-17
参数2:2017-08-17
参数3:0
参数4:2017-08-17
参数5:2017-08-17
参数6:0
参数7:2017-08-16
参数8:2017-08-16
参数9:0
参数10:2017-08-16
参数11:2017-08-16
参数12:0
参数13:2017-08-10
参数14:2017-08-10
参数15:0
 
[INFO][2017-08-17 14:29:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-17 14:29:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2017-08-17
参数2:2017-08-17
 
[INFO][2017-08-17 14:29:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 14:29:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 14:29:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 14:29:05] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 14:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 14:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 14:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 14:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 14:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 14:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 14:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 14:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 14:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 14:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-17 14:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1
 
[INFO][2017-08-17 14:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 14:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 14:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 14:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-17 14:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-17 14:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-17 14:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2
 
[INFO][2017-08-17 14:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-17 14:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 14:29:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 14:29:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:29:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-17 14:29:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 14:29:41] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 14:29:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-17 14:29:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:0
参数2:2017-08-17
参数3:2017-08-17
参数4:0
参数5:2017-08-17
参数6:2017-08-17
参数7:0
参数8:2017-08-17
参数9:2017-08-17
参数10:0
参数11:2017-08-17
参数12:2017-08-17
参数13:0
参数14:2017-08-17
参数15:2017-08-17
参数16:0
参数17:2017-08-17
参数18:2017-08-17
参数19:0
参数20:2017-08-17
参数21:2017-08-17
参数22:0
参数23:2017-08-17
参数24:2017-08-17
参数25:0
参数26:2017-08-17
参数27:2017-08-17
 
[INFO][2017-08-17 14:29:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-17 14:29:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2017-08-17
参数2:2017-08-17
 
[INFO][2017-08-17 14:29:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 14:29:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 14:29:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-17 14:29:43] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:2017-08-17
参数2:2017-08-17
参数3:0
参数4:2017-08-17
参数5:2017-08-17
参数6:0
参数7:2017-08-16
参数8:2017-08-16
参数9:0
参数10:2017-08-16
参数11:2017-08-16
参数12:0
参数13:2017-08-10
参数14:2017-08-10
参数15:0
 
[INFO][2017-08-17 14:29:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 14:29:46] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 14:29:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:29:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 14:29:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:29:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 14:29:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:29:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 14:29:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:29:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 14:29:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:29:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 14:29:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 14:29:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 14:29:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 14:29:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 14:29:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 14:29:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 14:29:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:29:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-17 14:29:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:29:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1
 
[INFO][2017-08-17 14:29:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:29:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-17 14:29:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:29:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 14:29:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:29:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-17 14:29:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:29:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-17 14:29:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:29:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2
 
[INFO][2017-08-17 14:29:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 14:29:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 14:29:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:29:49] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-17 14:29:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:29:50] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-17 14:30:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_users
             


         WHERE user_login = ? 
[INFO][2017-08-17 14:30:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:chenbin
 
[INFO][2017-08-17 14:30:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 14:30:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:351
参数2:1032
 
[INFO][2017-08-17 14:30:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 14:30:58] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:352
参数2:1032
 
[INFO][2017-08-17 14:30:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 14:30:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:375
参数2:1032
 
[INFO][2017-08-17 14:30:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 14:30:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:380
参数2:1032
 
[INFO][2017-08-17 14:30:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 14:30:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:353
参数2:1032
 
[INFO][2017-08-17 14:30:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 14:30:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:376
参数2:1032
 
[INFO][2017-08-17 14:30:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 14:30:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:372
参数2:1032
 
[INFO][2017-08-17 14:31:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 14:31:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:354
参数2:1032
 
[INFO][2017-08-17 14:31:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 14:31:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:355
参数2:1032
 
[INFO][2017-08-17 14:31:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_role_menu.getUserMenu: 
select distinct menu.* from (
            select id,parentid,app,model,action,name,status,listorder,app+'/'+model+'/'+action as rule_name,icon
            from cds_menu
            where parentid=? and status=1) menu
            left join cds_auth_access access on menu.rule_name = access.rule_name
            left join cds_role role on access.role_id = role.id
            left join cds_role_user ru on role.id = ru.role_id
            where ru.user_id=?
            order by listorder 
[INFO][2017-08-17 14:31:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:356
参数2:1032
 
[INFO][2017-08-17 14:31:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


         WHERE stores_id = ? 
[INFO][2017-08-17 14:31:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:0
 
[INFO][2017-08-17 14:31:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 14:31:00] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 14:31:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_home.getdoActionCount: 
select 'doCount1' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 0
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dopackCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and o.pack_user_time is null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'dosendCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            AND (o.order_status = 1 or o.order_status = 2) and o.pack_user_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount3' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 3
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount4' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 4
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'doCount99' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and  o.order_status = 99
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'advanceCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2) and o.service_time is not null
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'packExceptionCount' as keyname,count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)  and  DATEDIFF(minute,o.create_date,o.pack_user_time) > 10
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59'
            union all
            select 'sendExceptionCount' as keyname, count(1) as docount
            from cds_order_info o
            where o.stores_id = ?
            and (o.order_status = 1 or o.order_status = 2)
            and (DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),o.task_time) >60
            or (o.send_exception is not null and o.send_exception !='')
            )
            and o.create_date >= ?
            and o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-17 14:31:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:0
参数2:2017-08-17
参数3:2017-08-17
参数4:0
参数5:2017-08-17
参数6:2017-08-17
参数7:0
参数8:2017-08-17
参数9:2017-08-17
参数10:0
参数11:2017-08-17
参数12:2017-08-17
参数13:0
参数14:2017-08-17
参数15:2017-08-17
参数16:0
参数17:2017-08-17
参数18:2017-08-17
参数19:0
参数20:2017-08-17
参数21:2017-08-17
参数22:0
参数23:2017-08-17
参数24:2017-08-17
参数25:0
参数26:2017-08-17
参数27:2017-08-17
 
[INFO][2017-08-17 14:31:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_backmoney.bmCount: 
select isnull(count(1),0) as bm_count from cds_back_money where bp_time >= ?
           AND bp_time <= ? + ' 23:59:59'   
        and (do_status = 0 or do_status is null) 
[INFO][2017-08-17 14:31:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2017-08-17
参数2:2017-08-17
 
[INFO][2017-08-17 14:31:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 14:31:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 14:31:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_home.shop_data: 
select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'curser' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'yesterday' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id

            union all
            select fromin,brand_id,
                   sum(sum1)                                                                 AS sum1, --营业额
                   sum(case when order_status != '99' then 1 else 0 end)                     AS sum2, --有效订单
--                    sum(sum1) / sum(case when order_status != '99' then 1 else 0 end)         AS sum3, --客单价
	               sum(case when order_status ='99' then 1 else 0 end)						 AS sum4, --无效订单
	               sum(serviceFee)                                                           AS serviceFee,--平台服务费
                   sum(income)                                                               AS income,--店铺收入
                   sum(box_price)                                                            AS box_price, --餐盒费
                   sum(ship_fee)                                                             AS ship_fee,--配送费
                   sum(shop_part)                                                            AS shop_part,--店铺承担
                   sum(platform_part)                                                        AS platform_part,--平台承担
                   sum(deduction_price)                                                      AS deduction_price,--优惠金额
                   sum(abs(uc_price))                                                        AS uc_price,--红包金额
                   sum(total_price)                                                          AS total_price,--用户实付
                   sum(goods_prcie)                                                          AS goods_prcie,--商品总价
                   'last_week' as type
            from (
            select goods_prcie+ship_fee+box_price as sum1,
            income,fromin,order_status,brand_id,serviceFee,box_price,ship_fee,shop_part,platform_part
            ,deduction_price,uc_price,total_price,goods_prcie
            from view_cds_order_info a
            WHERE a.create_date >= ? AND a.create_date <= ? + ' 23:59:59'

            and a.stores_id =?
            ) temp
            group by temp.fromin,brand_id 
[INFO][2017-08-17 14:31:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2017-08-17
参数2:2017-08-17
参数3:0
参数4:2017-08-17
参数5:2017-08-17
参数6:0
参数7:2017-08-16
参数8:2017-08-16
参数9:0
参数10:2017-08-16
参数11:2017-08-16
参数12:0
参数13:2017-08-10
参数14:2017-08-10
参数15:0
 
[INFO][2017-08-17 14:31:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 14:31:03] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 14:31:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:31:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 14:31:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 14:31:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 14:31:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id)  tmp_count 
[INFO][2017-08-17 14:31:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 14:31:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:31:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 14:31:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:31:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 14:31:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:31:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 14:31:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:31:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 14:31:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id) tmp where tmp.rownumber between 1 and 15 
[INFO][2017-08-17 14:31:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 14:31:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:31:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 14:31:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:31:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:1
 
[INFO][2017-08-17 14:31:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:31:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:1
 
[INFO][2017-08-17 14:31:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:31:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:1
 
[INFO][2017-08-17 14:31:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_ptstores_manage.getClassTree2: 
select a.stores_class_id,a.class_name,d.brand_id,d.brand_name,c.stores_id,c.name from cds_stores_class a
            left join cds_stores_brand b  on a.stores_brand_id = b.stores_brand_id
            left join cds_stores c on b.stores_id = c.stores_id
            left join cds_brand d on b.brand_id = d.brand_id 
[INFO][2017-08-17 14:31:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 14:31:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:31:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
 
[INFO][2017-08-17 14:31:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:31:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2
 
[INFO][2017-08-17 14:31:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:31:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2
 
[INFO][2017-08-17 14:31:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:31:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3 参数1:2
 
[INFO][2017-08-17 14:31:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_ptstores_manage.getStoresCombobox: 
select  (b.stores_brand_id) as id ,(a.name) as text,'icon icon-367' as iconCls,(a.stores_id) as s_id  from cds_stores a left join cds_stores_brand b on a.stores_id = b.stores_id where b.brand_id = ? 
[INFO][2017-08-17 14:31:04] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:2
 
[INFO][2017-08-17 14:31:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 14:31:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:10
 
[INFO][2017-08-17 14:31:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 14:31:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:10
 
[INFO][2017-08-17 14:31:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select count(0) from (select d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      ))  tmp_count 
[INFO][2017-08-17 14:31:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:9
 
[INFO][2017-08-17 14:31:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_ptstores_manage.getGoodsList: 
select tmp.* from (select (row_number() Over(order by a.sgl_id desc)) as rownumber, d.brand_name,(c.stores_id)as st_id,(d.brand_id)as bd_id,f.name,b.stores_class_id as class_id,b.class_name,a.* from cds_stores_goods_list a
              left join cds_stores_class b on a.stores_class_id = b.stores_class_id
              left join cds_stores_brand c on a.stores_brand_id = c.stores_brand_id
              left join cds_brand d on c.brand_id = d.brand_id
              left join cds_stores f on c.stores_id = f.stores_id
         
         WHERE  (
                         c.stores_id = ?
                      )) tmp where tmp.rownumber between 1 and 8 
[INFO][2017-08-17 14:31:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:9
 
[INFO][2017-08-17 14:34:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 14:34:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 14:34:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 14:34:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:1032
 
[INFO][2017-08-17 14:34:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 14:34:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 14:35:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:35:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 14:35:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 14:35:57] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 14:35:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:35:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 14:35:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_gift.getHistoryPageRecord: 
select count(0) from (select
            DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
            DATEDIFF(minute,o.create_date,getdate()) as pack_wait_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),o.task_user_time) as takemea_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),getdate()) as takemea_wait_time,
            DATEDIFF(minute,isnull(o.task_order_time,o.create_date),o.task_time) as use_send_time,
            DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),getdate()) as use_send_wait_time,
            s.name stores_name,
            b.brand_name,
            o.*
--             isnull(g.send_type,99) as send_type
            from view_cds_order_info o
            left join cds_stores s on o.stores_id = s.stores_id
            left join cds_brand b on o.brand_id = b.brand_id
--             left join cds_gift_register_list g on g.phone = o.receiver_phone
         
         WHERE o.create_date >= ? 
            
            
                 AND o.create_date <= ? + ' 23:59:59')  tmp_count 
[INFO][2017-08-17 14:35:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2017-08-15
参数2:2017-08-15
 
[INFO][2017-08-17 14:35:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_gift.getHistoryPageRecord: 
select
            DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
            DATEDIFF(minute,o.create_date,getdate()) as pack_wait_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),o.task_user_time) as takemea_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),getdate()) as takemea_wait_time,
            DATEDIFF(minute,isnull(o.task_order_time,o.create_date),o.task_time) as use_send_time,
            DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),getdate()) as use_send_wait_time,
            s.name stores_name,
            b.brand_name,
            o.*
--             isnull(g.send_type,99) as send_type
            from view_cds_order_info o
            left join cds_stores s on o.stores_id = s.stores_id
            left join cds_brand b on o.brand_id = b.brand_id
--             left join cds_gift_register_list g on g.phone = o.receiver_phone
         
         WHERE o.create_date >= ? 
            
            
                 AND o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-17 14:35:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2017-08-15
参数2:2017-08-15
 
[INFO][2017-08-17 14:35:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 14:35:59] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 14:36:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 14:36:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7 参数1:1032
 
[INFO][2017-08-17 14:36:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:36:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8  
[INFO][2017-08-17 14:36:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 14:36:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 14:36:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 14:36:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 14:36:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:36:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 14:36:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_gift.getHistoryPageRecord: 
select count(0) from (select
            DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
            DATEDIFF(minute,o.create_date,getdate()) as pack_wait_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),o.task_user_time) as takemea_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),getdate()) as takemea_wait_time,
            DATEDIFF(minute,isnull(o.task_order_time,o.create_date),o.task_time) as use_send_time,
            DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),getdate()) as use_send_wait_time,
            s.name stores_name,
            b.brand_name,
            o.*
--             isnull(g.send_type,99) as send_type
            from view_cds_order_info o
            left join cds_stores s on o.stores_id = s.stores_id
            left join cds_brand b on o.brand_id = b.brand_id
--             left join cds_gift_register_list g on g.phone = o.receiver_phone
         
         WHERE o.create_date >= ? 
            
            
                 AND o.create_date <= ? + ' 23:59:59')  tmp_count 
[INFO][2017-08-17 14:36:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2017-08-15
参数2:2017-08-15
 
[INFO][2017-08-17 14:36:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_gift.getHistoryPageRecord: 
select
            DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
            DATEDIFF(minute,o.create_date,getdate()) as pack_wait_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),o.task_user_time) as takemea_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),getdate()) as takemea_wait_time,
            DATEDIFF(minute,isnull(o.task_order_time,o.create_date),o.task_time) as use_send_time,
            DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),getdate()) as use_send_wait_time,
            s.name stores_name,
            b.brand_name,
            o.*
--             isnull(g.send_type,99) as send_type
            from view_cds_order_info o
            left join cds_stores s on o.stores_id = s.stores_id
            left join cds_brand b on o.brand_id = b.brand_id
--             left join cds_gift_register_list g on g.phone = o.receiver_phone
         
         WHERE o.create_date >= ? 
            
            
                 AND o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-17 14:36:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2 参数1:2017-08-15
参数2:2017-08-15
 
[INFO][2017-08-17 14:36:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 14:36:02] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 14:36:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_good.getReportGood: 
select temp.class_good_name,
            SUM(good_count) as good_count,
            sum(good_price) as good_price
            from (
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from cds_ms_goods_list
             
                WHERE  sale_time >= ?
                AND sale_time <= ? + ' 23:59:59' 
             
                and class_good_name is not null
                group by class_good_name
                union all
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from view_cds_ms_goods_list
             
                WHERE  create_date >= ?
                AND create_date <= ? + ' 23:59:59' 
             
            and class_good_name is not null
                group by class_good_name
            ) temp
            group by temp.class_good_name
         
              order by good_count desc 
[INFO][2017-08-17 14:36:06] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4 参数1:2017-08-17
参数2:2017-08-17
参数3:2017-08-17
参数4:2017-08-17
 
[INFO][2017-08-17 14:36:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_good.getEditReportAnalyse: 
select good_name,
          
            cast(cast(sum(good_count_0) as FLOAT)/? as numeric(8,2))  good_count_0,
          
            cast(cast(sum(good_count_1) as FLOAT)/? as numeric(8,2))  good_count_1,
          
            cast(cast(sum(good_count_2) as FLOAT)/? as numeric(8,2))  good_count_2,
          
            cast(cast(sum(good_count_3) as FLOAT)/? as numeric(8,2))  good_count_3,
          
            cast(cast(sum(good_count_4) as FLOAT)/? as numeric(8,2))  good_count_4,
          
            cast(cast(sum(good_count_5) as FLOAT)/? as numeric(8,2))  good_count_5,
          
            cast(cast(sum(good_count_6) as FLOAT)/? as numeric(8,2))  good_count_6,
          
            cast(cast(sum(good_count_7) as FLOAT)/? as numeric(8,2))  good_count_7,
         
        cast(cast(sum(sum_count) as FLOAT)/? as numeric(8,2)) sum_count
            from (
                select isnull(temp.good_name,'合计') as good_name,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_0,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_1,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_2,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_3,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_4,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_5,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_6,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_7,
                 
                    sum(case when t_minute>=? AND t_minute  <  ? then count else 0 end) as sum_count
                from (
                    select cgl.sale_time,
                           convert(int,datename(Hour , cgl.sale_time))*60 + convert(int,datename(minute, cgl.sale_time)) as t_minute,
                           cgl.class_good_name as good_name,
                           cgl.count
                    from cds_ms_goods_list cgl
                    where cgl.sale_time >=?
                    and cgl.sale_time  <= ?  + ' 23:59:59'
                    and cgl.stores_id = ?
                    and class_good_name is not null
                ) temp group by good_name with rollup

				union all
				 select isnull(temp.good_name,'合计') as good_name,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_0,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_1,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_2,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_3,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_4,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_5,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_6,
                  
                    SUM(case when t_minute>=? AND t_minute  <  ? then count else 0 end ) as good_count_7,
                 
                    sum(case when t_minute>=? AND t_minute  <  ? then count else 0 end) as sum_count
                from (
                    select cgl.sale_time,
                           convert(int,datename(Hour, cgl.sale_time))*60 + convert(int,datename(minute, cgl.sale_time)) as t_minute,
                           cgl.class_good_name as good_name,
                           cgl.count
                    from view_cds_ms_goods_list cgl
                    where cgl.create_date >=?
                    and cgl.create_date  <= ?  + ' 23:59:59'
                    and cgl.stores_id = ?
                    and class_good_name is not null
                ) temp group by good_name with rollup
             ) t
			 group by good_name
			 order by sum_count desc 
[INFO][2017-08-17 14:36:07] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1
参数2:1
参数3:1
参数4:1
参数5:1
参数6:1
参数7:1
参数8:1
参数9:1
参数10:876
参数11:906
参数12:906
参数13:936
参数14:936
参数15:966
参数16:966
参数17:996
参数18:996
参数19:1026
参数20:1026
参数21:1056
参数22:1056
参数23:1086
参数24:1086
参数25:1116
参数26:876
参数27:1116
参数28:2017-08-16
参数29:2017-08-16
参数30:0
参数31:876
参数32:906
参数33:906
参数34:936
参数35:936
参数36:966
参数37:966
参数38:996
参数39:996
参数40:1026
参数41:1026
参数42:1056
参数43:1056
参数44:1086
参数45:1086
参数46:1116
参数47:876
参数48:1116
参数49:2017-08-16
参数50:2017-08-16
参数51:0
 
[INFO][2017-08-17 14:36:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_good.getReportGood: 
select temp.class_good_name,
            SUM(good_count) as good_count,
            sum(good_price) as good_price
            from (
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from cds_ms_goods_list
             
                WHERE  sale_time >= ?
                AND sale_time <= ? + ' 23:59:59' 
             
                and class_good_name is not null
                group by class_good_name
                union all
                select class_good_name,
                SUM(count) as good_count,
                SUM(price) as good_price
                from view_cds_ms_goods_list
             
                WHERE  create_date >= ?
                AND create_date <= ? + ' 23:59:59' 
             
            and class_good_name is not null
                group by class_good_name
            ) temp
            group by temp.class_good_name
         
              order by good_count desc 
[INFO][2017-08-17 14:36:08] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2017-08-17
参数2:2017-08-17
参数3:2017-08-17
参数4:2017-08-17
 
[INFO][2017-08-17 14:36:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:36:09] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 14:36:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:36:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 14:36:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_gift.getHistoryPageRecord: 
select count(0) from (select
            DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
            DATEDIFF(minute,o.create_date,getdate()) as pack_wait_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),o.task_user_time) as takemea_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),getdate()) as takemea_wait_time,
            DATEDIFF(minute,isnull(o.task_order_time,o.create_date),o.task_time) as use_send_time,
            DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),getdate()) as use_send_wait_time,
            s.name stores_name,
            b.brand_name,
            o.*
--             isnull(g.send_type,99) as send_type
            from view_cds_order_info o
            left join cds_stores s on o.stores_id = s.stores_id
            left join cds_brand b on o.brand_id = b.brand_id
--             left join cds_gift_register_list g on g.phone = o.receiver_phone
         
         WHERE o.create_date >= ? 
            
            
                 AND o.create_date <= ? + ' 23:59:59')  tmp_count 
[INFO][2017-08-17 14:36:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2017-08-15
参数2:2017-08-15
 
[INFO][2017-08-17 14:36:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_gift.getHistoryPageRecord: 
select
            DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
            DATEDIFF(minute,o.create_date,getdate()) as pack_wait_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),o.task_user_time) as takemea_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),getdate()) as takemea_wait_time,
            DATEDIFF(minute,isnull(o.task_order_time,o.create_date),o.task_time) as use_send_time,
            DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),getdate()) as use_send_wait_time,
            s.name stores_name,
            b.brand_name,
            o.*
--             isnull(g.send_type,99) as send_type
            from view_cds_order_info o
            left join cds_stores s on o.stores_id = s.stores_id
            left join cds_brand b on o.brand_id = b.brand_id
--             left join cds_gift_register_list g on g.phone = o.receiver_phone
         
         WHERE o.create_date >= ? 
            
            
                 AND o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-17 14:36:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2017-08-15
参数2:2017-08-15
 
[INFO][2017-08-17 14:36:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 14:36:10] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 14:36:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:36:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 14:36:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 14:36:11] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 14:36:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:36:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 14:36:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_gift.getHistoryPageRecord: 
select count(0) from (select
            DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
            DATEDIFF(minute,o.create_date,getdate()) as pack_wait_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),o.task_user_time) as takemea_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),getdate()) as takemea_wait_time,
            DATEDIFF(minute,isnull(o.task_order_time,o.create_date),o.task_time) as use_send_time,
            DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),getdate()) as use_send_wait_time,
            s.name stores_name,
            b.brand_name,
            o.*
--             isnull(g.send_type,99) as send_type
            from view_cds_order_info o
            left join cds_stores s on o.stores_id = s.stores_id
            left join cds_brand b on o.brand_id = b.brand_id
--             left join cds_gift_register_list g on g.phone = o.receiver_phone
         
         WHERE o.create_date >= ? 
            
            
                 AND o.create_date <= ? + ' 23:59:59')  tmp_count 
[INFO][2017-08-17 14:36:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2017-08-15
参数2:2017-08-15
 
[INFO][2017-08-17 14:36:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_gift.getHistoryPageRecord: 
select
            DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
            DATEDIFF(minute,o.create_date,getdate()) as pack_wait_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),o.task_user_time) as takemea_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),getdate()) as takemea_wait_time,
            DATEDIFF(minute,isnull(o.task_order_time,o.create_date),o.task_time) as use_send_time,
            DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),getdate()) as use_send_wait_time,
            s.name stores_name,
            b.brand_name,
            o.*
--             isnull(g.send_type,99) as send_type
            from view_cds_order_info o
            left join cds_stores s on o.stores_id = s.stores_id
            left join cds_brand b on o.brand_id = b.brand_id
--             left join cds_gift_register_list g on g.phone = o.receiver_phone
         
         WHERE o.create_date >= ? 
            
            
                 AND o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-17 14:36:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:2017-08-15
参数2:2017-08-15
 
[INFO][2017-08-17 14:36:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 14:36:12] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 14:36:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:36:17] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 14:36:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:36:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 14:36:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_gift.getHistoryPageRecord: 
select count(0) from (select
            DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
            DATEDIFF(minute,o.create_date,getdate()) as pack_wait_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),o.task_user_time) as takemea_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),getdate()) as takemea_wait_time,
            DATEDIFF(minute,isnull(o.task_order_time,o.create_date),o.task_time) as use_send_time,
            DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),getdate()) as use_send_wait_time,
            s.name stores_name,
            b.brand_name,
            o.*
--             isnull(g.send_type,99) as send_type
            from view_cds_order_info o
            left join cds_stores s on o.stores_id = s.stores_id
            left join cds_brand b on o.brand_id = b.brand_id
--             left join cds_gift_register_list g on g.phone = o.receiver_phone
         
         WHERE o.create_date >= ? 
            
            
                 AND o.create_date <= ? + ' 23:59:59')  tmp_count 
[INFO][2017-08-17 14:36:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2017-08-15
参数2:2017-08-15
 
[INFO][2017-08-17 14:36:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 cds_gift.getHistoryPageRecord: 
select
            DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
            DATEDIFF(minute,o.create_date,getdate()) as pack_wait_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),o.task_user_time) as takemea_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),getdate()) as takemea_wait_time,
            DATEDIFF(minute,isnull(o.task_order_time,o.create_date),o.task_time) as use_send_time,
            DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),getdate()) as use_send_wait_time,
            s.name stores_name,
            b.brand_name,
            o.*
--             isnull(g.send_type,99) as send_type
            from view_cds_order_info o
            left join cds_stores s on o.stores_id = s.stores_id
            left join cds_brand b on o.brand_id = b.brand_id
--             left join cds_gift_register_list g on g.phone = o.receiver_phone
         
         WHERE o.create_date >= ? 
            
            
                 AND o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-17 14:36:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10 参数1:2017-08-15
参数2:2017-08-15
 
[INFO][2017-08-17 14:36:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-5 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 14:36:18] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-5  
[INFO][2017-08-17 14:36:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:36:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 14:36:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 14:36:19] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 14:36:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:36:21] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 14:36:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:36:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 14:36:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_gift.getPageRecord: 
select count(0) from (select
            DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
            DATEDIFF(minute,o.create_date,getdate()) as pack_wait_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),o.task_user_time) as takemea_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),getdate()) as takemea_wait_time,
            DATEDIFF(minute,isnull(o.task_order_time,o.create_date),o.task_time) as use_send_time,
            DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),getdate()) as use_send_wait_time,
            s.name stores_name,
            b.brand_name,
            o.*
--             isnull(g.send_type,99) as send_type
            from cds_order_info o
            left join cds_stores s on o.stores_id = s.stores_id
            left join cds_brand b on o.brand_id = b.brand_id
--             left join cds_gift_register_list g on g.phone = o.receiver_phone
         
         WHERE o.create_date >= ? 
            
            
                 AND o.create_date <= ? + ' 23:59:59')  tmp_count 
[INFO][2017-08-17 14:36:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2017-08-17
参数2:2017-08-17
 
[INFO][2017-08-17 14:36:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_gift.getPageRecord: 
select
            DATEDIFF(minute,o.create_date,o.pack_user_time)   as pack_time,
            DATEDIFF(minute,o.create_date,getdate()) as pack_wait_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),o.task_user_time) as takemea_time,
            DATEDIFF(minute,isnull(o.pack_user_time,o.create_date),getdate()) as takemea_wait_time,
            DATEDIFF(minute,isnull(o.task_order_time,o.create_date),o.task_time) as use_send_time,
            DATEDIFF(minute,isnull(isnull(o.task_user_time,o.pack_user_time),o.create_date),getdate()) as use_send_wait_time,
            s.name stores_name,
            b.brand_name,
            o.*
--             isnull(g.send_type,99) as send_type
            from cds_order_info o
            left join cds_stores s on o.stores_id = s.stores_id
            left join cds_brand b on o.brand_id = b.brand_id
--             left join cds_gift_register_list g on g.phone = o.receiver_phone
         
         WHERE o.create_date >= ? 
            
            
                 AND o.create_date <= ? + ' 23:59:59' 
[INFO][2017-08-17 14:36:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9 参数1:2017-08-17
参数2:2017-08-17
 
[INFO][2017-08-17 14:36:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-10 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 14:36:22] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-10  
[INFO][2017-08-17 14:36:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:36:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 14:36:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 14:36:25] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1  
[INFO][2017-08-17 14:36:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:36:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 14:36:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 14:36:31] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6  
[INFO][2017-08-17 14:36:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT
                  
                    stores_id
                 , 
                    name
                 
                FROM cds_stores
             


          
         
            ORDER BY stores_id 
[INFO][2017-08-17 14:36:36] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 14:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 14:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 14:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 14:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 baseSqlMap.getRecord: 
SELECT * FROM cds_class_type
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 14:36:37] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 14:36:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_brand
             


          
         
            ORDER BY brand_id 
[INFO][2017-08-17 14:36:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 14:36:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 baseSqlMap.getRecord: 
SELECT * FROM cds_class
             


          
         
            ORDER BY class_id 
[INFO][2017-08-17 14:36:38] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 14:39:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-4 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 14:39:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-4  
[INFO][2017-08-17 14:39:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-7 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 14:39:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-7  
[INFO][2017-08-17 14:39:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-6 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 14:39:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-6 参数1:1032
 
[INFO][2017-08-17 14:41:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-9 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 14:41:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-9  
[INFO][2017-08-17 14:41:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-1 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 14:41:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-1 参数1:1032
 
[INFO][2017-08-17 14:41:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-2 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 14:41:01] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-2  
[INFO][2017-08-17 14:44:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-3 cds_reminder.getCount: 
select count(1) as allcount  from cds_reminder where DateDiff(dd,cr_time,getdate())=0 and do_status=1 
[INFO][2017-08-17 14:44:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-3  
[INFO][2017-08-17 14:44:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:164) http-nio-80-exec-8 cds_reminder.getRole: 
select * from cds_auth_access where role_id in (select a.id from cds_role a left join cds_role_user b on a.id=b.role_id where  b.user_id = ?) and rule_name = 'shop/reminder/index' 
[INFO][2017-08-17 14:44:42] com.framework.inteceptor.MybatisPaginationInterceptor.printSql(MybatisPaginationInterceptor.java:210) http-nio-80-exec-8 参数1:1032
 
